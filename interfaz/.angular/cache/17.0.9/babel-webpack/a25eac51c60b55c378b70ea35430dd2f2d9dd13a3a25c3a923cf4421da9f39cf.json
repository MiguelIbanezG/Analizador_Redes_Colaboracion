{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/info.service\";\nimport * as i2 from \"../services/api.service\";\nimport * as i3 from \"../services/spinner.service\";\nimport * as i4 from \"../spinner/spinner.component\";\nChart.register(...registerables);\nexport class InfoComponent {\n  constructor(infoService, apiService, spinnerService) {\n    this.infoService = infoService;\n    this.apiService = apiService;\n    this.spinnerService = spinnerService;\n    this.allPublications = 0;\n    this.allAuthors = 0;\n    this.allConferences = 0;\n    this.loadingGraph1 = true;\n    this.loadingGraph2 = true;\n    this.loadingGraph3 = true;\n  }\n  ngOnInit() {\n    this.spinnerService.show();\n    this.main();\n  }\n  getPublicationsbyYear() {\n    this.apiService.getPublicationsbyYear().subscribe({\n      next: response => {\n        this.infoService.PublicationsByYear = response;\n        console.log(this.infoService.PublicationsByYear);\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getPublicationsbyYear:', error);\n      }\n    });\n  }\n  getAuthorsbyYear() {\n    this.apiService.getAuthorsbyYear().subscribe({\n      next: response => {\n        this.infoService.AuthorsByYear = response;\n        this.infoService.AuthorsByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n      },\n      error: error => {\n        console.error('Error al obtener los autores en getAuthorsbyYear:', error);\n      }\n    });\n  }\n  getConferencesbyYear() {\n    this.apiService.getConferencesbyYear().subscribe({\n      next: response => {\n        this.infoService.ConferencesByYear = response;\n        this.infoService.ConferencesByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n      },\n      error: error => {\n        console.error('Error al obtener las conferencias en getConferencesbyYear:', error);\n      }\n    });\n  }\n  getPublications() {\n    this.apiService.getPublications().subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.infoService.AllPublications = response[0].all_publications;\n        } else {\n          this.infoService.AllPublications = 0;\n        }\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getPublications:', error);\n      }\n    });\n  }\n  getConferences() {\n    this.apiService.getConferences().subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.infoService.AllConferences = response[0].all_conferences;\n        } else {\n          this.infoService.AllConferences = 0;\n        }\n      },\n      error: error => {\n        console.error('Error al obtener las conferencias en getConferences:', error);\n      }\n    });\n  }\n  getAuthors() {\n    this.apiService.getAuthors().subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.infoService.AllAuthors = response[0].all_authors;\n        } else {\n          this.infoService.AllAuthors = 0;\n        }\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getBooks:', error);\n      }\n    });\n  }\n  generateBarChart(idChart, label, labels, data) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          backgroundColor: 'rgb(0, 22, 68)',\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  generateBarChartTriple(idChart, labels, ConferencesAndPapers, JournalArticles, Thesis) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Conferences and Papers',\n          data: ConferencesAndPapers,\n          backgroundColor: 'rgba(255, 99, 132, 0.5)',\n          borderColor: 'rgba(255, 99, 132, 0.5)',\n          borderWidth: 1\n        }, {\n          label: 'Journal Articles',\n          data: JournalArticles,\n          backgroundColor: 'rgba(54, 162, 235, 1)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 1\n        }, {\n          label: 'Thesis',\n          data: Thesis,\n          backgroundColor: 'rgba(255, 206, 86, 2)',\n          borderColor: 'rgba(255, 206, 86, 2)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          },\n          x: {\n            stacked: true\n          }\n        }\n      }\n    });\n  }\n  waitForData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (_this.infoService.PublicationsByYear.length < 1 || _this.infoService.ConferencesByYear.length < 1 || _this.infoService.AuthorsByYear.length < 1) {\n        // Espera 1 segundo antes de verificar de nuevo\n        yield new Promise(resolve => setTimeout(resolve, 10000));\n      }\n    })();\n  }\n  main() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (_this2.infoService.AllAuthors < 1) {\n          _this2.getAuthors();\n        }\n        if (_this2.infoService.AllConferences < 1) {\n          _this2.getConferences();\n        }\n        if (_this2.infoService.AllPublications < 1) {\n          _this2.getPublications();\n        }\n        while (_this2.infoService.AllPublications < 1 || _this2.infoService.AllConferences < 1 || _this2.infoService.AllAuthors < 1) {\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        _this2.allAuthors = _this2.infoService.AllAuthors;\n        _this2.allPublications = _this2.infoService.AllPublications;\n        _this2.allConferences = _this2.infoService.AllConferences;\n        if (_this2.infoService.PublicationsByYear.length < 1) {\n          _this2.getPublicationsbyYear();\n        }\n        if (_this2.infoService.ConferencesByYear.length < 1) {\n          _this2.getConferencesbyYear();\n        }\n        if (_this2.infoService.AuthorsByYear.length < 1) {\n          _this2.getAuthorsbyYear();\n        }\n        while (_this2.infoService.ConferencesByYear.length < 1) {\n          _this2.loadingGraph1 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        _this2.loadingGraph1 = false;\n        //Conferences by Year\n        const Conferencesyears = _this2.infoService.ConferencesByYear.map(item => item.yearName);\n        _this2.generateBarChart('barChart3', 'Conferences by Year', Conferencesyears, _this2.infoService.ConferencesByYear.map(item => item.allConferences));\n        while (_this2.infoService.AuthorsByYear.length < 1) {\n          _this2.loadingGraph2 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        _this2.loadingGraph2 = false;\n        //Authors by Year\n        const Authorsyears = _this2.infoService.AuthorsByYear.map(item => item.yearName);\n        _this2.generateBarChart('barChart2', 'Authors by Year', Authorsyears, _this2.infoService.AuthorsByYear.map(item => item.allAuthors));\n        while (_this2.infoService.PublicationsByYear.length < 1) {\n          _this2.loadingGraph3 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        _this2.loadingGraph3 = false;\n        //Publications by Year\n        _this2.generateBarChartTriple('tripleBarChart', _this2.infoService.PublicationsByYear.map(item => item.yearName), _this2.infoService.PublicationsByYear.map(item => item.ConferencesAndPapers), _this2.infoService.PublicationsByYear.map(item => item.JournalArticles), _this2.infoService.PublicationsByYear.map(item => item.Thesis));\n        _this2.spinnerService.hide();\n      } catch (error) {\n        console.error('Error in getData:', error);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function InfoComponent_Factory(t) {\n    return new (t || InfoComponent)(i0.ɵɵdirectiveInject(i1.InfoService), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.SpinnerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InfoComponent,\n    selectors: [[\"info-config\"]],\n    decls: 29,\n    vars: 3,\n    consts: [[1, \"allNumbers\"], [1, \"click-element\"], [1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [1, \"overlay\"], [\"id\", \"tripleBarChart\"], [\"id\", \"barChart2\"], [\"id\", \"barChart3\"]],\n    template: function InfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\");\n        i0.ɵɵtext(1, \"Information\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0)(3, \"ul\")(4, \"li\", 1);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"li\", 1);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"li\", 1);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"div\", 3)(12, \"h3\");\n        i0.ɵɵtext(13, \"Number of Conferences and Papers, Journal Articles and Thesis by Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 5);\n        i0.ɵɵelement(16, \"app-spinner\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"canvas\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(18, \"div\", 2)(19, \"div\", 3)(20, \"h3\");\n        i0.ɵɵtext(21, \"Number of Authors by Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\", 4);\n        i0.ɵɵelement(23, \"canvas\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(24, \"div\", 3)(25, \"h3\");\n        i0.ɵɵtext(26, \"Number of Conferences by Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 4);\n        i0.ɵɵelement(28, \"canvas\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"Total of Publications: \", ctx.allPublications, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Total of Authors: \", ctx.allAuthors, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Total of Conferences: \", ctx.allConferences, \"\");\n      }\n    },\n    dependencies: [i4.SpinnerComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 40px;\\n}\\n\\n.flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 95%;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 100%; \\n\\n  height: auto;\\n  display: block;\\n}\\n\\n.allNumbers[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n}\\n\\n.click-element[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  margin-bottom: 5px;\\n}\\n\\n.click-element[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.05);\\n  transition: transform 0.3s ease;\\n  font-weight: bold;\\n}\\n\\n.overlay[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 50px;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 10;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaW5mby9pbmZvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUNoQjtFQUNJLGtCQUFBO0VBQ0EsZUFBQTtBQUNKOztBQUNBO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FBRUo7O0FBQ0E7RUFDSSxhQUFBO0VBQ0EsbUJBQUE7QUFFSjs7QUFDQTtFQUNJLGdDQUFBO0VBQ0EsYUFBQTtFQUNBLFVBQUE7QUFFSjs7QUFDQTtFQUNJLGVBQUEsRUFBQSxpQ0FBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FBRUo7O0FBQ0E7RUFDSSxlQUFBO0FBRUo7O0FBR0E7RUFDSSxlQUFBO0VBQ0Esa0JBQUE7QUFBSjs7QUFHRTtFQUNFLHNCQUFBO0VBQ0EsK0JBQUE7RUFDQSxpQkFBQTtBQUFKOztBQUdBO0VBQ0ksa0JBQUE7RUFDQSxTQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBQUoiLCJzb3VyY2VzQ29udGVudCI6WyJcbmgye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDQwcHg7XG4gIH1cbi5mbGV4LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uZmxleC1pdGVtIHtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5jYW52YXMtY29udGFpbmVyIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gICAgcGFkZGluZzogMjBweDtcbiAgICB3aWR0aDogOTUlO1xufVxuICBcbmNhbnZhcyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlOyAvKiBIYWNlIGxhcyBncsODwqFmaWNhcyByZXNwb25zaXZlICovXG4gICAgaGVpZ2h0OiBhdXRvOyBcbiAgICBkaXNwbGF5OiBibG9jazsgXG59XG5cbi5hbGxOdW1iZXJze1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBcblxufVxuXG4uY2xpY2stZWxlbWVudCB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgfVxuICBcbiAgLmNsaWNrLWVsZW1lbnQ6aG92ZXIge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuXG4ub3ZlcmxheSB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIHRvcDogNTBweDtcbiAgICBsZWZ0OiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB6LWluZGV4OiAxMDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","register","InfoComponent","constructor","infoService","apiService","spinnerService","allPublications","allAuthors","allConferences","loadingGraph1","loadingGraph2","loadingGraph3","ngOnInit","show","main","getPublicationsbyYear","subscribe","next","response","PublicationsByYear","console","log","error","getAuthorsbyYear","AuthorsByYear","sort","a","b","parseInt","yearName","getConferencesbyYear","ConferencesByYear","getPublications","length","AllPublications","all_publications","getConferences","AllConferences","all_conferences","getAuthors","AllAuthors","all_authors","generateBarChart","idChart","label","labels","data","barChart","type","datasets","backgroundColor","borderColor","borderWidth","options","plugins","legend","color","font","size","family","scales","y","beginAtZero","generateBarChartTriple","ConferencesAndPapers","JournalArticles","Thesis","x","stacked","waitForData","_this","_asyncToGenerator","Promise","resolve","setTimeout","_this2","Conferencesyears","map","item","Authorsyears","hide","_","i0","ɵɵdirectiveInject","i1","InfoService","i2","ApiService","i3","SpinnerService","_2","selectors","decls","vars","consts","template","InfoComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/info/info.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/info/info.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { Chart, registerables } from 'chart.js';\nimport { InfoService } from '../services/info.service';\nimport { SpinnerService } from '../services/spinner.service';\nChart.register(...registerables);\n\n\n@Component({\n  selector: 'info-config',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit{\n  \n  allPublications = 0;\n  allAuthors = 0;\n  allConferences = 0;\n  loadingGraph1 = true;\n  loadingGraph2 = true;\n  loadingGraph3 = true;\n\n  barChart!: Chart;\n  \n\n  constructor(\n    private infoService: InfoService,\n    private apiService: ApiService,\n    private spinnerService: SpinnerService\n  ) {}\n\n\n  ngOnInit() {\n    this.spinnerService.show();\n    this.main();\n  }\n\n  getPublicationsbyYear() {\n    this.apiService.getPublicationsbyYear().subscribe({\n      next: (response: any[]) => {\n        this.infoService.PublicationsByYear = response; \n        console.log(this.infoService.PublicationsByYear)\n     \n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getPublicationsbyYear:', error);\n      }\n    });\n  }\n\n  getAuthorsbyYear() {\n    this.apiService.getAuthorsbyYear().subscribe({\n      next: (response: any[]) => {\n        this.infoService.AuthorsByYear = response; \n        this.infoService.AuthorsByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n  \n      },\n      error: (error: any) => {\n        console.error('Error al obtener los autores en getAuthorsbyYear:', error);\n      }\n    });\n  }\n\n  getConferencesbyYear() {\n \n    this.apiService.getConferencesbyYear().subscribe({\n      next: (response: any[]) => {\n        this.infoService.ConferencesByYear = response; \n        this.infoService.ConferencesByYear .sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n \n      },\n      error: (error: any) => {\n        console.error('Error al obtener las conferencias en getConferencesbyYear:', error);\n      }\n    });\n  }\n\n  getPublications() {\n    this.apiService.getPublications().subscribe({\n      next: (response: any[]) => {\n  \n        if (response.length > 0) {\n          this.infoService.AllPublications = response[0].all_publications;\n        } else {\n          this.infoService.AllPublications = 0;\n        }\n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getPublications:', error);\n      }\n    });\n  }\n\n  getConferences() {\n    this.apiService.getConferences().subscribe({\n      next: (response: any[]) => {\n  \n        if (response.length > 0) {\n          this.infoService.AllConferences = response[0].all_conferences;\n        } else {\n          this.infoService.AllConferences = 0;\n        }\n      },\n      error: (error: any) => {\n        console.error('Error al obtener las conferencias en getConferences:', error);\n      }\n    });\n  }\n\n  getAuthors() {\n    this.apiService.getAuthors().subscribe({\n      next: (response: any[]) => {\n  \n        if (response.length > 0) {\n          this.infoService.AllAuthors = response[0].all_authors;\n        } else {\n          this.infoService.AllAuthors = 0;\n        }\n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getBooks:', error);\n      }\n    });\n  }\n\n\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n\n  generateBarChartTriple(idChart: string, labels: any[], ConferencesAndPapers: any[], JournalArticles: any[], Thesis: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Conferences and Papers',\n            data: ConferencesAndPapers,\n            backgroundColor: 'rgba(255, 99, 132, 0.5)', \n            borderColor: 'rgba(255, 99, 132, 0.5)',\n            borderWidth: 1\n          },\n          {\n            label: 'Journal Articles',\n            data: JournalArticles,\n            backgroundColor: 'rgba(54, 162, 235, 1)', \n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n          },\n          {\n            label: 'Thesis',\n            data: Thesis,\n            backgroundColor: 'rgba(255, 206, 86, 2)',\n            borderColor: 'rgba(255, 206, 86, 2)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          },\n          x:{\n            stacked: true\n          }\n        }\n      }\n    });\n  }\n\n  async waitForData() {\n    while (this.infoService.PublicationsByYear.length < 1 || this.infoService.ConferencesByYear.length < 1 || this.infoService.AuthorsByYear.length < 1) {\n        // Espera 1 segundo antes de verificar de nuevo\n        await new Promise(resolve => setTimeout(resolve, 10000));\n    }\n  } \n\n  async main(){\n    try {\n    \n\n        if(this.infoService.AllAuthors < 1){\n          this.getAuthors();\n        }\n        if(this.infoService.AllConferences < 1){\n          this.getConferences();\n        }\n        if(this.infoService.AllPublications < 1){\n          this.getPublications();\n        }\n\n        while(this.infoService.AllPublications < 1 || this.infoService.AllConferences < 1\n          || this.infoService.AllAuthors < 1){\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n\n\n        this.allAuthors = this.infoService.AllAuthors\n        this.allPublications = this.infoService.AllPublications\n        this.allConferences = this.infoService.AllConferences\n\n\n        if(this.infoService.PublicationsByYear.length < 1){\n          this.getPublicationsbyYear();\n        }\n      \n        if(this.infoService.ConferencesByYear.length < 1){\n          this.getConferencesbyYear();\n        }\n      \n        if(this.infoService.AuthorsByYear.length < 1){\n          this.getAuthorsbyYear();\n        }\n        while(this.infoService.ConferencesByYear.length < 1){\n          this.loadingGraph1 = true;\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        this.loadingGraph1 = false;\n\n        //Conferences by Year\n        const Conferencesyears = this.infoService.ConferencesByYear.map(item => item.yearName);\n        this.generateBarChart('barChart3', 'Conferences by Year', Conferencesyears, this.infoService.ConferencesByYear.map(item => item.allConferences));\n \n        while(this.infoService.AuthorsByYear.length < 1){\n          this.loadingGraph2 = true;\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        this.loadingGraph2 = false;\n        //Authors by Year\n        const Authorsyears = this.infoService.AuthorsByYear.map(item => item.yearName);\n        this.generateBarChart('barChart2', 'Authors by Year', Authorsyears, this.infoService.AuthorsByYear.map(item => item.allAuthors));\n\n        while(this.infoService.PublicationsByYear.length < 1){\n          this.loadingGraph3 = true;\n          await new Promise(resolve => setTimeout(resolve, 1000));\n        }\n        this.loadingGraph3 = false;\n        //Publications by Year\n        this.generateBarChartTriple(\n          'tripleBarChart',\n          this.infoService.PublicationsByYear.map(item => item.yearName),\n          this.infoService.PublicationsByYear.map(item => item.ConferencesAndPapers),\n          this.infoService.PublicationsByYear.map(item => item.JournalArticles),\n          this.infoService.PublicationsByYear.map(item => item.Thesis)\n        );\n \n        this.spinnerService.hide()\n\n    \n\n\n\n       \n\n  } catch (error) {\n    console.error('Error in getData:', error);\n  }\n\n  }\n \n}\n\n","\n<h2>Information</h2>\n\n<div class=\"allNumbers\">\n    <ul>\n        <li class=\"click-element\" >Total of Publications: {{allPublications}}</li>\n        <li class=\"click-element\">Total of Authors: {{allAuthors}}</li>\n        <li class=\"click-element\">Total of Conferences: {{allConferences}}</li>\n      </ul>\n</div>\n\n<div class=\"flex-container\" >\n\n\n  <div class=\"flex-item\">\n      <h3>Number of Conferences and Papers, Journal Articles and Thesis by Year</h3>\n  \n      <div class=\"canvas-container\">\n        <div class=\"overlay\">\n          <app-spinner></app-spinner>\n        </div>\n        <canvas id=\"tripleBarChart\"></canvas>\n      </div>\n  </div>\n\n</div>\n\n \n\n<div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n        <h3>Number of Authors by Year</h3>\n  \n        <div class=\"canvas-container\">\n    \n          <canvas id=\"barChart2\"></canvas>\n        </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Number of Conferences by Year</h3>\n\n      <div class=\"canvas-container\">\n    \n        <canvas id=\"barChart3\"></canvas>\n      </div>\n  </div>\n\n \n</div>\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}