{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nimport { singular } from 'pluralize';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"../services/stadistics.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../services/spinner.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"angular-tag-cloud-module\";\nimport * as i7 from \"../spinner/spinner.component\";\nconst _c0 = [\"chartCanvas\"];\nfunction StatisticsComponent_hr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"hr\", 11);\n  }\n}\nfunction StatisticsComponent_hr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"hr\", 11);\n  }\n}\nfunction StatisticsComponent_div_245_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵelement(1, \"app-spinner\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", ctx_r2.papers.length < 1);\n  }\n}\nChart.register(...registerables);\nexport class StatisticsComponent {\n  constructor(apiService, stadisticsService, http, spinnerService) {\n    this.apiService = apiService;\n    this.stadisticsService = stadisticsService;\n    this.http = http;\n    this.spinnerService = spinnerService;\n    this.selectedTitles = [];\n    this.selectedYears = [];\n    this.conferenceOption = \"\";\n    this.venueName = [];\n    this.papers = [];\n    this.articles = [];\n    this.collaborations = [];\n    this.connectedComponents = [];\n    this.singleAuthor = [];\n    this.statistics = [];\n    this.statsAuthors = [];\n    this.statsPaper = [];\n    this.statsArticle = [];\n    this.journalsCount = 0;\n    this.ConferencesCount = 0;\n    this.totalAuthorsByYear = [];\n    this.totalPapersByYear = [];\n    this.totalArticlesByYear = [];\n    this.singleArticles = [];\n    this.singlePapers = [];\n    this.decadeStats = [];\n    this.researchers = [];\n    this.papersWithAuthors = [];\n    this.loadingTable1 = true;\n    this.loadingTable2 = true;\n    this.conferenceName = [];\n    this.commonNames = {};\n    this.options = {\n      width: 500,\n      height: 200,\n      overflow: false,\n      realignOnResize: false,\n      strict: false,\n      step: 2\n    };\n    this.cloudData = [];\n  }\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n  waitResearcherNoEmpty() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (!_this.researchers || _this.researchers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitPapersNoEmpty() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this2.papers || _this2.papers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitArticlesNoEmpty() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this3.articles || _this3.articles.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.researchers = [];\n        this.researchers = response;\n        this.statsResearchers();\n        this.statsTotalAuthorsByYear();\n        if (this.researchers.length > 1) {\n          if (this.lineChart) {\n            this.lineChart.destroy();\n          }\n          this.generateChart('lineChart1', 'Number of authors', this.statsAuthors);\n          this.generateTotalAuthorsChart('lineChart6', 'Total Authors by Year', this.totalAuthorsByYear);\n        }\n      },\n      error: error => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n  }\n  statsTotalAuthorsByYear() {\n    const years = this.selectedTitles.map(title => title.properties.name);\n    years.sort((a, b) => parseInt(a) - parseInt(b));\n    this.totalArticlesByYear = [];\n    this.totalAuthorsByYear = years.map(year => {\n      const totalAuthors = this.researchers.reduce((total, researcher) => {\n        if (researcher.years.includes(year)) {\n          return total + 1;\n        }\n        return total;\n      }, 0);\n      return {\n        year: year,\n        totalAuthors: totalAuthors\n      };\n    });\n  }\n  getPapers() {\n    this.apiService.getPapers(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.papers = response;\n        console.log(this.papers);\n        this.statsPapers();\n        this.statsTotalPapersByYear();\n        if (this.papers.length > 0) {\n          this.generateChart('lineChart2', 'Number of papers', this.statsPaper);\n          this.generateTotalAuthorsChart('lineChart7', 'Total Papers by Year', this.totalPapersByYear);\n        }\n      },\n      error: error => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n  getArticles() {\n    this.apiService.getArticles(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.articles = response;\n        this.statsArticles();\n        this.statsTotalArticlesByYear();\n        if (this.articles && this.articles.length > 0) {\n          this.generateChart('lineChart15', 'Number of Articles', this.statsArticle);\n          this.generateTotalAuthorsChart('lineChart14', 'Total Articles by Year', this.totalArticlesByYear);\n        }\n      },\n      error: error => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n  statsTotalPapersByYear() {\n    let years = this.papers.map(paper => paper.year);\n    years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n    years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n    this.totalPapersByYear = years.map(year => {\n      const totalPapers = this.papers.reduce((total, paper) => {\n        const integer = paper.numPapers.low;\n        if (paper.year === year) {\n          return total + integer;\n        }\n        return total;\n      }, 0);\n      return {\n        year: year,\n        totalAuthors: totalPapers\n      };\n    });\n  }\n  statsTotalArticlesByYear() {\n    const years = this.articles.map(paper => paper.year);\n    this.totalArticlesByYear = years.map(year => {\n      const totalPapers = this.articles.reduce((total, paper) => {\n        const numArticles = paper.numPapers.low;\n        if (paper.year === year) {\n          return total + numArticles;\n        }\n        return total;\n      }, 0);\n      return {\n        year: year,\n        totalAuthors: totalPapers\n      };\n    });\n  }\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: error => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n  getConnectedComponents() {\n    this.apiService.getConnectedComponents(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConnectedComponentsByvenue() {\n    this.apiService.getConnectedComponentsByvenue(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n        this.generateChart4('lineChart13', 'Number of Connected Components', this.statistics[7]);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConferencebyProceeding() {\n    this.apiService.getConferencebyProceeding(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.stadisticsService.conferencesNames = [];\n        this.stadisticsService.years = [];\n        this.stadisticsService.inprocedings = [];\n        response.forEach(({\n          title,\n          year,\n          numberOfInProceedings\n        }) => {\n          this.stadisticsService.conferencesNames.push(title);\n          this.stadisticsService.years.push(year);\n          this.stadisticsService.inprocedings.push(numberOfInProceedings);\n        });\n        this.loadingTable1 = false;\n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n      },\n      error: error => {\n        console.error('Error in getConferencebyProceeding:', error);\n      }\n    });\n  }\n  generateTablesProceeding(venueTitles, years, numberOfInProceedings) {\n    const table = document.querySelector('#tableProceeding tbody');\n    if (table instanceof HTMLElement) {\n      table.innerHTML = ''; // Limpiar tabla existente antes de agregar nuevas filas\n      venueTitles.forEach((venueTitle, index) => {\n        // Divide el título en partes usando la coma como delimitador\n        const parts = venueTitle.split(',');\n        if (parts.length == 6) {\n          parts[4] = parts[4].replace(\"Proceedings\", \"\");\n          const date = parts[4].split('.');\n          // Construye el objeto que contiene los datos para la tabla\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[2] + ',' + parts[3],\n            date: date.slice(0).join(' ')\n          };\n          // Crea una fila para la tabla y agrega los datos\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          // Agrega la fila a la tabla\n          table.appendChild(row);\n        }\n        if (parts.length == 5) {\n          parts[3] = parts[3].replace(\"Proceedings\", \"\").trim();\n          const date = parts[3].split('.');\n          const hasNumber = /\\d/.test(date[0]);\n          if (hasNumber) {\n            if (parts[1].includes(\"Florence\")) {\n              const rowData = {\n                name: parts[0],\n                location: parts[1].trim() + ',' + parts[2],\n                date: date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            } else {\n              // Construye el objeto que contiene los datos para la tabla\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2],\n                date: date[0]\n              };\n              // Crea una fila para la tabla y agrega los datos\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              // Agrega la fila a la tabla\n              table.appendChild(row);\n            }\n          } else {\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4]\n            };\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n          }\n        }\n        if (parts.length == 7) {\n          parts[5] = parts[5].replace(\"Proceedings\", \"\");\n          const date = parts[5].split('.');\n          if (parts[2].length > 15) {\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[3] + ', ' + parts[4],\n              date: date[0]\n            };\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            table.appendChild(row);\n          } else {\n            const isValidFormat = /^[a-zA-Z]+\\s+\\d{1,2}(-\\d{1,2}|\\d{1,2}[a-zA-Z]+\\s+\\d{1,2})$/.test(date[0].trim());\n            if (isValidFormat) {\n              if (parts[2].includes(\"ER\")) {\n                const rowData = {\n                  name: parts[0] + ',' + parts[1].trim() + '-' + parts[2],\n                  location: parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              } else {\n                const rowData = {\n                  name: parts[0] + '-' + parts[1].trim(),\n                  location: parts[2] + ', ' + parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              }\n            } else {\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2] + ', ' + parts[3],\n                date: parts[4] + ', ' + date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            }\n          }\n        }\n      });\n    }\n  }\n  waitAuthorsWithPapersNoEmpty() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this4.papersWithAuthors || _this4.papersWithAuthors.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitSingleAuthorsNoEmpty() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this5.singleAuthor || _this5.singleAuthor.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getAuthorsPapers() {\n    var _this6 = this;\n    this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          _this6.singleAuthor = response;\n          _this6.statsSingleAuthor();\n          if (_this6.barChart) {\n            _this6.barChart.destroy();\n          }\n          if (_this6.barChart2) {\n            _this6.barChart2.destroy();\n          }\n          _this6.generateBarChartArticles('barChart2', 'Single Author Articles', _this6.statistics[8].years, _this6.statistics[8].porcentajes);\n          _this6.generateBarChart('barChart1', 'Single Author Papers', _this6.statistics[4].years, _this6.statistics[4].porcentajes);\n        });\n        return function next(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      error: error => {\n        console.error('Error in getAuthorsPapers:', error);\n      }\n    });\n  }\n  /**Function to obtain the distributions of both authors by papers and papers by authors*/\n  getDistributions() {\n    const labels = ['1', '2', '3', '4', '5 o más'];\n    // This represents the number of authors that each paper has.\n    const authorsByPaper = [1, 2, 3, 4].map(numAuthors => this.papersWithAuthors.filter(paper => paper.numAuthors === numAuthors).length);\n    authorsByPaper[4] = this.papersWithAuthors.filter(paper => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapers.low, 0);\n    allPapers += this.articles.reduce((all, paper) => all + paper.numPapers.low, 0);\n    // This represents the number of published papers that each author has.\n    const papersByAuthor = [1, 2, 3, 4].map(numPubs => this.singleAuthor.filter(paper => paper.numPublications === numPubs).length);\n    papersByAuthor[4] = this.singleAuthor.filter(paper => paper.numPublications >= 5).length;\n    const allAuthors = this.singleAuthor.length;\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n  getDemographicData() {\n    const datasets = this.researchers.map(researcher => {\n      let name = researcher.researcher.properties.name.split(' ')[0];\n      if (name.includes(\"-\")) {\n        name = name.split('-')[0];\n      }\n      const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      const datasetByYear = years.map(year => {\n        const info = this.commonNames[name];\n        const genero = info ? info.genero : 'Unknown';\n        const frecuencias = info ? info.frec_paises : {};\n        return {\n          year,\n          name,\n          genero,\n          frecuencias\n        };\n      });\n      return datasetByYear;\n    }).flat();\n    this.statsGender(datasets);\n    this.statsGeography(datasets);\n  }\n  generateNGrams(titles, n) {\n    const ngrams = [];\n    titles.forEach(title => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  countFrequencies(ngrams) {\n    const frequencies = new Map();\n    ngrams.forEach(ngram => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n  clearTitle(title, stopwords) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    return newTitle;\n  }\n  getTopN(frequencies, n) {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n  getTopicAnalysis() {\n    // We require natural to tokenize and remove stopwords, and calculate frequencies\n    const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n    const cleanTitles = this.papersWithAuthors.map(paper => {\n      const ipName = this.clearTitle(paper.ipName, stopwords);\n      const year = parseInt(paper.year);\n      return {\n        ipName,\n        year\n      };\n    });\n    const bigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 2);\n    const trigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 3);\n    const bigramFrequencies = this.countFrequencies(bigrams);\n    const trigramFrequencies = this.countFrequencies(trigrams);\n    const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n    const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n    const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const table1 = document.querySelector('#tableBigramas tbody');\n    const table2 = document.querySelector('#tableTrigramas tbody');\n    if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n      top20BigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table1.appendChild(row);\n      });\n      top20TrigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table2.appendChild(row);\n      });\n    }\n    const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n    combinedData.sort((a, b) => b.count - a.count);\n    const maxFrecuencia = combinedData[0].count;\n    const minWeight = 0;\n    const maxWeight = 20;\n    const wordCloudData = combinedData.map((item, index) => ({\n      text: item.ngram,\n      weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n      color: this.randomColor()\n    }));\n    this.cloudData = wordCloudData;\n  }\n  calculateWeight(frec, maxFrec, minWeight, maxWeight) {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n  /**\n   * ############################################\n   */\n  statsResearchers() {\n    const names = new Set(this.researchers.map(researcher => researcher.name));\n    this.statsAuthors = [];\n    this.statsAuthors = Array.from(names).map(name => {\n      const years = this.selectedTitles.map(titulo => titulo.properties.name);\n      years.sort((a, b) => parseInt(a) - parseInt(b));\n      this.selectedYears = years;\n      const numResearchersPorAnio = years.map(anio => this.researchers.reduce((total, researcher) => {\n        if (researcher.name === name && researcher.years.includes(anio)) {\n          return total + 1;\n        }\n        return total;\n      }, 0));\n      return {\n        name: name,\n        years: years,\n        numResearchers: numResearchersPorAnio\n      };\n    });\n  }\n  statsPapers() {\n    const names = new Set(this.papers.map(paper => paper.name));\n    this.ConferencesCount = names.size;\n    this.statsPaper = Array.from(names).map(name => {\n      let years = this.papers.map(paper => paper.year);\n      years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n      years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n      console.log(years);\n      const numPapersPorAnio = years.map(year => this.papers.reduce((total, paper) => {\n        const numPapers = paper.numPapers.low;\n        if (paper.name === name && paper.year === year) {\n          return total + numPapers;\n        }\n        return total;\n      }, 0));\n      console.log(numPapersPorAnio);\n      return {\n        name: name,\n        years: years,\n        numResearchers: numPapersPorAnio\n      };\n    });\n  }\n  statsArticles() {\n    const names = new Set(this.articles.map(paper => paper.name));\n    this.journalsCount = names.size;\n    this.statsArticle = Array.from(names).map(name => {\n      const years = this.articles.map(paper => paper.year);\n      const numPapersPorAnio = years.map(year => this.articles.reduce((total, paper) => {\n        const numArticles = paper.numPapers.low;\n        if (paper.name === name && paper.year === year) {\n          return total + numArticles;\n        }\n        return total;\n      }, 0));\n      return {\n        name: name,\n        years: years,\n        numResearchers: numPapersPorAnio\n      };\n    });\n  }\n  statsColaboraciones() {\n    let colabsXtotal = [];\n    if (this.papers.length > 1) {\n      const colabsPapers = this.papers.map(paper => {\n        const colab = this.collaborations.find(c => c.year === paper.year);\n        const integer = paper.numPapers.low;\n        return {\n          year: paper.year,\n          numColabs: colab ? colab.numColabs : 0,\n          numPapers: integer\n        };\n      });\n      colabsXtotal = colabsXtotal.concat(colabsPapers);\n    }\n    if (this.articles.length > 1) {\n      const colabsArticles = this.articles.map(article => {\n        const colab = this.collaborations.find(c => c.year === article.year);\n        return {\n          year: article.year,\n          numColabs: colab ? colab.numColabs : 0,\n          numPapers: article.numPapers.low\n        };\n      });\n      colabsXtotal = colabsXtotal.concat(colabsArticles);\n    }\n    //colabsXtotal debe tener la suma de los dos valores si ha entrao en los dos ifs\n    const density = colabsXtotal.map(dato => {\n      const {\n        year,\n        numColabs,\n        numPapers\n      } = dato;\n      const density = numColabs / numPapers;\n      return {\n        density,\n        year\n      };\n    });\n    this.statistics[3] = {\n      years: density.map(dato => dato.year),\n      densidades: density.map(dato => dato.density)\n    };\n  }\n  statsConnectedComponents() {\n    // Copiar los datos originales para no afectar el orden original\n    const copiedData = [...this.connectedComponents];\n    // Ordenar los datos por año\n    copiedData.sort((a, b) => a.year - b.year);\n    // Extraer los años y componentes conectados ordenados\n    const years = copiedData.map(item => item.year);\n    const connectedComponents = copiedData.map(item => item.connectedComponents);\n    this.statistics[5] = {\n      years: years,\n      connectedComponents: connectedComponents\n      // Puedes agregar otras propiedades si es necesario\n    };\n  }\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap = new Map();\n    const venueDataMapRelative = new Map();\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName\n        });\n      }\n      const venueData = venueDataMap.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        venueData.connectedComponents.push(item.connectedComponents);\n      }\n    });\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMapRelative.has(venueName)) {\n        venueDataMapRelative.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName\n        });\n      }\n      const venueData = venueDataMapRelative.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        let adjustedComponents = item.connectedComponents;\n        while (adjustedComponents > 1) {\n          adjustedComponents /= 10;\n        }\n        venueData.connectedComponents.push(adjustedComponents);\n      }\n    });\n    this.statistics[6] = Array.from(venueDataMap.values());\n    this.statistics[7] = Array.from(venueDataMapRelative.values());\n  }\n  statsSingleAuthor() {\n    const papersWithAuthors = [];\n    // Map all the researchers, to create papersWithAuthors, which is an array that has the name of a publication\n    // and the authors who have contributed to it.\n    this.singleAuthor.forEach(author => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n          papersWithAuthors.push({\n            ipName,\n            numAuthors: 1,\n            authorNames: [author.researcher],\n            year: author.year\n          });\n        }\n      });\n    });\n    this.papersWithAuthors = papersWithAuthors;\n    // We get all the entries whose author is one, for the statistics\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers.low;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = numPapersWithSingleAuthor / numPapers * 100;\n      return {\n        year,\n        percentage\n      };\n    });\n    const porcentajeByYear2 = this.articles.map(article => {\n      const year = article.year;\n      const numPapers = article.numPapers.low;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = numPapersWithSingleAuthor / numPapers * 100;\n      return {\n        year,\n        percentage\n      };\n    });\n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n    this.statistics[8] = {\n      years: porcentajeByYear2.map(dato => dato.year),\n      porcentajes: porcentajeByYear2.map(dato => dato.percentage)\n    };\n    if (this.articles.length > 1) {\n      this.singleArticles = this.statistics[8];\n    }\n    if (this.papers.length > 1) {\n      this.singlePapers = this.statistics[4];\n    }\n  }\n  statsGeography(datasets) {\n    const mappingDate = {};\n    const datasetFiltered = datasets.filter(object => Object.keys(object.frecuencias).length > 0);\n    // Obtener todas las fechas únicas\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n    // Iterar sobre las fechas\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n      // Crear objeto de mapeo para la fecha actual\n      mappingDate[date] = {};\n      for (const object of objectDate) {\n        let countryHighest = '';\n        let highestFrequency = -1;\n        for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if (!(countryHighest in mappingDate[date])) {\n          mappingDate[date][countryHighest] = 1;\n        } else {\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n    // We normalize values according to their total\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country] / total).toFixed(4));\n      }\n    }\n    const years = Object.keys(mappingDate); // Get the keys of the years\n    const countries = Object.keys(mappingDate[years[0]]); // Get country names\n    const datasetsLabels = countries; // Labels of the data sets will be the names of the countries \n    // Create the data matrix for the countries\n    const datasetsData = countries.map(country => years.map(year => mappingDate[year][country]));\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n  }\n  filterAuthorsByDecade(authors, startYear, endYear) {\n    const filteredAuthors = [];\n    // Browse the original authors\n    authors.forEach(author => {\n      // Check if the author is within the specified decade\n      const authorYears = author.year.split(\",\").map(Number).filter(year => year >= startYear && year <= endYear);\n      if (authorYears.length > 0) {\n        // Search if there is already a merged author with the same name and decade\n        const existingAuthor = filteredAuthors.find(filteredAuthor => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Merge the existing author's entries with the current author's entries\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Add the current author to the list of filtered authors\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n    return filteredAuthors;\n  }\n  statsProlificAuthors(selectedYears) {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n    // Generate the decades within the selected year range\n    const decades = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }\n    // Sort authors by number of publications in each decade\n    decades.forEach(decade => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20) {\n        decade.authors = decade.authors.slice(0, 20);\n      }\n    });\n    // Return the decades with the authors ordered\n    return decades;\n  }\n  statsProlificAuthors2(selectedYears) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n    const tables = {\n      'degree': document.querySelector('#degree tbody')\n    };\n    for (const author of topAuthors) {\n      const table = tables['degree'];\n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n        table.appendChild(row);\n      }\n    }\n  }\n  generateTablesDecades2(decadeStats) {\n    const tables = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody')\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach(autor => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n          table.appendChild(row);\n        });\n      }\n    }\n  }\n  generateTotalAuthorsChart(idChart, label, data) {\n    const years = data.map(entry => entry.year);\n    const totalAuthors = data.map(entry => entry.totalAuthors);\n    if (idChart == \"lineChart6\") {\n      this.lineChart6 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [{\n            label: label,\n            data: totalAuthors,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart7\") {\n      this.lineChart7 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [{\n            label: label,\n            data: totalAuthors,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart = \"lineChart14\") {\n      if (this.lineChart14) {\n        this.lineChart14.destroy();\n      }\n      this.lineChart14 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [{\n            label: label,\n            data: totalAuthors,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart(idChart, label, data) {\n    const datasets = data.map((entry, index) => ({\n      label: entry.name,\n      data: entry.numResearchers,\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n    if (idChart == \"lineChart2\") {\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart1\") {\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart15\") {\n      this.lineChart15 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart3(idChart, label, labels, data) {\n    if (idChart == \"lineChart11\" || idChart == \"lineChart3\") {\n      this.lineChart3 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart4(idChart, label, data) {\n    const datasets = data.map((venue, index) => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        fill: false,\n        borderColor: this.getRandomColor(index),\n        borderWidth: 1\n      };\n    });\n    const allYears = Array.from(new Set([].concat(...datasets.map(dataset => dataset.years))));\n    allYears.sort();\n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    });\n  }\n  statsGender(datasets) {\n    const datasetsByGenre = {};\n    datasets.forEach(data => {\n      const {\n        year,\n        genero\n      } = data;\n      let genderKey = '';\n      if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n        genderKey = 'Men';\n      } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n        genderKey = 'Women';\n      } else {\n        genderKey = 'Unknown';\n      }\n      if (!datasetsByGenre[genderKey]) {\n        datasetsByGenre[genderKey] = [];\n      }\n      const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n      if (existingData) {\n        existingData.count++;\n      } else {\n        datasetsByGenre[genderKey].push({\n          year,\n          count: 1\n        });\n      }\n    });\n    // Create an object to store the ordered data\n    const sortedData = {};\n    const men = datasetsByGenre['Men'];\n    const women = datasetsByGenre['Women'];\n    // Sort men's data\n    men.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      sortedData[year] = {\n        hombres: count,\n        mujeres: 0,\n        total: count\n      };\n    });\n    // Sort the women's data and combine it with the men's data\n    women.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      if (sortedData[year]) {\n        sortedData[year].mujeres = count;\n        sortedData[year].total += count;\n      } else {\n        sortedData[year] = {\n          mujeres: count,\n          hombres: 0,\n          total: count\n        };\n      }\n    });\n    // Get the years sorted\n    const organizedYears = Object.keys(sortedData).sort();\n    const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres / sortedData[anio].total).toFixed(4)));\n    const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres / sortedData[anio].total).toFixed(4)));\n    this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n    this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n  generateMultipleGraph(chartId, labels, datasetsLabels, datasetsData) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateCircularChart(chartId, labels, datasetsLabels, datasetsData) {\n    const colors = ['#FF5733', '#3399FF'];\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],\n      borderColor: 'black'\n    }));\n    const chartConfig = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateBarChart(idChart, label, labels, data) {\n    if (idChart = \"barChart1\") {\n      this.barChart = new Chart(idChart, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(51, 153, 255)',\n            borderColor: 'rgb(51, 153, 255)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateBarChartArticles(idChart, label, labels, data) {\n    if (idChart = \"barChart2\") {\n      this.barChart2 = new Chart(idChart, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(255, 87, 51)',\n            borderColor: 'rgb(255, 87, 51)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }\n  randomColor() {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n  getRandomColor(index) {\n    let colors = {\n      0: \"rgba(51, 153, 255)\",\n      1: \"rgba(255, 0, 0, 1)\",\n      2: \"rgba(98, 192, 75, 1)\",\n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n    return colors[index];\n  }\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', {\n      responseType: 'text'\n    }).subscribe(data => {\n      this.commonNames = this.parseCommonNames(data);\n    }, error => {\n      console.error('Error al cargar los datos:', error);\n    });\n  }\n  parseCommonNames(data) {\n    const lines = data.split('\\n');\n    const dict = {};\n    let currentName = '';\n    let currentData = {\n      frec_paises: {},\n      genero: ''\n    };\n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = {\n          frec_paises: {},\n          genero: ''\n        };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n  main() {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this7.selectedTitles = _this7.stadisticsService.getSelectedTitles();\n        _this7.conferenceOption = _this7.stadisticsService.getConferenceOption();\n        _this7.venueName = _this7.stadisticsService.getVenueName();\n        if (_this7.stadisticsService.venueNameConfirm != _this7.stadisticsService.getVenueName()) {\n          _this7.getConferencebyProceeding();\n        } else {\n          _this7.generateTablesProceeding(_this7.stadisticsService.conferencesNames, _this7.stadisticsService.years, _this7.stadisticsService.inprocedings);\n        }\n        _this7.getResearchersConference();\n        _this7.getPapers();\n        _this7.getArticles();\n        _this7.getConferencebyProceeding();\n        if (_this7.researchers.length == 0) {\n          yield _this7.waitResearcherNoEmpty();\n          _this7.getDemographicData();\n        } else {\n          _this7.getDemographicData();\n        }\n        if (_this7.papers.length == 0) {\n          yield _this7.waitPapersNoEmpty();\n          _this7.getCollaborations();\n          _this7.getAuthorsPapers();\n        } else {\n          _this7.getCollaborations();\n          ;\n          _this7.getAuthorsPapers();\n        }\n        if (_this7.articles.length == 0) {\n          yield _this7.waitArticlesNoEmpty();\n          _this7.getCollaborations();\n          _this7.getAuthorsPapers();\n        } else {\n          _this7.getCollaborations();\n          ;\n          _this7.getAuthorsPapers();\n        }\n        if (_this7.papersWithAuthors.length == 0) {\n          yield _this7.waitAuthorsWithPapersNoEmpty();\n          _this7.getTopicAnalysis();\n          _this7.getDistributions();\n        } else {\n          _this7.getTopicAnalysis();\n          _this7.getDistributions();\n        }\n        if (_this7.singleAuthor.length == 0) {\n          yield _this7.waitSingleAuthorsNoEmpty();\n          _this7.decadeStats = _this7.statsProlificAuthors(_this7.selectedYears);\n          _this7.generateTablesDecades2(_this7.decadeStats);\n        } else {\n          _this7.decadeStats = _this7.statsProlificAuthors(_this7.selectedYears);\n          _this7.generateTablesDecades2(_this7.decadeStats);\n        }\n        _this7.statsProlificAuthors2(_this7.selectedYears);\n        _this7.getConnectedComponents();\n        _this7.getConnectedComponentsByvenue();\n        while (_this7.stadisticsService.conferencesNames.length < 1) {\n          _this7.loadingTable1 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n          _this7.spinnerService.show();\n        }\n        _this7.loadingTable1 = false;\n        _this7.stadisticsService.venueNameConfirm = _this7.stadisticsService.getVenueName();\n      } catch (error) {\n        console.error('Error in getData with:', error);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function StatisticsComponent_Factory(t) {\n    return new (t || StatisticsComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.StadisticsService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.SpinnerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatisticsComponent,\n    selectors: [[\"istics\"]],\n    viewQuery: function StatisticsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n      }\n    },\n    decls: 264,\n    vars: 20,\n    consts: [[1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [\"id\", \"lineChart6\"], [1, \"flex-item\", 3, \"hidden\"], [\"id\", \"lineChart1\"], [\"class\", \"line\", 4, \"ngIf\"], [\"id\", \"lineChart7\"], [\"id\", \"lineChart2\"], [\"id\", \"lineChart14\"], [\"id\", \"lineChart15\"], [1, \"line\"], [\"id\", \"lineChart3\"], [1, \"line\", 3, \"hidden\"], [\"id\", \"barChart1\"], [\"id\", \"barChart2\"], [1, \"special\"], [1, \"container-table\"], [1, \"table\"], [\"id\", \"authorsTable\"], [1, \"linev\"], [\"id\", \"papersTable\"], [1, \"flex-container2\"], [1, \"graph-bars\"], [1, \"canvas-container1\"], [1, \"legend\"], [1, \"men\"], [1, \"women\"], [\"id\", \"lineChart4\", 1, \"circular\"], [1, \"graph-bars2\"], [1, \"canvas-container2\"], [\"id\", \"lineChart8\"], [\"id\", \"lineChart5\"], [\"id\", \"tableBigramas\"], [\"id\", \"tableTrigramas\"], [1, \"conceptual\"], [3, \"config\", \"data\"], [1, \"container-table2\"], [\"id\", \"table90\"], [\"colspan\", \"2\"], [\"id\", \"table00\"], [\"id\", \"table10\", 1, \"centered-table\"], [\"id\", \"table20\", 1, \"centered-table\"], [1, \"line3\"], [\"id\", \"degree\"], [1, \"line3\", 3, \"hidden\"], [3, \"hidden\"], [1, \"table\", 3, \"hidden\"], [\"id\", \"tableProceeding\"], [\"class\", \"overlay\", 3, \"hidden\", 4, \"ngIf\"], [\"id\", \"lineChart11\"], [\"id\", \"lineChart12\"], [\"id\", \"lineChart13\"], [1, \"overlay\", 3, \"hidden\"]],\n    template: function StatisticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"h3\");\n        i0.ɵɵtext(6, \"Authors / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelement(8, \"canvas\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"h3\");\n        i0.ɵɵtext(11, \"Authors by Conference or Journal / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2);\n        i0.ɵɵelement(13, \"canvas\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(14, StatisticsComponent_hr_14_Template, 1, 0, \"hr\", 6);\n        i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 4)(17, \"h3\");\n        i0.ɵɵtext(18, \"Conference Papers / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵelement(20, \"canvas\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 4)(22, \"h3\");\n        i0.ɵɵtext(23, \"Papers by Conference / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2);\n        i0.ɵɵelement(25, \"canvas\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(26, StatisticsComponent_hr_26_Template, 1, 0, \"hr\", 6);\n        i0.ɵɵelementStart(27, \"div\", 0)(28, \"div\", 4)(29, \"h3\");\n        i0.ɵɵtext(30, \"Journal Articles / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 2);\n        i0.ɵɵelement(32, \"canvas\", 9);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\", 4)(34, \"h3\");\n        i0.ɵɵtext(35, \"Articles by Journal / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 2);\n        i0.ɵɵelement(37, \"canvas\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(38, \"hr\", 11);\n        i0.ɵɵelementStart(39, \"div\", 0)(40, \"div\", 1)(41, \"h3\");\n        i0.ɵɵtext(42, \"Density evolution over the years\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 2);\n        i0.ɵɵelement(44, \"canvas\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(45, \"hr\", 13);\n        i0.ɵɵelementStart(46, \"div\", 0)(47, \"div\", 4)(48, \"h3\");\n        i0.ɵɵtext(49, \"Percentage of single-author Papers / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 2);\n        i0.ɵɵelement(51, \"canvas\", 14);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(52, \"div\", 4)(53, \"h3\");\n        i0.ɵɵtext(54, \"Percentage of single-author Articles / Year \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"div\", 2);\n        i0.ɵɵelement(56, \"canvas\", 15);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(57, \"hr\", 11);\n        i0.ɵɵelementStart(58, \"h3\", 16);\n        i0.ɵɵtext(59, \"Distributions of authors by paper and journal and of papers and journals by author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"div\", 17)(61, \"div\", 18)(62, \"table\", 19)(63, \"thead\")(64, \"tr\")(65, \"th\");\n        i0.ɵɵtext(66, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"th\");\n        i0.ɵɵtext(68, \"Papers/Journal (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(69, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(70, \"div\", 20);\n        i0.ɵɵelementStart(71, \"div\", 18)(72, \"table\", 21)(73, \"thead\")(74, \"tr\")(75, \"th\");\n        i0.ɵɵtext(76, \"Papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(77, \"th\");\n        i0.ɵɵtext(78, \"Papers/Journal (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(79, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(80, \"hr\", 11);\n        i0.ɵɵelementStart(81, \"h3\", 16);\n        i0.ɵɵtext(82, \" Percentage of Publications Men-Women / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"div\", 22)(84, \"div\", 23)(85, \"div\", 24)(86, \"div\", 25);\n        i0.ɵɵelement(87, \"div\", 26);\n        i0.ɵɵtext(88, \" Men \");\n        i0.ɵɵelement(89, \"div\", 27);\n        i0.ɵɵtext(90, \" Women \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(91, \"canvas\", 28);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(92, \"div\", 29)(93, \"div\", 30);\n        i0.ɵɵelement(94, \"canvas\", 31);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(95, \"hr\", 11);\n        i0.ɵɵelementStart(96, \"h3\");\n        i0.ɵɵtext(97, \" Percentage of publications by Country / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(98, \"div\", 0)(99, \"div\", 1)(100, \"div\", 2);\n        i0.ɵɵelement(101, \"canvas\", 32);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(102, \"hr\", 11);\n        i0.ɵɵelementStart(103, \"h3\", 16);\n        i0.ɵɵtext(104, \"Most frequent Bigrams and Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"div\", 17)(106, \"div\", 18)(107, \"table\", 33)(108, \"thead\")(109, \"tr\")(110, \"th\");\n        i0.ɵɵtext(111, \"Bigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(112, \"th\");\n        i0.ɵɵtext(113, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(114, \"th\");\n        i0.ɵɵtext(115, \"First \");\n        i0.ɵɵelement(116, \"br\");\n        i0.ɵɵtext(117, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"th\");\n        i0.ɵɵtext(119, \"Recent \");\n        i0.ɵɵelement(120, \"br\");\n        i0.ɵɵtext(121, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(122, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(123, \"div\", 20);\n        i0.ɵɵelementStart(124, \"div\", 18)(125, \"table\", 34)(126, \"thead\")(127, \"tr\")(128, \"th\");\n        i0.ɵɵtext(129, \"Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(130, \"th\");\n        i0.ɵɵtext(131, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(132, \"th\");\n        i0.ɵɵtext(133, \"First \");\n        i0.ɵɵelement(134, \"br\");\n        i0.ɵɵtext(135, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(136, \"th\");\n        i0.ɵɵtext(137, \"Recent \");\n        i0.ɵɵelement(138, \"br\");\n        i0.ɵɵtext(139, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(140, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(141, \"hr\", 11);\n        i0.ɵɵelementStart(142, \"h3\", 16);\n        i0.ɵɵtext(143, \"Frequent terms from all titles of papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(144, \"div\", 35);\n        i0.ɵɵelement(145, \"angular-tag-cloud\", 36);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(146, \"hr\", 11);\n        i0.ɵɵelementStart(147, \"h3\", 16);\n        i0.ɵɵtext(148, \"Most prolific authors according to their number of publications accumulated by decade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(149, \"div\", 37)(150, \"div\", 18)(151, \"table\", 38)(152, \"thead\")(153, \"tr\")(154, \"th\", 39);\n        i0.ɵɵtext(155, \" (a) 1989-1999 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(156, \"hr\");\n        i0.ɵɵelementStart(157, \"tr\")(158, \"th\");\n        i0.ɵɵtext(159, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(160, \"th\");\n        i0.ɵɵtext(161, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(162, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(163, \"div\", 20);\n        i0.ɵɵelementStart(164, \"div\", 18)(165, \"table\", 40)(166, \"thead\")(167, \"tr\")(168, \"th\", 39);\n        i0.ɵɵtext(169, \" (b) 1999-2009 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(170, \"hr\");\n        i0.ɵɵelementStart(171, \"tr\")(172, \"th\");\n        i0.ɵɵtext(173, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(174, \"th\");\n        i0.ɵɵtext(175, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(176, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(177, \"div\", 20);\n        i0.ɵɵelementStart(178, \"div\", 18)(179, \"table\", 41)(180, \"thead\")(181, \"tr\")(182, \"th\", 39);\n        i0.ɵɵtext(183, \" (a) 2009-2019 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(184, \"hr\");\n        i0.ɵɵelementStart(185, \"tr\")(186, \"th\");\n        i0.ɵɵtext(187, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(188, \"th\");\n        i0.ɵɵtext(189, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(190, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(191, \"div\", 20);\n        i0.ɵɵelementStart(192, \"div\", 18)(193, \"table\", 42)(194, \"thead\")(195, \"tr\")(196, \"th\", 39);\n        i0.ɵɵtext(197, \" (a) 2019-2024 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(198, \"hr\");\n        i0.ɵɵelementStart(199, \"tr\")(200, \"th\");\n        i0.ɵɵtext(201, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(202, \"th\");\n        i0.ɵɵtext(203, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(204, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(205, \"hr\", 43);\n        i0.ɵɵelementStart(206, \"h3\");\n        i0.ɵɵtext(207, \"Authors with their first and most recent year of publication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(208, \"div\", 37)(209, \"div\", 18)(210, \"table\", 44)(211, \"thead\")(212, \"tr\")(213, \"th\");\n        i0.ɵɵtext(214, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(215, \"th\");\n        i0.ɵɵtext(216, \"Degree\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(217, \"th\");\n        i0.ɵɵtext(218, \"First \");\n        i0.ɵɵelement(219, \"br\");\n        i0.ɵɵtext(220, \" year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(221, \"th\");\n        i0.ɵɵtext(222, \"Recent \");\n        i0.ɵɵelement(223, \"br\");\n        i0.ɵɵtext(224, \" year\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(225, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(226, \"hr\", 45);\n        i0.ɵɵelementStart(227, \"h3\", 46);\n        i0.ɵɵtext(228, \"Proceeding by Conference\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(229, \"div\", 37)(230, \"div\", 47)(231, \"table\", 48)(232, \"thead\")(233, \"tr\")(234, \"th\");\n        i0.ɵɵtext(235, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(236, \"th\");\n        i0.ɵɵtext(237, \"Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(238, \"th\");\n        i0.ɵɵtext(239, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(240, \"th\");\n        i0.ɵɵtext(241, \"Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(242, \"th\");\n        i0.ɵɵtext(243, \"numberOfInProceedings\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(244, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(245, StatisticsComponent_div_245_Template, 2, 1, \"div\", 49);\n        i0.ɵɵelement(246, \"hr\", 45);\n        i0.ɵɵelementStart(247, \"div\", 0)(248, \"div\", 4)(249, \"h3\");\n        i0.ɵɵtext(250, \"All Connected Components by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(251, \"div\", 2);\n        i0.ɵɵelement(252, \"canvas\", 50);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(253, \"div\", 4)(254, \"h3\");\n        i0.ɵɵtext(255, \"Connected components for each Conference by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(256, \"div\", 2);\n        i0.ɵɵelement(257, \"canvas\", 51);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(258, \"div\", 0)(259, \"div\", 4)(260, \"h3\");\n        i0.ɵɵtext(261, \"Relative size of components connected by conference\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(262, \"div\", 2);\n        i0.ɵɵelement(263, \"canvas\", 52);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"hidden\", ctx.ConferencesCount < 2);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.papers.length > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1 || ctx.ConferencesCount < 2);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.articles.length > 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.articles.length < 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"hidden\", ctx.articles.length < 1 || ctx.journalsCount < 2);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.singlePapers.length < 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"hidden\", ctx.singleArticles.length < 1);\n        i0.ɵɵadvance(93);\n        i0.ɵɵproperty(\"config\", ctx.options)(\"data\", ctx.cloudData);\n        i0.ɵɵadvance(81);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingTable1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n      }\n    },\n    dependencies: [i5.NgIf, i6.TagCloudComponent, i7.SpinnerComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 40px;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 25px;\\n  margin-bottom: 10px;\\n}\\n\\n.flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-container2[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.graph-bars[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.graph-bars2[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container1[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 91%;\\n}\\n\\n.canvas-container2[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 96%;\\n}\\n\\n.legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  font-size: 18px;\\n  margin-bottom: 20px;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 95%;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 100%; \\n\\n  height: auto;\\n  display: block;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  background-color: rgb(0, 22, 68);\\n}\\n\\n.container-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n  overflow: auto;\\n}\\n\\n.container-table2[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  display: flex;\\n  margin-right: 100px;\\n}\\n\\n.linev[_ngcontent-%COMP%] {\\n  border-right: 1px solid rgb(0, 22, 68);\\n  margin-right: 45px;\\n  margin-left: 20px;\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  vertical-align: middle;\\n  text-align: center;\\n  vertical-align: center;\\n  font-size: 20px;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  min-width: 40px;\\n  min-height: 1px;\\n  margin-right: 5px;\\n}\\n\\n.special[_ngcontent-%COMP%] {\\n  margin-bottom: 40px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(2), #degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n  padding-left: 60px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(4) {\\n  padding-left: 90px;\\n}\\n\\n.men[_ngcontent-%COMP%] {\\n  background-color: rgb(51, 153, 255);\\n}\\n\\n.women[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 87, 51);\\n  margin-left: 20PX;\\n}\\n\\n.line3[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  .legend[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    font-size: 10px;\\n    margin-bottom: 20px;\\n  }\\n  .container-table[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .container-table2[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .table[_ngcontent-%COMP%] {\\n    border-right: none;\\n    padding-right: 0;\\n    padding-bottom: 20px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n}\\n.conceptual[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 200px;\\n}\\n\\n.overlay[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 10px;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 10;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXN0YWRpc3RpY2FzL3N0YXRpc3RpY3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQ2hCO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFHQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUFGOztBQUdBO0VBQ0UsZ0NBQUE7RUFDQSxhQUFBO0VBQ0EsVUFBQTtBQUFGOztBQUdBO0VBQ0UsZUFBQSxFQUFBLGlDQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQ0FBQTtBQUFGOztBQUdBO0VBQ0UsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBQUY7O0FBR0E7RUFDRSxzQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFJQTtFQUNFLGtCQUFBO0FBREY7O0FBSUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtBQURGOztBQUlBO0VBQ0UsZUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQURGOztBQUlBO0VBQ0UsbUJBQUE7QUFERjs7QUFJQTs7RUFFRSxrQkFBQTtBQURGOztBQUdBO0VBQ0Usa0JBQUE7QUFBRjs7QUFHQTtFQUNFLG1DQUFBO0FBQUY7O0FBR0E7RUFDRSxrQ0FBQTtFQUNBLGlCQUFBO0FBQUY7O0FBR0E7RUFDRSxnQkFBQTtFQUNBLG1CQUFBO0FBQUY7O0FBSUE7RUFFRTtJQUNFLGFBQUE7RUFGRjtFQUtBO0lBQ0UsYUFBQTtJQUNBLHVCQUFBO0lBQ0EsZUFBQTtJQUNBLG1CQUFBO0VBSEY7RUFLQTtJQUNFLHNCQUFBO0VBSEY7RUFLQTtJQUNFLHNCQUFBO0VBSEY7RUFLQTtJQUNFLGtCQUFBO0lBQ0EsZ0JBQUE7SUFDQSxvQkFBQTtFQUhGO0VBS0E7SUFDRSxpQkFBQTtFQUhGO0VBS0E7SUFDRSxpQkFBQTtFQUhGO0FBQ0Y7QUFPQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQUxGOztBQU9BO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBSkYiLCJzb3VyY2VzQ29udGVudCI6WyJcbmgye1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogNDBweDtcbn1cblxuaDMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmZsZXgtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uZmxleC1jb250YWluZXIyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uZ3JhcGgtYmFyc3tcbiAgcGFkZGluZzogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLmdyYXBoLWJhcnMye1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4uY2FudmFzLWNvbnRhaW5lcjEge1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiA5MSU7XG59XG5cbi5jYW52YXMtY29udGFpbmVyMiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgcGFkZGluZzogMjBweDtcbiAgd2lkdGg6IDk2JTtcbn1cblxuLmxlZ2VuZHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuXG4uZmxleC1pdGVtIHtcbiAgcGFkZGluZzogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLmNhbnZhcy1jb250YWluZXIge1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiA5NSU7XG59XG5cbmNhbnZhcyB7XG4gIG1heC13aWR0aDogMTAwJTsgLyogSGFjZSBsYXMgZ3LDg8KhZmljYXMgcmVzcG9uc2l2ZSAqL1xuICBoZWlnaHQ6IGF1dG87IFxuICBkaXNwbGF5OiBibG9jazsgXG59XG5cbi5saW5le1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMjIsIDY4KTtcbn1cblxuLmNvbnRhaW5lci10YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uY29udGFpbmVyLXRhYmxlMiB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luLXJpZ2h0OiAxMDBweDtcbn1cblxuLmxpbmV2e1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIG1hcmdpbi1yaWdodDogNDVweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cblxuLnRhYmxle1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbnRkLCB0aCB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG5kaXYge1xuICBtaW4td2lkdGg6IDQwcHg7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbi5zcGVjaWFse1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuXG4jZGVncmVlIHRoOm50aC1jaGlsZCgyKSxcbiNkZWdyZWUgdGg6bnRoLWNoaWxkKDMpe1xuICBwYWRkaW5nLWxlZnQ6IDYwcHg7XG59XG4jZGVncmVlIHRoOm50aC1jaGlsZCg0KSB7XG4gIHBhZGRpbmctbGVmdDogOTBweDtcbn1cblxuLm1lbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig1MSwgMTUzLCAyNTUpO1xuICBcbn1cbi53b21lbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDg3LCA1MSk7XG4gIG1hcmdpbi1sZWZ0OiAyMFBYO1xufVxuXG4ubGluZTN7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcblxuICB0ZCwgdGgge1xuICAgIHBhZGRpbmc6IDEwcHg7IFxuICB9XG5cbiAgLmxlZ2VuZHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC5jb250YWluZXItdGFibGUge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IFxuICB9XG4gIC5jb250YWluZXItdGFibGUyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBcbiAgfVxuICAudGFibGUge1xuICAgIGJvcmRlci1yaWdodDogbm9uZTsgXG4gICAgcGFkZGluZy1yaWdodDogMDsgXG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIH1cbiAgI3RhYmxlSW5zdGl0dXRpb24gdGg6bnRoLWNoaWxkKDMpe1xuICAgIHBhZGRpbmctbGVmdDogMHB4OyBcbiAgfVxuICAjdGFibGVJbnN0aXR1dGlvbiB0ZDpudGgtY2hpbGQoMyl7XG4gICAgcGFkZGluZy1sZWZ0OiAwcHg7XG4gIH1cbiAgXG59XG5cbi5jb25jZXB0dWFsIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IFxuICBoZWlnaHQ6IDIwMHB4OyBcbn1cbi5vdmVybGF5IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDEwcHg7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDEwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","singular","i0","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","ɵɵproperty","ctx_r2","papers","length","register","StatisticsComponent","constructor","apiService","stadisticsService","http","spinnerService","selectedTitles","selectedYears","conferenceOption","venueName","articles","collaborations","connectedComponents","singleAuthor","statistics","statsAuthors","statsPaper","statsArticle","journalsCount","ConferencesCount","totalAuthorsByYear","totalPapersByYear","totalArticlesByYear","singleArticles","singlePapers","decadeStats","researchers","papersWithAuthors","loadingTable1","loadingTable2","conferenceName","commonNames","options","width","height","overflow","realignOnResize","strict","step","cloudData","ngOnInit","loadCommonNames","main","waitResearcherNoEmpty","_this","_asyncToGenerator","Promise","resolve","setTimeout","waitPapersNoEmpty","_this2","waitArticlesNoEmpty","_this3","getResearchersConference","subscribe","next","response","statsResearchers","statsTotalAuthorsByYear","lineChart","destroy","generateChart","generateTotalAuthorsChart","error","console","years","map","title","properties","name","sort","a","b","parseInt","year","totalAuthors","reduce","total","researcher","includes","getPapers","log","statsPapers","statsTotalPapersByYear","getArticles","statsArticles","statsTotalArticlesByYear","paper","filter","value","index","self","indexOf","totalPapers","integer","numPapers","low","numArticles","getCollaborations","statsColaboraciones","generateChart3","densidades","getConnectedComponents","statsConnectedComponents","getConnectedComponentsByvenue","statsConnectedComponentsByvenue","generateChart4","getConferencebyProceeding","conferencesNames","inprocedings","forEach","numberOfInProceedings","push","generateTablesProceeding","venueTitles","table","document","querySelector","HTMLElement","innerHTML","venueTitle","parts","split","replace","date","rowData","trim","location","slice","join","row","createElement","appendChild","hasNumber","test","isValidFormat","waitAuthorsWithPapersNoEmpty","_this4","waitSingleAuthorsNoEmpty","_this5","getAuthorsPapers","_this6","_ref","statsSingleAuthor","barChart","barChart2","generateBarChartArticles","porcentajes","generateBarChart","_x","apply","arguments","getDistributions","labels","authorsByPaper","numAuthors","allPapers","all","papersByAuthor","numPubs","numPublications","allAuthors","authorsTable","papersTable","amount","percentage","toFixed","worth","toString","getDemographicData","datasets","Array","isArray","datasetByYear","info","genero","frecuencias","frec_paises","flat","statsGender","statsGeography","generateNGrams","titles","n","ngrams","words","toLowerCase","i","countFrequencies","frequencies","Map","ngram","count","get","set","clearTitle","stopwords","word","wordsNoRepeat","singularWords","filteredWords","newTitle","getTopN","sortedFrequencies","entries","getTopicAnalysis","cleanTitles","ipName","bigrams","trigrams","bigramFrequencies","trigramFrequencies","top20Bigrams","top20Trigrams","top20BigramsWithYears","top20TrigramsWithYears","table1","table2","minYear","Math","min","maxYear","max","combinedData","maxFrecuencia","minWeight","maxWeight","wordCloudData","item","text","weight","calculateWeight","color","randomColor","frec","maxFrec","normWeight","round","names","Set","from","titulo","numResearchersPorAnio","anio","numResearchers","size","numPapersPorAnio","colabsXtotal","colabsPapers","colab","find","c","numColabs","concat","colabsArticles","article","density","dato","copiedData","venueDataMap","venueDataMapRelative","has","venueData","adjustedComponents","values","author","ipNames","paperIndex","findIndex","authorNames","papersWithOneAuthor","porcentajeByYear","numPapersWithSingleAuthor","porcentajeByYear2","mappingDate","datasetFiltered","object","Object","keys","uniqueDates","objectDate","countryHighest","highestFrequency","country","Number","countries","datasetsLabels","datasetsData","generateMultipleGraph","filterAuthorsByDecade","authors","startYear","endYear","filteredAuthors","authorYears","existingAuthor","filteredAuthor","statsProlificAuthors","startDecade","floor","endDecade","decades","decade","decadeLabel","decadeStartYear","decadeEndYear","decadeAuthors","label","statsProlificAuthors2","topAuthors","tables","yearsArray","generateTablesDecades2","autor","idChart","data","entry","lineChart6","type","fill","borderColor","borderWidth","plugins","legend","font","family","scales","y","display","lineChart7","lineChart14","getRandomColor","lineChart2","lineChart15","lineChart3","venue","allYears","dataset","datasetsByGenre","genderKey","existingData","d","sortedData","men","women","hombres","mujeres","organizedYears","countMen","countWoman","generateCircularChart","chartId","chartConfig","ctx","getElementById","colors","backgroundColor","beginAtZero","r","random","g","responseType","parseCommonNames","lines","dict","currentName","currentData","linea","startsWith","frec_paisesStr","substring","lastIndexOf","JSON","parse","_this7","getSelectedTitles","getConferenceOption","getVenueName","venueNameConfirm","show","_","ɵɵdirectiveInject","i1","ApiService","i2","StadisticsService","i3","HttpClient","i4","SpinnerService","_2","selectors","viewQuery","StatisticsComponent_Query","rf","ɵɵtext","ɵɵtemplate","StatisticsComponent_hr_14_Template","StatisticsComponent_hr_26_Template","StatisticsComponent_div_245_Template","ɵɵadvance"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, destroyPlatform } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { StadisticsService } from '../services/stadistics.service';\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport { HttpClient } from '@angular/common/http';\nimport { CloudData, CloudOptions } from 'angular-tag-cloud-module';\nimport { singular } from 'pluralize';\nimport { ChartConfiguration, ChartData, ChartOptions } from 'chart.js';\nimport { SpinnerService } from '../services/spinner.service';\n\ninterface Author {\n  ipNames: string[];\n  numPublications: number;\n  researcher: string;\n  year: string;\n}\n\ninterface DecadeStats {\n  label: string;\n  startYear: number;\n  endYear: number;\n  authors: Author[];\n}\n\n@Component({\n  selector: 'istics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss'],\n})\n\nexport class StatisticsComponent implements OnInit {\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef;\n\n  selectedTitles: any[] = [];\n  selectedYears: any[] = [];\n  conferenceOption: string = \"\";\n  venueName: any[] = [];\n  papers: any[] = [];\n  articles: any[] = [];\n  collaborations: any[] = [];\n  connectedComponents: any[] = [];\n  singleAuthor: any[] = [];\n  statistics: any[] = [];\n  statsAuthors: any[] = []\n  statsPaper: any[] = []\n  statsArticle: any[] = []\n  journalsCount: number = 0;\n  ConferencesCount: number = 0;\n  lineChart!: Chart;\n  lineChart2!: Chart;\n  lineChart3!: Chart;\n  lineChart4!: Chart;\n  lineChart5!: Chart;\n  lineChart7!: Chart;\n  lineChart6!: Chart;\n  lineChart8!: Chart;\n  lineChart14!: Chart;\n  lineChart15!: Chart;\n  totalAuthorsByYear: any[] = []\n  totalPapersByYear: any[] = []\n  totalArticlesByYear: any[] = []\n  singleArticles: any[] = []\n  singlePapers: any[] = []\n  barChart!: Chart;\n  barChart2!: Chart;\n  decadeStats: any[] = [];\n  researchers: any[] = [];\n  papersWithAuthors: any[] = [];\n  loadingTable1 = true;\n  loadingTable2 = true;\n  conferenceName: string[] = [];\n  commonNames: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n  options: CloudOptions = {\n    width: 500,\n    height: 200,\n    overflow: false,\n    realignOnResize: false,\n    strict: false,\n    step: 2,\n  };\n  cloudData: CloudData[] = []\n\n  constructor(\n    private apiService: ApiService,\n    private stadisticsService: StadisticsService,\n    private http: HttpClient,\n    private spinnerService: SpinnerService,\n  ) {}\n\n\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n\n  async waitResearcherNoEmpty() {\n    while (!this.researchers || this.researchers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitPapersNoEmpty() {\n    while (!this.papers || this.papers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitArticlesNoEmpty() {\n    while (!this.articles || this.articles.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.researchers = [];\n        this.researchers = response;\n        this.statsResearchers();\n        this.statsTotalAuthorsByYear();\n        if(this.researchers.length > 1){\n          if (this.lineChart) {\n            this.lineChart.destroy();\n          }\n          this.generateChart('lineChart1', 'Number of authors', this.statsAuthors);\n          this.generateTotalAuthorsChart('lineChart6', 'Total Authors by Year', this.totalAuthorsByYear);\n        }\n      },\n      error: (error: any) => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n  }\n\n  statsTotalAuthorsByYear() {\n    const years = this.selectedTitles.map(title => title.properties.name);\n    years.sort((a, b) => parseInt(a) - parseInt(b));\n    this.totalArticlesByYear = [];\n    this.totalAuthorsByYear = years.map(year => {\n      const totalAuthors = this.researchers.reduce((total, researcher) => {\n        if (researcher.years.includes(year)) {\n          return total + 1;\n        }\n        return total;\n      }, 0);\n      return {\n        year: year,\n        totalAuthors: totalAuthors\n      };\n    });\n  }\n  \n  getPapers() {\n    this.apiService.getPapers(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.papers = response;\n        console.log(this.papers);\n        this.statsPapers();\n        this.statsTotalPapersByYear();\n        if(this.papers.length > 0){\n          this.generateChart('lineChart2', 'Number of papers', this.statsPaper);\n          this.generateTotalAuthorsChart('lineChart7', 'Total Papers by Year', this.totalPapersByYear);\n        }\n      },\n      error: (error: any) => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n\n  getArticles() {\n    this.apiService.getArticles(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.articles = response;\n        this.statsArticles();\n        this.statsTotalArticlesByYear();\n        if(this.articles && this.articles.length > 0){\n          this.generateChart('lineChart15', 'Number of Articles', this.statsArticle);\n          this.generateTotalAuthorsChart('lineChart14', 'Total Articles by Year', this.totalArticlesByYear);\n        }\n      },\n      error: (error: any) => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n\n\n  statsTotalPapersByYear() {\n    let years = this.papers.map(paper => paper.year);\n    years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n    years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n    this.totalPapersByYear = years.map(year => {\n      const totalPapers = this.papers.reduce((total, paper) => {\n        const integer = paper.numPapers.low\n        if (paper.year === year) {\n          return total + integer;\n        }\n        return total;\n      }, 0);\n      return {\n        year: year,\n        totalAuthors: totalPapers\n      };\n    });\n  }\n\n\n  statsTotalArticlesByYear() {\n    const years = this.articles.map(paper => paper.year);\n    this.totalArticlesByYear = years.map(year => {\n      const totalPapers = this.articles.reduce((total, paper) => {\n        const numArticles = paper.numPapers.low;\n        if (paper.year === year) {\n          return total + numArticles;\n        }\n        return total;\n      }, 0);\n      return {\n        year: year,\n        totalAuthors: totalPapers\n      };\n    });\n  }\n\n\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: (error: any) => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n\n  getConnectedComponents(){\n    this.apiService.getConnectedComponents(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConnectedComponentsByvenue(){\n    this.apiService.getConnectedComponentsByvenue(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n        this.generateChart4('lineChart13', 'Number of Connected Components', this.statistics[7]);\n        \n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConferencebyProceeding(){\n    this.apiService.getConferencebyProceeding(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.stadisticsService.conferencesNames = [];\n        this.stadisticsService.years = [];\n        this.stadisticsService.inprocedings = [];\n      \n        response.forEach(({ title, year, numberOfInProceedings }: { title: string, year: string, numberOfInProceedings: number}) => {\n          this.stadisticsService.conferencesNames.push(title);\n          this.stadisticsService.years.push(year);\n          this.stadisticsService.inprocedings.push(numberOfInProceedings);\n        });\n        this.loadingTable1 = false;\n      \n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n     \n      },\n      error: (error: any) => {\n        console.error('Error in getConferencebyProceeding:', error);\n      }\n    });\n  }\n\n  \n  generateTablesProceeding(venueTitles: string[], years: string[], numberOfInProceedings: number[]) {\n    const table = document.querySelector('#tableProceeding tbody');\n    if (table instanceof HTMLElement) {\n      table.innerHTML = ''; // Limpiar tabla existente antes de agregar nuevas filas\n  \n      venueTitles.forEach((venueTitle, index) => {\n        // Divide el título en partes usando la coma como delimitador\n        const parts = venueTitle.split(',');\n\n        if( parts.length== 6){\n            \n          parts[4]= parts[4].replace(\"Proceedings\",\"\");\n          const date = parts[4].split('.')\n          \n\n          // Construye el objeto que contiene los datos para la tabla\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[2] + ',' + parts[3],\n            date: date.slice(0).join(' ')\n          };\n\n          // Crea una fila para la tabla y agrega los datos\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          \n\n          // Agrega la fila a la tabla\n          table.appendChild(row);\n        }\n\n\n        if(parts.length== 5){\n          \n            \n          parts[3] = parts[3].replace(\"Proceedings\",\"\").trim();\n          const date = parts[3].split('.')\n          const hasNumber = /\\d/.test(date[0]);\n\n          if(hasNumber){\n\n            if(parts[1].includes(\"Florence\")){\n \n              const rowData = {\n                name: parts[0],\n                location: parts[1].trim() + ',' + parts[2],\n                date: date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            }else{\n\n              // Construye el objeto que contiene los datos para la tabla\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2],\n                date: date[0]\n              };\n              // Crea una fila para la tabla y agrega los datos\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              // Agrega la fila a la tabla\n              table.appendChild(row);\n            }\n\n          }else{\n\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4] \n            };\n\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n          }\n\n        }\n\n\n        if( parts.length== 7){\n            \n          parts[5]= parts[5].replace(\"Proceedings\",\"\");\n          const date = parts[5].split('.')\n\n          if(parts[2].length > 15){\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[3] + ', ' + parts[4],\n            date: date[0]\n          };\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          table.appendChild(row);\n          }else{\n\n            const isValidFormat = /^[a-zA-Z]+\\s+\\d{1,2}(-\\d{1,2}|\\d{1,2}[a-zA-Z]+\\s+\\d{1,2})$/.test(date[0].trim());\n\n            if(isValidFormat){\n\n              if(parts[2].includes(\"ER\")){\n \n                const rowData = {\n                  name: parts[0] + ',' + parts[1].trim() + '-' +  parts[2] ,\n                  location: parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              }else{\n\n                const rowData = {\n                  name: parts[0] + '-' + parts[1].trim(),\n                  location: parts[2]+ ', ' + parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n    \n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n\n              }\n\n            }else{\n                            \n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4] + ', ' + date[0]\n            };\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            table.appendChild(row);\n            }\n  \n          }       \n        }  \n      });\n    }\n  }\n  \n  \n  async waitAuthorsWithPapersNoEmpty(){\n    while (!this.papersWithAuthors || this.papersWithAuthors.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitSingleAuthorsNoEmpty(){\n    while (!this.singleAuthor || this.singleAuthor.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getAuthorsPapers() {\n      this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName)\n        .subscribe({\n          next: async (response: any) => {\n            this.singleAuthor = response;\n            this.statsSingleAuthor();\n            if(this.barChart){\n              this.barChart.destroy();\n            }\n            if(this.barChart2){\n              this.barChart2.destroy();\n            }\n            this.generateBarChartArticles('barChart2', 'Single Author Articles', this.statistics[8].years, this.statistics[8].porcentajes);          \n            this.generateBarChart('barChart1', 'Single Author Papers', this.statistics[4].years, this.statistics[4].porcentajes);          \n          },\n          error: (error: any) => {\n            console.error('Error in getAuthorsPapers:', error);\n          }\n        });\n  }\n\n  /**Function to obtain the distributions of both authors by papers and papers by authors*/\n  getDistributions(){\n    const labels: string[] = ['1', '2', '3', '4', '5 o más'];\n\n    // This represents the number of authors that each paper has.\n    const authorsByPaper: number[] = [1, 2, 3, 4].map((numAuthors) =>\n    this.papersWithAuthors.filter((paper) => paper.numAuthors === numAuthors).length\n    );\n    authorsByPaper[4] = this.papersWithAuthors.filter((paper) => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapers.low, 0);\n    allPapers += this.articles.reduce((all, paper) => all + paper.numPapers.low, 0);\n\n    // This represents the number of published papers that each author has.\n    const papersByAuthor: number[] = [1, 2, 3, 4].map((numPubs) =>\n    this.singleAuthor.filter((paper) => paper.numPublications === numPubs).length\n    );\n    papersByAuthor[4] = this.singleAuthor.filter((paper) => paper.numPublications >= 5).length\n    const allAuthors = this.singleAuthor.length;\n\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n\n    \n    \n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n\n  getDemographicData(){\n      const datasets = this.researchers.map(researcher => {\n        let name = researcher.researcher.properties.name.split(' ')[0];\n        if(name.includes(\"-\")){\n          name = name.split('-')[0];\n        }\n        const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      \n        const datasetByYear = years.map((year: any) => {\n          const info = this.commonNames[name];\n          const genero = info ? info.genero : 'Unknown';\n          const frecuencias = info ? info.frec_paises : {};\n      \n          return {\n            year,\n            name,\n            genero,\n            frecuencias\n          };\n        });\n        return datasetByYear;\n      }).flat(); \n\n      this.statsGender(datasets);\n      this.statsGeography(datasets);\n  }\n\n  generateNGrams(titles: string[], n: number): string[] {\n    const ngrams: string[] = [];\n    titles.forEach((title) => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  \n  countFrequencies(ngrams: string[]): Map<string, number> {\n    const frequencies = new Map<string, number>();\n    ngrams.forEach((ngram) => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n\n  clearTitle(title: string, stopwords: string[]) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    \n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n  \n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    \n    return newTitle;\n  }\n\n  getTopN(frequencies: Map<string, number>, n: number): [string, number][] {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n\n  getTopicAnalysis(){\n\n      // We require natural to tokenize and remove stopwords, and calculate frequencies\n      const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n\n      const cleanTitles = this.papersWithAuthors.map(paper => {\n        const ipName = this.clearTitle(paper.ipName, stopwords);\n        const year = parseInt(paper.year);\n        return { ipName, year };\n      });\n\n      const bigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 2);\n      const trigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 3);\n\n      const bigramFrequencies = this.countFrequencies(bigrams);\n      const trigramFrequencies = this.countFrequencies(trigrams);\n\n      const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n      const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n\n    \n      const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n    \n      const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n\n      const table1 = document.querySelector('#tableBigramas tbody');\n      const table2 = document.querySelector('#tableTrigramas tbody');\n    \n      if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n        top20BigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table1.appendChild(row);\n        });\n      \n        top20TrigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table2.appendChild(row);\n        });\n      }\n\n      const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n      \n      combinedData.sort((a, b) => b.count - a.count);\n\n      const maxFrecuencia = combinedData[0].count;\n      const minWeight = 0;\n      const maxWeight = 20;\n\n\n      const wordCloudData = combinedData.map((item, index) => ({\n        text: item.ngram,\n        weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n        color: this.randomColor()\n      }));\n\n      this.cloudData = wordCloudData;\n     \n  }\n  \n  calculateWeight(frec: number, maxFrec: number, minWeight: number, maxWeight: number): number {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n\n  /**\n   * ############################################\n   */\n\n  statsResearchers() {\n    const names = new Set(this.researchers.map(researcher => researcher.name));\n    this.statsAuthors = [];\n    this.statsAuthors = Array.from(names).map(name => {\n      const years = this.selectedTitles.map(titulo => titulo.properties.name);\n      years.sort((a, b) => parseInt(a) - parseInt(b));\n      this.selectedYears = years;\n      const numResearchersPorAnio = years.map(anio =>\n        this.researchers.reduce((total, researcher) => {\n          if (researcher.name === name && researcher.years.includes(anio)) {\n            return total + 1;\n          }\n          return total;\n        }, 0)\n      );\n      return {\n        name: name,\n        years: years,\n        numResearchers: numResearchersPorAnio\n      };\n    });\n  }\n  \n  statsPapers() {\n    const names = new Set(this.papers.map(paper => paper.name));\n    this.ConferencesCount = names.size;\n    this.statsPaper = Array.from(names).map(name => {\n      let years = this.papers.map(paper => paper.year);\n      years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n      years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n      console.log(years)\n      const numPapersPorAnio = years.map(year =>\n        this.papers.reduce((total, paper) => {\n          const numPapers = paper.numPapers.low;\n          if (paper.name === name && paper.year === year) {\n            return total + numPapers;\n          }\n          return total;\n        }, 0)\n      );\n      console.log(numPapersPorAnio)\n      return {\n        name: name,\n        years: years,\n        numResearchers: numPapersPorAnio\n      };\n    });\n  }\n\n  statsArticles() {\n    const names = new Set(this.articles.map(paper => paper.name));\n    this.journalsCount = names.size;\n    this.statsArticle = Array.from(names).map(name => {\n      const years = this.articles.map(paper => paper.year);\n      const numPapersPorAnio = years.map(year =>\n        this.articles.reduce((total, paper) => {\n          const numArticles = paper.numPapers.low\n          if (paper.name === name && paper.year === year) {\n            return total + numArticles;\n          }\n          return total;\n        }, 0)\n      );\n      return {\n        name: name,\n        years: years,\n        numResearchers: numPapersPorAnio\n      };\n    });\n  }  \n\n\n  statsColaboraciones(){  \n\n    let colabsXtotal: { year: number; numColabs: number; numPapers: number }[] = [];\n\n    if (this.papers.length > 1) {\n      const colabsPapers = this.papers.map(paper => {\n        const colab = this.collaborations.find(c => c.year === paper.year);\n        const integer = paper.numPapers.low\n        return {\n          year: paper.year,\n          numColabs: colab ? colab.numColabs : 0,\n          numPapers: integer\n        };\n      });\n      colabsXtotal = colabsXtotal.concat(colabsPapers);\n    }\n  \n    if (this.articles.length > 1) {\n      const colabsArticles = this.articles.map(article => {\n        const colab = this.collaborations.find(c => c.year === article.year);\n        return {\n          year: article.year,\n          numColabs: colab ? colab.numColabs : 0,\n          numPapers: article.numPapers.low\n        };\n      });\n      colabsXtotal = colabsXtotal.concat(colabsArticles);\n    }\n\n    //colabsXtotal debe tener la suma de los dos valores si ha entrao en los dos ifs\n    const density = colabsXtotal.map(dato => {\n      const { year, numColabs, numPapers } = dato;\n      const density = numColabs / numPapers;\n      return { density, year };\n    });\n\n    this.statistics[3] = {\n      years: density.map(dato => dato.year),\n      densidades: density.map(dato => dato.density)\n    };\n  }\n\n\n\n  statsConnectedComponents() {\n    // Copiar los datos originales para no afectar el orden original\n    const copiedData = [...this.connectedComponents];\n\n    // Ordenar los datos por año\n    copiedData.sort((a, b) => a.year - b.year);\n\n    // Extraer los años y componentes conectados ordenados\n    const years = copiedData.map(item => item.year);\n    const connectedComponents = copiedData.map(item => item.connectedComponents);\n  \n    this.statistics[5] = {\n        years: years,\n        connectedComponents: connectedComponents\n        // Puedes agregar otras propiedades si es necesario\n    };\n}\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap: Map<string, { years: any[], connectedComponents: any[], venueName: string} | undefined> = new Map();\n    const venueDataMapRelative: Map<string, { years: any[], connectedComponents: any[], venueName: string, index?: number } | undefined> = new Map();\n\n    this.connectedComponents.forEach((item) => {\n      const venueName = item.venueName;\n\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n        });\n\n      }\n\n      const venueData = venueDataMap.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        venueData.connectedComponents.push(item.connectedComponents);\n      }\n    });\n\n    this.connectedComponents.forEach((item) => {\n      const venueName = item.venueName;\n\n      if (!venueDataMapRelative.has(venueName)) {\n        venueDataMapRelative.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n        });\n      }\n\n      const venueData = venueDataMapRelative.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        let adjustedComponents = item.connectedComponents;\n        while (adjustedComponents > 1) {\n          adjustedComponents /= 10;\n        }\n  \n        venueData.connectedComponents.push(adjustedComponents);\n      }\n    });\n\n    this.statistics[6] = Array.from(venueDataMap.values());\n    this.statistics[7] = Array.from(venueDataMapRelative.values());\n  }\n  \n\n  statsSingleAuthor() {\n    \n    const papersWithAuthors: { ipName: string, numAuthors: number, authorNames: string[], year: string }[] = [];\n\n    // Map all the researchers, to create papersWithAuthors, which is an array that has the name of a publication\n    // and the authors who have contributed to it.\n    this.singleAuthor.forEach((author: { ipNames: string[], researcher: string, year: string }) => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n            papersWithAuthors.push({\n              ipName,\n              numAuthors: 1,\n              authorNames: [author.researcher],\n              year: author.year\n            });\n          }\n        });\n    });\n\n    this.papersWithAuthors = papersWithAuthors;\n\n    // We get all the entries whose author is one, for the statistics\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers.low;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = (numPapersWithSingleAuthor / numPapers) * 100;\n    \n      return { year, percentage };\n    });\n\n    const porcentajeByYear2 = this.articles.map(article => {\n      const year = article.year;\n      const numPapers = article.numPapers.low;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = (numPapersWithSingleAuthor / numPapers) * 100;\n      return { year, percentage };\n    });\n    \n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n\n    this.statistics[8] = {\n      years: porcentajeByYear2.map(dato => dato.year),\n      porcentajes: porcentajeByYear2.map(dato => dato.percentage)\n    };\n\n    if(this.articles.length > 1){\n      this.singleArticles = this.statistics[8];\n    }\n\n    if(this.papers.length > 1){\n      this.singlePapers = this.statistics[4];\n    } \n  }  \n\n  statsGeography(datasets: any[]){\n    const mappingDate: {[date: string]: {[country: string]: number}} = {};\n    const datasetFiltered = datasets.filter((object: any) => Object.keys(object.frecuencias).length > 0);\n    \n    // Obtener todas las fechas únicas\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n\n    // Iterar sobre las fechas\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n\n      // Crear objeto de mapeo para la fecha actual\n      mappingDate[date] = {};\n  \n    for (const object of objectDate) {\n      let countryHighest = '';\n      let highestFrequency = -1;\n\n      for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if(!(countryHighest in mappingDate[date])){\n          mappingDate[date][countryHighest] = 1;\n        }else{\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n\n    // We normalize values according to their total\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country]/total).toFixed(4));\n      }\n    }\n\n    const years = Object.keys(mappingDate); // Get the keys of the years\n    const countries = Object.keys(mappingDate[years[0]]); // Get country names\n    const datasetsLabels = countries; // Labels of the data sets will be the names of the countries \n\n    // Create the data matrix for the countries\n    const datasetsData = countries.map((country) =>\n      years.map((year) => mappingDate[year][country])\n    );\n\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n    \n  }\n\n  filterAuthorsByDecade(authors: Author[], startYear: number, endYear: number): Author[] {\n    const filteredAuthors: Author[] = [];\n  \n    // Browse the original authors\n    authors.forEach((author) => {\n      // Check if the author is within the specified decade\n      const authorYears = author.year.split(\",\").map(Number).filter((year) => year >= startYear && year <= endYear);\n\n      if (authorYears.length > 0) {\n        // Search if there is already a merged author with the same name and decade\n        const existingAuthor = filteredAuthors.find((filteredAuthor) => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Merge the existing author's entries with the current author's entries\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Add the current author to the list of filtered authors\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n\n    return filteredAuthors;\n  }\n\n  statsProlificAuthors(selectedYears: number[]): DecadeStats[] {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n  \n    // Generate the decades within the selected year range\n    const decades: DecadeStats[] = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n  \n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }  \n    // Sort authors by number of publications in each decade\n    decades.forEach((decade) => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20){\n        decade.authors = decade.authors.slice(0, 20); \n      } \n    });\n  \n    // Return the decades with the authors ordered\n    return decades;\n  }\n\n  statsProlificAuthors2(selectedYears: number[]) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n  \n    const tables = {\n      'degree': document.querySelector('#degree tbody'),\n    };\n  \n    for (const author of topAuthors) {\n      const table = tables['degree'];\n  \n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n\n  \n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n  \n        table.appendChild(row);\n      }\n    }\n\n  }\n\n  generateTablesDecades2(decadeStats: any[]){\n    const tables: { [key: string]: HTMLElement | null } = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody'),\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n  \n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach((autor: { researcher: any; numPublications: any; year: any; }) => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n  \n          table.appendChild(row);\n        });\n      }\n    }\n  }\n\n  generateTotalAuthorsChart(idChart: string, label: string, data: any[]) {\n    const years = data.map(entry => entry.year);\n    const totalAuthors = data.map(entry => entry.totalAuthors);\n\n    if(idChart == \"lineChart6\"){\n      this.lineChart6 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [\n            {\n              label: label,\n              data: totalAuthors,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    if(idChart == \"lineChart7\"){\n      this.lineChart7 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [\n            {\n              label: label,\n              data: totalAuthors,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n\n    if(idChart = \"lineChart14\"){\n      if(this.lineChart14){\n        this.lineChart14.destroy();\n      }\n        \n        this.lineChart14 = new Chart(idChart, {\n          type: 'line',\n          data: {\n            labels: years,\n            datasets: [\n              {\n                label: label,\n                data: totalAuthors,\n                fill: false,\n                borderColor: 'rgb(0, 22, 68)',\n                borderWidth: 1\n              }\n            ]\n          },\n          options: {\n            plugins: {\n              legend: {\n                labels: {\n                  color: 'black',\n                  font: {\n                    size: 18,\n                    family: 'Roboto',\n                  }\n                }\n              }\n            },\n            scales: {\n              y: {\n                type: 'linear',\n                display: true\n              }\n            },\n          }\n        });\n      \n    }\n\n\n\n\n\n  }\n\n  generateChart(idChart: string, label: string, data: any[]) {\n    const datasets = data.map((entry, index) => ({\n      label: entry.name,\n      data: entry.numResearchers,\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n\n    if(idChart == \"lineChart2\"){\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n  \n    }\n\n    if(idChart == \"lineChart1\"){\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n  \n    }\n\n    if(idChart == \"lineChart15\"){\n      this.lineChart15 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    \n      \n    }\n\n  }\n\n  generateChart3(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart==\"lineChart11\" || idChart==\"lineChart3\"){\n      this.lineChart3 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    \n   \n  }\n\n  generateChart4(idChart: string, label: string, data: any) {\n \n    const datasets = data.map((venue: any, index: any) => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        fill: false,\n        borderColor: this.getRandomColor(index),\n        borderWidth: 1\n      };\n    });\n  \n    const allYears = Array.from(new Set([].concat(...datasets.map((dataset: any) => dataset.years))));\n    allYears.sort();\n  \n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        },\n      }\n    });\n  }\n  \n\n  statsGender(datasets: any[]){\n    const datasetsByGenre: { [genero: string]: { year: string; count: number }[] } = {};\n\n      datasets.forEach((data: { year: any; genero: any; }) => {\n        const { year, genero } = data;\n        \n        let genderKey = '';\n        \n        if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n          genderKey = 'Men';\n        } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n          genderKey = 'Women';\n        } else{\n          genderKey = 'Unknown';\n        }\n        \n        if (!datasetsByGenre[genderKey]) {\n          datasetsByGenre[genderKey] = [];\n        }\n        \n        const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n        \n        if (existingData) {\n          existingData.count++;\n        } else {\n          datasetsByGenre[genderKey].push({\n            year,\n            count: 1\n          });\n        }\n      });\n\n      // Create an object to store the ordered data\n      const sortedData: { [anio: string]: { hombres: number; mujeres: number; total: number} } = {};\n      const men = datasetsByGenre['Men'];\n      const women = datasetsByGenre['Women'];\n\n      // Sort men's data\n      men.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        sortedData[year] = { hombres: count, mujeres: 0, total: count };\n      });\n\n      // Sort the women's data and combine it with the men's data\n      women.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        if (sortedData[year]) {\n          sortedData[year].mujeres = count;\n          sortedData[year].total += count;\n        } else {\n          sortedData[year] = { mujeres: count, hombres: 0, total: count };\n        }\n      });\n\n\n      // Get the years sorted\n      const organizedYears = Object.keys(sortedData).sort();\n\n\n      const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres/(sortedData[anio].total)).toFixed(4)));\n      const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres/(sortedData[anio].total)).toFixed(4)));\n\n      \n      this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n      this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n\n  generateMultipleGraph(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n  \n    const chartConfig: ChartConfiguration<'line'> = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true,\n          },\n        },\n      },\n    };\n  \n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generateCircularChart(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const colors = ['#FF5733', '#3399FF'];\n\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],  // Cambia la opacidad a un valor más alto\n      borderColor: 'black',\n    }));\n  \n    const chartConfig: ChartConfiguration<'pie'> = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n      },\n    };\n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  \n\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart = \"barChart1\"){\n      this.barChart = new Chart(idChart, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              backgroundColor: 'rgb(51, 153, 255)',\n              borderColor: 'rgb(51, 153, 255)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }  \n\n  generateBarChartArticles(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart = \"barChart2\"){\n      this.barChart2 = new Chart(idChart, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              backgroundColor: 'rgb(255, 87, 51)',\n              borderColor: 'rgb(255, 87, 51)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }  \n\n\n  randomColor(){\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n\n  getRandomColor(index: number) {\n    let colors: Record<number, string> = {\n      0: \"rgba(51, 153, 255)\",\n      1: \"rgba(255, 0, 0, 1)\",\n      2: \"rgba(98, 192, 75, 1)\", \n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n\n    return colors[index];\n  }\n\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', { responseType: 'text' }).subscribe(\n      (data: string) => {\n        this.commonNames = this.parseCommonNames(data);\n      },\n      (error: any) => {\n        console.error('Error al cargar los datos:', error);\n      }\n    );\n  }\n\n  parseCommonNames(data: string) {\n\n    const lines = data.split('\\n');\n    const dict: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n    let currentName = '';\n    let currentData: { frec_paises: { [key: string]: number }, genero: string } = {\n      frec_paises: {},\n      genero: ''\n    };\n  \n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = { frec_paises: {}, genero: '' };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n\n  async main(){\n    try {\n      this.selectedTitles = this.stadisticsService.getSelectedTitles();\n      this.conferenceOption = this.stadisticsService.getConferenceOption();\n      this.venueName = this.stadisticsService.getVenueName();\n      if(this.stadisticsService.venueNameConfirm != this.stadisticsService.getVenueName()){\n        this.getConferencebyProceeding();\n      }else{\n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n      }\n      this.getResearchersConference();\n      this.getPapers();\n      this.getArticles();\n      this.getConferencebyProceeding();\n  \n      if(this.researchers.length == 0){\n        await this.waitResearcherNoEmpty(); \n        this.getDemographicData();\n      } else{\n        this.getDemographicData();\n      }\n\n      if(this.papers.length == 0){\n        await this.waitPapersNoEmpty();\n        this.getCollaborations();\n        this.getAuthorsPapers();\n      }else{\n         this.getCollaborations();;\n         this.getAuthorsPapers();\n      }\n\n      if(this.articles.length == 0){\n        await this.waitArticlesNoEmpty();\n        this.getCollaborations();\n        this.getAuthorsPapers();\n      }else{\n        this.getCollaborations();;\n        this.getAuthorsPapers();\n      }\n\n      if(this.papersWithAuthors.length == 0){\n        await this.waitAuthorsWithPapersNoEmpty();\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }else{\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }\n\n\n      \n      if(this.singleAuthor.length == 0){\n        await this.waitSingleAuthorsNoEmpty();\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }else{\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }\n      this.statsProlificAuthors2(this.selectedYears);\n \n      this.getConnectedComponents();\n      this.getConnectedComponentsByvenue();\n\n      while(this.stadisticsService.conferencesNames.length <1){\n        this.loadingTable1 = true;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.spinnerService.show()\n      }\n      this.loadingTable1 = false;\n      this.stadisticsService.venueNameConfirm = this.stadisticsService.getVenueName();\n\n     \n  } catch (error) {\n    console.error('Error in getData with:', error);\n  }\n  }\n\n}","<div>\n  <h2>Statistics</h2>\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Authors / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart6\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\"  [hidden]=\"ConferencesCount < 2\">\n      <h3>Authors by Conference or Journal / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart1\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\" *ngIf=\"this.papers.length > 0\">\n\n  <div class=\"flex-container\">\n\n    <div class=\"flex-item\" [hidden]=\"papers.length < 1\">\n      <h3>Conference Papers / Year</h3>\n\n      <div class=\"canvas-container\" >\n        <canvas id=\"lineChart7\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\"[hidden]=\"papers.length < 1 || ConferencesCount < 2\">\n      <h3>Papers by Conference / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart2\" ></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\" *ngIf=\"articles.length > 0\">\n\n  <div class=\"flex-container\">\n \n    <div class=\"flex-item\" [hidden]=\"articles.length < 1\">\n      <h3>Journal Articles / Year</h3>\n\n      <div class=\"canvas-container\" >\n        <canvas id=\"lineChart14\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\" [hidden]=\"articles.length < 1 || journalsCount < 2\">\n      <h3>Articles by Journal / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart15\"></canvas>\n      </div>\n    </div>\n   \n   \n  </div>\n\n  <hr class=\"line\" >\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Density evolution over the years</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart3\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\" [hidden]=\"papers.length < 1\">\n\n  <div class=\"flex-container\" >\n    <!-- [hidden]=\"statistics[4].years.length === 0\" -->\n    <div class=\"flex-item\" [hidden]=\"singlePapers.length < 1\" >\n      <h3>Percentage of single-author Papers / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChart1\"></canvas>\n      </div>\n    </div>\n    <!-- [hidden]=\"statistics[8].years.length === 0 \" -->\n    <div class=\"flex-item\" [hidden]=\"singleArticles.length < 1\" >\n      <h3>Percentage of single-author Articles / Year </h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChart2\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Distributions of authors by paper and journal and of papers and journals by author</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n      <table id=\"authorsTable\">\n        <thead>\n          <tr>\n            <th>Author</th>\n            <th>Papers/Journal (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"papersTable\">\n        <thead>\n          <tr>\n            <th>Papers</th>\n            <th>Papers/Journal (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\"> Percentage of Publications Men-Women / Year</h3>\n  <div class=\"flex-container2\">\n\n    <div class=\"graph-bars\">\n\n        <div class=\"canvas-container1\">\n          <div class=\"legend\">\n            <div class=\"men\"></div> Men\n            <div class=\"women\"></div> Women\n          </div>\n          <canvas class=\"circular\" id=\"lineChart4\"></canvas>\n        </div>\n        \n    </div>\n\n    <div class=\"graph-bars2\">\n      <div class=\"canvas-container2\">\n        <canvas id=\"lineChart8\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3> Percentage of publications by Country / Year</h3>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\"> \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart5\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most frequent Bigrams and Trigrams</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n        <table id=\"tableBigramas\">\n          <thead>\n            <tr>\n              <th>Bigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"tableTrigramas\">\n          <thead>\n            <tr>\n              <th>Trigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Frequent terms from all titles of papers</h3>\n  <div class=\"conceptual\">\n    <angular-tag-cloud [config]=\"options\" [data]=\"cloudData\"></angular-tag-cloud>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most prolific authors according to their number of publications accumulated by decade</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"table90\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (a) 1989-1999\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"table00\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (b) 1999-2009\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"table10\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2009-2019\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n  </div>\n  <div class=\"linev\"></div>\n  <div class=\"table\">\n      <table id=\"table20\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2019-2024\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <h3>Authors with their first and most recent year of publication</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"degree\">\n          <thead>\n            <tr>\n              <th>Author</th>\n              <th>Degree</th>\n              <th>First <br> year</th>\n              <th>Recent <br> year</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\" [hidden]=\"papers.length < 1\">\n\n  <h3 [hidden]=\"papers.length < 1\">Proceeding by Conference</h3>\n  <div class=\"container-table2\">\n   \n    <div class=\"table\" [hidden]=\"papers.length < 1\">\n      <table id=\"tableProceeding\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Year</th>\n            <th>numberOfInProceedings</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n  <div class=\"overlay\" [hidden]=\"papers.length < 1\"*ngIf=\"loadingTable1\">\n    <app-spinner ></app-spinner>\n  </div>\n  \n\n  <hr class=\"line3\" [hidden]=\"papers.length < 1\">\n\n  <div class=\"flex-container\">\n\n    <div class=\"flex-item\" [hidden]=\"papers.length < 1\">\n      <h3>All Connected Components by year</h3>\n  \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart11\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\" [hidden]=\"papers.length < 1\">\n      <h3>Connected components for each Conference by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart12\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n \n  <div class=\"flex-container\">\n    <div class=\"flex-item\" [hidden]=\"papers.length < 1\"> \n      <h3>Relative size of components connected by conference</h3>\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart13\"></canvas>\n      </div>\n    </div>\n  </div>\n\n\n  \n</div>\n\n\n\n\n\n \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}