{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"../selection.service\";\nChart.register(...registerables);\nexport class ConfigComponent {\n  constructor(apiService, seleccionService) {\n    this.apiService = apiService;\n    this.seleccionService = seleccionService;\n    this.titulosSeleccionados = [];\n    this.conferenceOption = \"\";\n    this.venueName = [];\n    this.publicationsByYear = [];\n    this.allPublications = 0;\n  }\n  ngOnInit() {\n    this.main();\n  }\n  getPublicationsbyYear() {\n    this.apiService.getPublicationsbyYear().subscribe({\n      next: response => {\n        this.publicationsByYear = response;\n        // Asigna la respuesta del servicio a la variable\n        this.publicationsByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n        const years = this.publicationsByYear.map(item => item.yearName);\n        const publications = this.publicationsByYear.map(item => item.totalPublications);\n        this.generateBarChart('barChartp', 'Publicaciones por año', years, publications);\n        console.log('Publicaciones por año:', this.publicationsByYear);\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getBooks:', error);\n      }\n    });\n  }\n  getPublications() {\n    this.apiService.getPublications().subscribe({\n      next: response => {\n        console.log('Total de puffffffblicaciones:', response);\n        if (response.length > 0) {\n          // Accede a la propiedad correcta en la respuesta para obtener el número total de publicaciones\n          this.allPublications = response[0].all_publications;\n        } else {\n          // Si la respuesta está vacía, asigna 0 a this.allPublications\n          this.allPublications = 0;\n        }\n        console.log('Total de publicaciones:', this.allPublications);\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getBooks:', error);\n      }\n    });\n  }\n  generateBarChart(idChart, label, labels, data) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          backgroundColor: 'rgb(0, 22, 68)',\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  main() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.titulosSeleccionados = _this.seleccionService.getSelectedTitles();\n        _this.conferenceOption = _this.seleccionService.getConferenceOption();\n        _this.venueName = _this.seleccionService.getVenueName();\n        _this.getPublicationsbyYear();\n        _this.getPublications();\n      } catch (error) {\n        console.error('Error in getData:', error);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function ConfigComponent_Factory(t) {\n    return new (t || ConfigComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.SelectionService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfigComponent,\n    selectors: [[\"app-config\"]],\n    decls: 6,\n    vars: 0,\n    consts: [[1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [\"id\", \"barChartp\"]],\n    template: function ConfigComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\");\n        i0.ɵɵtext(3, \"Percentage of single-author papers per year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelement(5, \"canvas\", 3);\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    styles: [\".flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29uZmlnL2NvbmZpZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtBQUNKOztBQUVBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuZmxleC1jb250YWluZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBvdmVyZmxvdzogYXV0bztcbn1cblxuLmZsZXgtaXRlbSB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","register","ConfigComponent","constructor","apiService","seleccionService","titulosSeleccionados","conferenceOption","venueName","publicationsByYear","allPublications","ngOnInit","main","getPublicationsbyYear","subscribe","next","response","sort","a","b","parseInt","yearName","years","map","item","publications","totalPublications","generateBarChart","console","log","error","getPublications","length","all_publications","idChart","label","labels","data","barChart","type","datasets","backgroundColor","borderColor","borderWidth","options","plugins","legend","color","font","size","family","scales","y","beginAtZero","_this","_asyncToGenerator","getSelectedTitles","getConferenceOption","getVenueName","_","i0","ɵɵdirectiveInject","i1","ApiService","i2","SelectionService","_2","selectors","decls","vars","consts","template","ConfigComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/config/config.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/config/config.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { SelectionService } from '../selection.service';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\n\n\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss']\n})\nexport class ConfigComponent implements OnInit{\n  \n  titulosSeleccionados: any[] = [];\n  conferenceOption: string = \"\";\n  venueName: any[] = [];\n  publicationsByYear: { yearName: string, totalPublications: number }[] = [];\n  allPublications = 0;\n  barChart!: Chart;\n  \n\n  constructor(\n    private apiService: ApiService,\n    private seleccionService: SelectionService,\n  ) {}\n\n\n\n  ngOnInit() {\n    this.main();\n  }\n\n  getPublicationsbyYear() {\n \n  \n    this.apiService.getPublicationsbyYear().subscribe({\n      next: (response: any[]) => {\n        this.publicationsByYear = response; \n        // Asigna la respuesta del servicio a la variable\n        this.publicationsByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n    \n        const years = this.publicationsByYear.map(item => item.yearName);\n        const publications = this.publicationsByYear.map(item => item.totalPublications);\n    \n\n        this.generateBarChart('barChartp', 'Publicaciones por año', years, publications);\n        console.log('Publicaciones por año:', this.publicationsByYear);\n \n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getBooks:', error);\n      }\n    });\n  }\n\n  getPublications() {\n    this.apiService.getPublications().subscribe({\n      next: (response: any[]) => {\n        console.log('Total de puffffffblicaciones:', response);\n  \n        if (response.length > 0) {\n          // Accede a la propiedad correcta en la respuesta para obtener el número total de publicaciones\n          this.allPublications = response[0].all_publications;\n        } else {\n          // Si la respuesta está vacía, asigna 0 a this.allPublications\n          this.allPublications = 0;\n        }\n        console.log('Total de publicaciones:', this.allPublications);\n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getBooks:', error);\n      }\n    });\n  }\n\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n\n\n\n  async main(){\n    try {\n      this.titulosSeleccionados = this.seleccionService.getSelectedTitles();\n      this.conferenceOption = this.seleccionService.getConferenceOption();\n      this.venueName = this.seleccionService.getVenueName();\n\n      this.getPublicationsbyYear();\n      this.getPublications();\n    \n\n  } catch (error) {\n    console.error('Error in getData:', error);\n  }\n  }\n \n}\n\n","<div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Percentage of single-author papers per year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChartp\"></canvas>\n      </div>\n    </div>\n   \n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}