{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nimport { singular } from 'pluralize';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"../services/stadistics.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../services/spinner.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"angular-tag-cloud-module\";\nimport * as i7 from \"../spinner/spinner.component\";\nconst _c0 = [\"chartCanvas\"];\nfunction StatisticsComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 49);\n    i0.ɵɵelement(1, \"app-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StatisticsComponent_div_227_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 50);\n    i0.ɵɵelement(1, \"app-spinner\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", ctx_r1.papers.length < 1);\n  }\n}\nChart.register(...registerables);\nexport class StatisticsComponent {\n  constructor(apiService, stadisticsService, http, spinnerService) {\n    this.apiService = apiService;\n    this.stadisticsService = stadisticsService;\n    this.http = http;\n    this.spinnerService = spinnerService;\n    this.selectedTitles = [];\n    this.selectedYears = [];\n    this.conferenceOption = \"\";\n    this.venueName = [];\n    this.papers = [];\n    this.collaborations = [];\n    this.connectedComponents = [];\n    this.singleAuthor = [];\n    this.statistics = [];\n    this.statsAuthors = [];\n    this.statsPaper = [];\n    this.journalsCount = 0;\n    this.ConferencesCount = 0;\n    this.ConferencesAuthors = 0;\n    this.totalAuthorsByYear = [];\n    this.PapersAndArticlesByYear = [];\n    this.totalArticlesByYear = [];\n    this.totalPapersByYear = [];\n    this.singlePapers = [];\n    this.decadeStats = [];\n    this.researchers = [];\n    this.papersWithAuthors = [];\n    this.loadingTable1 = true;\n    this.loadingTable2 = true;\n    this.conferenceName = [];\n    this.commonNames = {};\n    this.options = {\n      width: 500,\n      height: 200,\n      overflow: false,\n      realignOnResize: false,\n      strict: false,\n      step: 2\n    };\n    this.cloudData = [];\n  }\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n  waitResearcherNoEmpty() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (!_this.researchers || _this.researchers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitPapersNoEmpty() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this2.papers || _this2.papers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.researchers = [];\n        this.researchers = response;\n        this.statsResearchers();\n        this.statsTotalAuthorsByYear();\n        if (this.researchers.length > 1) {\n          if (this.lineChart) {\n            this.lineChart.destroy();\n          }\n          this.generateChart('lineChart1', 'Number of authors', this.statsAuthors);\n          this.generateTotalAuthorsChart('lineChart6', 'Total Authors by Year', this.totalAuthorsByYear);\n        }\n      },\n      error: error => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n  }\n  statsTotalAuthorsByYear() {\n    const years = this.selectedTitles.map(title => title.properties.name);\n    years.sort((a, b) => parseInt(a) - parseInt(b));\n    this.totalAuthorsByYear = years.map(year => {\n      const totalAuthors = this.researchers.reduce((total, researcher) => {\n        if (researcher.years.includes(year)) {\n          return total + 1;\n        }\n        return total;\n      }, 0);\n      return {\n        year: year,\n        totalAuthors: totalAuthors\n      };\n    });\n  }\n  getPapersAndArticles() {\n    this.apiService.getPapersAndArticles(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.papers = response;\n        this.statsPapers();\n        this.statsTotalPapersByYear();\n        if (this.papers.length > 0) {\n          this.generateChart('lineChart2', 'Number of papers', this.statsPaper);\n          this.generateTotalAuthorsChart('lineChart7', 'Total Papers by Year', this.PapersAndArticlesByYear);\n        }\n      },\n      error: error => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n  statsTotalPapersByYear() {\n    let years = this.papers.map(paper => paper.year);\n    years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n    years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n    // Filtrar Papers y Articles\n    const papersByYear = this.papers.filter(paper => paper.type === \"Paper\");\n    const articlesByYear = this.papers.filter(paper => paper.type === \"Article\");\n    // Calcular el total de Papers y Articles por año\n    this.PapersAndArticlesByYear = years.map(year => {\n      const papersOfYear = papersByYear.filter(paper => paper.year === year);\n      const articlesOfYear = articlesByYear.filter(article => article.year === year);\n      const totalPapers = papersOfYear.reduce((total, paper) => {\n        return total + paper.numPapersAndArticles.low;\n      }, 0);\n      const totalArticles = articlesOfYear.reduce((total, article) => {\n        return total + article.numPapersAndArticles.low;\n      }, 0);\n      return {\n        year: year,\n        totalPapers: totalPapers,\n        totalArticles: totalArticles\n      };\n    });\n    // Llamar a la función para generar el gráfico\n    this.generateTotalAuthorsChart('lineChart7', 'Total Papers and Articles by Year', this.PapersAndArticlesByYear);\n  }\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.collaborations = response;\n        console.log(this.collaborations);\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: error => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n  getConnectedComponents() {\n    this.apiService.getConnectedComponents(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConnectedComponentsByvenue() {\n    this.apiService.getConnectedComponentsByvenue(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n        this.generateChart4('lineChart13', 'Number of Connected Components', this.statistics[7]);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConferencebyProceeding() {\n    this.apiService.getConferencebyProceeding(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.stadisticsService.conferencesNames = [];\n        this.stadisticsService.years = [];\n        this.stadisticsService.inprocedings = [];\n        response.forEach(({\n          title,\n          year,\n          numberOfInProceedings\n        }) => {\n          this.stadisticsService.conferencesNames.push(title);\n          this.stadisticsService.years.push(year);\n          this.stadisticsService.inprocedings.push(numberOfInProceedings);\n        });\n        this.loadingTable1 = false;\n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n      },\n      error: error => {\n        console.error('Error in getConferencebyProceeding:', error);\n      }\n    });\n  }\n  generateTablesProceeding(venueTitles, years, numberOfInProceedings) {\n    const table = document.querySelector('#tableProceeding tbody');\n    if (table instanceof HTMLElement) {\n      table.innerHTML = ''; // Limpiar tabla existente antes de agregar nuevas filas\n      venueTitles.forEach((venueTitle, index) => {\n        // Divide el título en partes usando la coma como delimitador\n        const parts = venueTitle.split(',');\n        if (parts.length == 6) {\n          parts[4] = parts[4].replace(\"Proceedings\", \"\");\n          const date = parts[4].split('.');\n          // Construye el objeto que contiene los datos para la tabla\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[2] + ',' + parts[3],\n            date: date.slice(0).join(' ')\n          };\n          // Crea una fila para la tabla y agrega los datos\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          // Agrega la fila a la tabla\n          table.appendChild(row);\n        }\n        if (parts.length == 5) {\n          parts[3] = parts[3].replace(\"Proceedings\", \"\").trim();\n          const date = parts[3].split('.');\n          const hasNumber = /\\d/.test(date[0]);\n          if (hasNumber) {\n            if (parts[1].includes(\"Florence\")) {\n              const rowData = {\n                name: parts[0],\n                location: parts[1].trim() + ',' + parts[2],\n                date: date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            } else {\n              // Construye el objeto que contiene los datos para la tabla\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2],\n                date: date[0]\n              };\n              // Crea una fila para la tabla y agrega los datos\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              // Agrega la fila a la tabla\n              table.appendChild(row);\n            }\n          } else {\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4]\n            };\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n          }\n        }\n        if (parts.length == 7) {\n          parts[5] = parts[5].replace(\"Proceedings\", \"\");\n          const date = parts[5].split('.');\n          if (parts[2].length > 15) {\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[3] + ', ' + parts[4],\n              date: date[0]\n            };\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            table.appendChild(row);\n          } else {\n            const isValidFormat = /^[a-zA-Z]+\\s+\\d{1,2}(-\\d{1,2}|\\d{1,2}[a-zA-Z]+\\s+\\d{1,2})$/.test(date[0].trim());\n            if (isValidFormat) {\n              if (parts[2].includes(\"ER\")) {\n                const rowData = {\n                  name: parts[0] + ',' + parts[1].trim() + '-' + parts[2],\n                  location: parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              } else {\n                const rowData = {\n                  name: parts[0] + '-' + parts[1].trim(),\n                  location: parts[2] + ', ' + parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              }\n            } else {\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2] + ', ' + parts[3],\n                date: parts[4] + ', ' + date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            }\n          }\n        }\n      });\n    }\n  }\n  waitAuthorsWithPapersNoEmpty() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this3.papersWithAuthors || _this3.papersWithAuthors.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitSingleAuthorsNoEmpty() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this4.singleAuthor || _this4.singleAuthor.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getAuthorsPapers() {\n    var _this5 = this;\n    this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          _this5.singleAuthor = response;\n          console.log(_this5.singleAuthor);\n          _this5.statsSingleAuthor();\n        });\n        return function next(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      error: error => {\n        console.error('Error in getAuthorsPapers:', error);\n      }\n    });\n  }\n  /**Function to obtain the distributions of both authors by papers and papers by authors*/\n  getDistributions() {\n    const labels = ['1', '2', '3', '4', '5 o más'];\n    // This represents the number of authors that each paper has.\n    const authorsByPaper = [1, 2, 3, 4].map(numAuthors => this.papersWithAuthors.filter(paper => paper.numAuthors === numAuthors).length);\n    authorsByPaper[4] = this.papersWithAuthors.filter(paper => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapersAndArticles.low, 0);\n    // This represents the number of published papers that each author has.\n    const papersByAuthor = [1, 2, 3, 4].map(numPubs => this.singleAuthor.filter(paper => paper.numPublications === numPubs).length);\n    papersByAuthor[4] = this.singleAuthor.filter(paper => paper.numPublications >= 5).length;\n    const allAuthors = this.singleAuthor.length;\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n  getDemographicData() {\n    const datasets = this.researchers.map(researcher => {\n      let name = researcher.researcher.properties.name.split(' ')[0];\n      if (name.includes(\"-\")) {\n        name = name.split('-')[0];\n      }\n      const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      const datasetByYear = years.map(year => {\n        const info = this.commonNames[name];\n        const genero = info ? info.genero : 'Unknown';\n        const frecuencias = info ? info.frec_paises : {};\n        return {\n          year,\n          name,\n          genero,\n          frecuencias\n        };\n      });\n      return datasetByYear;\n    }).flat();\n    this.statsGender(datasets);\n    this.statsGeography(datasets);\n  }\n  generateNGrams(titles, n) {\n    const ngrams = [];\n    titles.forEach(title => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  countFrequencies(ngrams) {\n    const frequencies = new Map();\n    ngrams.forEach(ngram => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n  clearTitle(title, stopwords) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    return newTitle;\n  }\n  getTopN(frequencies, n) {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n  getTopicAnalysis() {\n    // We require natural to tokenize and remove stopwords, and calculate frequencies\n    const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n    const cleanTitles = this.papersWithAuthors.map(paper => {\n      const ipName = this.clearTitle(paper.ipName, stopwords);\n      const year = parseInt(paper.year);\n      return {\n        ipName,\n        year\n      };\n    });\n    const bigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 2);\n    const trigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 3);\n    const bigramFrequencies = this.countFrequencies(bigrams);\n    const trigramFrequencies = this.countFrequencies(trigrams);\n    const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n    const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n    const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const table1 = document.querySelector('#tableBigramas tbody');\n    const table2 = document.querySelector('#tableTrigramas tbody');\n    if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n      top20BigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table1.appendChild(row);\n      });\n      top20TrigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table2.appendChild(row);\n      });\n    }\n    const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n    combinedData.sort((a, b) => b.count - a.count);\n    const maxFrecuencia = combinedData[0].count;\n    const minWeight = 0;\n    const maxWeight = 20;\n    const wordCloudData = combinedData.map((item, index) => ({\n      text: item.ngram,\n      weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n      color: this.randomColor()\n    }));\n    this.cloudData = wordCloudData;\n  }\n  calculateWeight(frec, maxFrec, minWeight, maxWeight) {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n  /**\n   * ############################################\n   */\n  statsResearchers() {\n    const names = new Set(this.researchers.map(researcher => researcher.name));\n    this.ConferencesAuthors = names.size;\n    this.statsAuthors = [];\n    this.statsAuthors = Array.from(names).map(name => {\n      const years = this.selectedTitles.map(titulo => titulo.properties.name);\n      years.sort((a, b) => parseInt(a) - parseInt(b));\n      this.selectedYears = years;\n      const numResearchersPorAnio = years.map(anio => this.researchers.reduce((total, researcher) => {\n        if (researcher.name === name && researcher.years.includes(anio)) {\n          return total + 1;\n        }\n        return total;\n      }, 0));\n      return {\n        name: name,\n        years: years,\n        numResearchers: numResearchersPorAnio\n      };\n    });\n  }\n  statsPapers() {\n    const names = new Set(this.papers.map(paper => paper.name));\n    this.ConferencesCount = names.size;\n    this.statsPaper = Array.from(names).map(name => {\n      let years = this.papers.map(paper => paper.year);\n      years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n      years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n      const numPapersAndArticlesPorAnio = years.map(year => this.papers.reduce((total, paper) => {\n        const numPapersAndArticles = paper.numPapersAndArticles.low;\n        if (paper.name === name && paper.year === year) {\n          return total + numPapersAndArticles;\n        }\n        return total;\n      }, 0));\n      return {\n        name: name,\n        years: years,\n        numResearchers: numPapersAndArticlesPorAnio\n      };\n    });\n  }\n  statsColaboraciones() {\n    let colabsXtotal = [];\n    const colabsPapers = this.papers.map(paper => {\n      const colab = this.collaborations.find(c => c.year === paper.year);\n      const integer = paper.numPapersAndArticles.low;\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapersAndArticles: integer\n      };\n    });\n    colabsXtotal = colabsXtotal.concat(colabsPapers);\n    // Sumar densidades por año\n    const densidadesPorAño = {}; // Tipo explícito para densidadesPorAño\n    colabsXtotal.forEach(dato => {\n      const {\n        year,\n        numColabs,\n        numPapersAndArticles\n      } = dato;\n      if (!densidadesPorAño[year]) {\n        densidadesPorAño[year] = 0;\n      }\n      densidadesPorAño[year] += numColabs / numPapersAndArticles;\n    });\n    // Convertir el objeto en un array de objetos\n    const density = Object.entries(densidadesPorAño).map(([year, density]) => ({\n      year: parseInt(year),\n      density\n    }));\n    this.statistics[3] = {\n      years: density.map(dato => dato.year),\n      densidades: density.map(dato => dato.density)\n    };\n  }\n  statsConnectedComponents() {\n    // Copiar los datos originales para no afectar el orden original\n    const copiedData = [...this.connectedComponents];\n    // Ordenar los datos por año\n    copiedData.sort((a, b) => a.year - b.year);\n    // Extraer los años y componentes conectados ordenados\n    const years = copiedData.map(item => item.year);\n    const connectedComponents = copiedData.map(item => item.connectedComponents);\n    this.statistics[5] = {\n      years: years,\n      connectedComponents: connectedComponents\n      // Puedes agregar otras propiedades si es necesario\n    };\n  }\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap = new Map();\n    const venueDataMapRelative = new Map();\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName\n        });\n      }\n      const venueData = venueDataMap.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        venueData.connectedComponents.push(item.connectedComponents);\n      }\n    });\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMapRelative.has(venueName)) {\n        venueDataMapRelative.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName\n        });\n      }\n      const venueData = venueDataMapRelative.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        let adjustedComponents = item.connectedComponents;\n        while (adjustedComponents > 1) {\n          adjustedComponents /= 10;\n        }\n        venueData.connectedComponents.push(adjustedComponents);\n      }\n    });\n    this.statistics[6] = Array.from(venueDataMap.values());\n    this.statistics[7] = Array.from(venueDataMapRelative.values());\n  }\n  statsSingleAuthor() {\n    const papersWithAuthors = [];\n    // Map all the researchers, to create papersWithAuthors, which is an array that has the name of a publication\n    // and the authors who have contributed to it.\n    this.singleAuthor.forEach(author => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n          papersWithAuthors.push({\n            ipName,\n            numAuthors: 1,\n            authorNames: [author.researcher],\n            year: author.year\n          });\n        }\n      });\n    });\n    this.papersWithAuthors = papersWithAuthors;\n    // We get all the entries whose author is one, for the statistics\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapersAndArticles = paper.numPapersAndArticles.low;\n      const numPapersAndArticlesWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = numPapersAndArticlesWithSingleAuthor / numPapersAndArticles * 100;\n      return {\n        year,\n        percentage\n      };\n    });\n    console.log(this.statistics[4]);\n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n    console.log(this.statistics[4]);\n    let years = this.statistics[4].years;\n    let porcentajes = this.statistics[4].porcentajes;\n    // Crear un objeto para mapear años a porcentajes\n    let datosPorAño = {};\n    // Iterar sobre los datos y agrupar los porcentajes por año\n    for (let i = 0; i < years.length; i++) {\n      let year = years[i];\n      let porcentaje = porcentajes[i];\n      if (!datosPorAño[year]) {\n        datosPorAño[year] = [porcentaje];\n      } else {\n        datosPorAño[year].push(porcentaje);\n      }\n    }\n    // Calcular la media de los porcentajes y eliminar años duplicados\n    let añosUnicos = [];\n    let porcentajesMedios = [];\n    for (let año in datosPorAño) {\n      let porcentajesAño = datosPorAño[año];\n      let media = porcentajesAño.reduce((acc, curr) => acc + curr, 0) / porcentajesAño.length;\n      añosUnicos.push(año);\n      porcentajesMedios.push(media);\n    }\n    this.statistics[4] = [];\n    // Actualizar los datos originales\n    this.statistics[4].years = añosUnicos;\n    this.statistics[4].porcentajes = porcentajesMedios;\n    this.singlePapers = this.statistics[4];\n    console.log(this.statistics[4]);\n    console.log(this.singlePapers);\n    this.generateBarChart('barChart1', 'Single Author Papers and Journals', this.statistics[4].years, this.statistics[4].porcentajes);\n  }\n  statsGeography(datasets) {\n    const mappingDate = {};\n    const datasetFiltered = datasets.filter(object => Object.keys(object.frecuencias).length > 0);\n    // Obtener todas las fechas únicas\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n    // Iterar sobre las fechas\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n      // Crear objeto de mapeo para la fecha actual\n      mappingDate[date] = {};\n      for (const object of objectDate) {\n        let countryHighest = '';\n        let highestFrequency = -1;\n        for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if (!(countryHighest in mappingDate[date])) {\n          mappingDate[date][countryHighest] = 1;\n        } else {\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n    // We normalize values according to their total\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country] / total).toFixed(4));\n      }\n    }\n    const years = Object.keys(mappingDate); // Get the keys of the years\n    const countries = Object.keys(mappingDate[years[0]]); // Get country names\n    const datasetsLabels = countries; // Labels of the data sets will be the names of the countries \n    // Create the data matrix for the countries\n    const datasetsData = countries.map(country => years.map(year => mappingDate[year][country]));\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n  }\n  filterAuthorsByDecade(authors, startYear, endYear) {\n    const filteredAuthors = [];\n    // Browse the original authors\n    authors.forEach(author => {\n      // Check if the author is within the specified decade\n      const authorYears = author.year.split(\",\").map(Number).filter(year => year >= startYear && year <= endYear);\n      if (authorYears.length > 0) {\n        // Search if there is already a merged author with the same name and decade\n        const existingAuthor = filteredAuthors.find(filteredAuthor => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Merge the existing author's entries with the current author's entries\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Add the current author to the list of filtered authors\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n    return filteredAuthors;\n  }\n  statsProlificAuthors(selectedYears) {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n    // Generate the decades within the selected year range\n    const decades = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }\n    // Sort authors by number of publications in each decade\n    decades.forEach(decade => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20) {\n        decade.authors = decade.authors.slice(0, 20);\n      }\n    });\n    // Return the decades with the authors ordered\n    return decades;\n  }\n  statsProlificAuthors2(selectedYears) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n    const tables = {\n      'degree': document.querySelector('#degree tbody')\n    };\n    for (const author of topAuthors) {\n      const table = tables['degree'];\n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n        table.appendChild(row);\n      }\n    }\n  }\n  generateTablesDecades2(decadeStats) {\n    const tables = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody')\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach(autor => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n          table.appendChild(row);\n        });\n      }\n    }\n  }\n  generateTotalPapersAndArticles(idChart, label, data, data2) {\n    const years = data.map(entry => entry.year);\n    if (idChart == \"lineChart7\") {\n      this.lineChart7 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [{\n            label: 'Papers',\n            data: this.totalPapersByYear,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }, {\n            label: 'Articles',\n            data: this.totalArticlesByYear,\n            fill: false,\n            borderColor: 'rgb(68, 0, 22)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateTotalAuthorsChart(idChart, label, data) {\n    const years = data.map(entry => entry.year);\n    const totalAuthors = data.map(entry => entry.totalAuthors);\n    const totalPapers = data.map(entry => entry.totalPapers);\n    const totalArticles = data.map(entry => entry.totalArticles);\n    if (idChart == \"lineChart6\") {\n      this.lineChart6 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [{\n            label: label,\n            data: totalAuthors,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart7\") {\n      this.lineChart7 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [{\n            label: 'Papers',\n            data: totalPapers,\n            fill: false,\n            borderColor: \"rgba(51, 153, 255)\",\n            borderWidth: 1\n          }, {\n            label: 'Articles',\n            data: totalArticles,\n            fill: false,\n            borderColor: \"rgba(255, 0, 0, 1)\",\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart(idChart, label, data) {\n    const datasets = data.map((entry, index) => ({\n      label: entry.name,\n      data: entry.numResearchers,\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n    if (idChart == \"lineChart2\") {\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart1\") {\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart3(idChart, label, labels, data) {\n    if (idChart == \"lineChart11\" || idChart == \"lineChart3\") {\n      this.lineChart3 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart4(idChart, label, data) {\n    const datasets = data.map((venue, index) => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        fill: false,\n        borderColor: this.getRandomColor(index),\n        borderWidth: 1\n      };\n    });\n    const allYears = Array.from(new Set([].concat(...datasets.map(dataset => dataset.years))));\n    allYears.sort();\n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    });\n  }\n  statsGender(datasets) {\n    const datasetsByGenre = {};\n    datasets.forEach(data => {\n      const {\n        year,\n        genero\n      } = data;\n      let genderKey = '';\n      if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n        genderKey = 'Men';\n      } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n        genderKey = 'Women';\n      } else {\n        genderKey = 'Unknown';\n      }\n      if (!datasetsByGenre[genderKey]) {\n        datasetsByGenre[genderKey] = [];\n      }\n      const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n      if (existingData) {\n        existingData.count++;\n      } else {\n        datasetsByGenre[genderKey].push({\n          year,\n          count: 1\n        });\n      }\n    });\n    // Create an object to store the ordered data\n    const sortedData = {};\n    const men = datasetsByGenre['Men'];\n    const women = datasetsByGenre['Women'];\n    // Sort men's data\n    men.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      sortedData[year] = {\n        hombres: count,\n        mujeres: 0,\n        total: count\n      };\n    });\n    // Sort the women's data and combine it with the men's data\n    women.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      if (sortedData[year]) {\n        sortedData[year].mujeres = count;\n        sortedData[year].total += count;\n      } else {\n        sortedData[year] = {\n          mujeres: count,\n          hombres: 0,\n          total: count\n        };\n      }\n    });\n    // Get the years sorted\n    const organizedYears = Object.keys(sortedData).sort();\n    const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres / sortedData[anio].total).toFixed(4)));\n    const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres / sortedData[anio].total).toFixed(4)));\n    this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n    this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n  generateMultipleGraph(chartId, labels, datasetsLabels, datasetsData) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateCircularChart(chartId, labels, datasetsLabels, datasetsData) {\n    const colors = ['#FF5733', '#3399FF'];\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],\n      borderColor: 'black'\n    }));\n    const chartConfig = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateBarChart(idChart, label, labels, data) {\n    if (idChart = \"barChart1\") {\n      this.barChart = new Chart(idChart, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }\n  randomColor() {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n  getRandomColor(index) {\n    let colors = {\n      0: \"rgba(51, 153, 255)\",\n      1: \"rgba(255, 0, 0, 1)\",\n      2: \"rgba(98, 192, 75, 1)\",\n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n    return colors[index];\n  }\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', {\n      responseType: 'text'\n    }).subscribe(data => {\n      this.commonNames = this.parseCommonNames(data);\n    }, error => {\n      console.error('Error al cargar los datos:', error);\n    });\n  }\n  parseCommonNames(data) {\n    const lines = data.split('\\n');\n    const dict = {};\n    let currentName = '';\n    let currentData = {\n      frec_paises: {},\n      genero: ''\n    };\n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = {\n          frec_paises: {},\n          genero: ''\n        };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n  main() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this6.selectedTitles = _this6.stadisticsService.getSelectedTitles();\n        _this6.conferenceOption = _this6.stadisticsService.getConferenceOption();\n        _this6.venueName = _this6.stadisticsService.getVenueName();\n        if (_this6.stadisticsService.venueNameConfirm != _this6.stadisticsService.getVenueName()) {\n          _this6.getConferencebyProceeding();\n        } else {\n          _this6.generateTablesProceeding(_this6.stadisticsService.conferencesNames, _this6.stadisticsService.years, _this6.stadisticsService.inprocedings);\n        }\n        _this6.getResearchersConference();\n        _this6.getPapersAndArticles();\n        _this6.getConferencebyProceeding();\n        if (_this6.researchers.length == 0) {\n          yield _this6.waitResearcherNoEmpty();\n          _this6.getDemographicData();\n        } else {\n          _this6.getDemographicData();\n        }\n        if (_this6.papers.length == 0) {\n          yield _this6.waitPapersNoEmpty();\n          _this6.getCollaborations();\n          _this6.getAuthorsPapers();\n        } else {\n          _this6.getCollaborations();\n          ;\n          _this6.getAuthorsPapers();\n        }\n        while (_this6.collaborations.length < 1) {\n          _this6.loadingTable2 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n          _this6.spinnerService.show();\n        }\n        _this6.loadingTable2 = false;\n        if (_this6.papersWithAuthors.length == 0) {\n          yield _this6.waitAuthorsWithPapersNoEmpty();\n          _this6.getTopicAnalysis();\n          _this6.getDistributions();\n        } else {\n          _this6.getTopicAnalysis();\n          _this6.getDistributions();\n        }\n        if (_this6.singleAuthor.length == 0) {\n          yield _this6.waitSingleAuthorsNoEmpty();\n          _this6.decadeStats = _this6.statsProlificAuthors(_this6.selectedYears);\n          _this6.generateTablesDecades2(_this6.decadeStats);\n        } else {\n          _this6.decadeStats = _this6.statsProlificAuthors(_this6.selectedYears);\n          _this6.generateTablesDecades2(_this6.decadeStats);\n        }\n        _this6.statsProlificAuthors2(_this6.selectedYears);\n        _this6.getConnectedComponents();\n        _this6.getConnectedComponentsByvenue();\n        while (_this6.stadisticsService.conferencesNames.length < 1) {\n          _this6.loadingTable1 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n          _this6.spinnerService.show();\n        }\n        _this6.loadingTable1 = false;\n        _this6.stadisticsService.venueNameConfirm = _this6.stadisticsService.getVenueName();\n      } catch (error) {\n        console.error('Error in getData with:', error);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function StatisticsComponent_Factory(t) {\n    return new (t || StatisticsComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.StadisticsService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.SpinnerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatisticsComponent,\n    selectors: [[\"istics\"]],\n    viewQuery: function StatisticsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n      }\n    },\n    decls: 246,\n    vars: 13,\n    consts: [[1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [\"id\", \"lineChart6\"], [1, \"flex-item\", 3, \"hidden\"], [\"id\", \"lineChart1\"], [1, \"line\"], [\"id\", \"lineChart7\"], [\"id\", \"lineChart2\"], [\"class\", \"overlay\", 4, \"ngIf\"], [\"id\", \"lineChart3\"], [\"id\", \"barChart1\"], [1, \"special\"], [1, \"container-table\"], [1, \"table\"], [\"id\", \"authorsTable\"], [1, \"linev\"], [\"id\", \"papersTable\"], [1, \"flex-container2\"], [1, \"graph-bars\"], [1, \"canvas-container1\"], [1, \"legend\"], [1, \"men\"], [1, \"women\"], [\"id\", \"lineChart4\", 1, \"circular\"], [1, \"graph-bars2\"], [1, \"canvas-container2\"], [\"id\", \"lineChart8\"], [\"id\", \"lineChart5\"], [\"id\", \"tableBigramas\"], [\"id\", \"tableTrigramas\"], [1, \"conceptual\"], [3, \"config\", \"data\"], [1, \"container-table2\"], [\"id\", \"table90\"], [\"colspan\", \"2\"], [\"id\", \"table00\"], [\"id\", \"table10\", 1, \"centered-table\"], [\"id\", \"table20\", 1, \"centered-table\"], [1, \"line3\"], [\"id\", \"degree\"], [1, \"line3\", 3, \"hidden\"], [3, \"hidden\"], [1, \"table\", 3, \"hidden\"], [\"id\", \"tableProceeding\"], [\"class\", \"overlay\", 3, \"hidden\", 4, \"ngIf\"], [\"id\", \"lineChart11\"], [\"id\", \"lineChart12\"], [\"id\", \"lineChart13\"], [1, \"overlay\"], [1, \"overlay\", 3, \"hidden\"]],\n    template: function StatisticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"h3\");\n        i0.ɵɵtext(6, \"Authors / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelement(8, \"canvas\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4)(10, \"h3\");\n        i0.ɵɵtext(11, \"Authors by Conference or Journal / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2);\n        i0.ɵɵelement(13, \"canvas\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"hr\", 6);\n        i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"h3\");\n        i0.ɵɵtext(18, \"Conference Papers and Journal Articles / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵelement(20, \"canvas\", 7);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 4)(22, \"h3\");\n        i0.ɵɵtext(23, \"Papers and Articles by Conference and Jorunal / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2);\n        i0.ɵɵelement(25, \"canvas\", 8);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(26, \"hr\", 6);\n        i0.ɵɵelementStart(27, \"div\", 0)(28, \"div\", 1)(29, \"h3\");\n        i0.ɵɵtext(30, \"Density evolution over the years\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 2);\n        i0.ɵɵtemplate(32, StatisticsComponent_div_32_Template, 2, 0, \"div\", 9);\n        i0.ɵɵelement(33, \"canvas\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 1)(35, \"h3\");\n        i0.ɵɵtext(36, \"Percentage of single-author / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 2);\n        i0.ɵɵelement(38, \"canvas\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(39, \"hr\", 6);\n        i0.ɵɵelementStart(40, \"h3\", 12);\n        i0.ɵɵtext(41, \"Distributions of authors by paper and journal and of papers and journals by author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"div\", 13)(43, \"div\", 14)(44, \"table\", 15)(45, \"thead\")(46, \"tr\")(47, \"th\");\n        i0.ɵɵtext(48, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"th\");\n        i0.ɵɵtext(50, \"Papers/Journal (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(51, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(52, \"div\", 16);\n        i0.ɵɵelementStart(53, \"div\", 14)(54, \"table\", 17)(55, \"thead\")(56, \"tr\")(57, \"th\");\n        i0.ɵɵtext(58, \"Papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"th\");\n        i0.ɵɵtext(60, \"Papers/Journal (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(61, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(62, \"hr\", 6);\n        i0.ɵɵelementStart(63, \"h3\", 12);\n        i0.ɵɵtext(64, \" Percentage of Publications Men-Women / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"div\", 18)(66, \"div\", 19)(67, \"div\", 20)(68, \"div\", 21);\n        i0.ɵɵelement(69, \"div\", 22);\n        i0.ɵɵtext(70, \" Men \");\n        i0.ɵɵelement(71, \"div\", 23);\n        i0.ɵɵtext(72, \" Women \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(73, \"canvas\", 24);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(74, \"div\", 25)(75, \"div\", 26);\n        i0.ɵɵelement(76, \"canvas\", 27);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(77, \"hr\", 6);\n        i0.ɵɵelementStart(78, \"h3\");\n        i0.ɵɵtext(79, \" Percentage of publications by Country / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(80, \"div\", 0)(81, \"div\", 1)(82, \"div\", 2);\n        i0.ɵɵelement(83, \"canvas\", 28);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(84, \"hr\", 6);\n        i0.ɵɵelementStart(85, \"h3\", 12);\n        i0.ɵɵtext(86, \"Most frequent Bigrams and Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"div\", 13)(88, \"div\", 14)(89, \"table\", 29)(90, \"thead\")(91, \"tr\")(92, \"th\");\n        i0.ɵɵtext(93, \"Bigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(94, \"th\");\n        i0.ɵɵtext(95, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(96, \"th\");\n        i0.ɵɵtext(97, \"First \");\n        i0.ɵɵelement(98, \"br\");\n        i0.ɵɵtext(99, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(100, \"th\");\n        i0.ɵɵtext(101, \"Recent \");\n        i0.ɵɵelement(102, \"br\");\n        i0.ɵɵtext(103, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(104, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(105, \"div\", 16);\n        i0.ɵɵelementStart(106, \"div\", 14)(107, \"table\", 30)(108, \"thead\")(109, \"tr\")(110, \"th\");\n        i0.ɵɵtext(111, \"Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(112, \"th\");\n        i0.ɵɵtext(113, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(114, \"th\");\n        i0.ɵɵtext(115, \"First \");\n        i0.ɵɵelement(116, \"br\");\n        i0.ɵɵtext(117, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"th\");\n        i0.ɵɵtext(119, \"Recent \");\n        i0.ɵɵelement(120, \"br\");\n        i0.ɵɵtext(121, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(122, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(123, \"hr\", 6);\n        i0.ɵɵelementStart(124, \"h3\", 12);\n        i0.ɵɵtext(125, \"Frequent terms from all titles of papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(126, \"div\", 31);\n        i0.ɵɵelement(127, \"angular-tag-cloud\", 32);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(128, \"hr\", 6);\n        i0.ɵɵelementStart(129, \"h3\", 12);\n        i0.ɵɵtext(130, \"Most prolific authors according to their number of publications accumulated by decade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(131, \"div\", 33)(132, \"div\", 14)(133, \"table\", 34)(134, \"thead\")(135, \"tr\")(136, \"th\", 35);\n        i0.ɵɵtext(137, \" (a) 1989-1999 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(138, \"hr\");\n        i0.ɵɵelementStart(139, \"tr\")(140, \"th\");\n        i0.ɵɵtext(141, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(142, \"th\");\n        i0.ɵɵtext(143, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(144, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(145, \"div\", 16);\n        i0.ɵɵelementStart(146, \"div\", 14)(147, \"table\", 36)(148, \"thead\")(149, \"tr\")(150, \"th\", 35);\n        i0.ɵɵtext(151, \" (b) 1999-2009 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(152, \"hr\");\n        i0.ɵɵelementStart(153, \"tr\")(154, \"th\");\n        i0.ɵɵtext(155, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(156, \"th\");\n        i0.ɵɵtext(157, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(158, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(159, \"div\", 16);\n        i0.ɵɵelementStart(160, \"div\", 14)(161, \"table\", 37)(162, \"thead\")(163, \"tr\")(164, \"th\", 35);\n        i0.ɵɵtext(165, \" (a) 2009-2019 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(166, \"hr\");\n        i0.ɵɵelementStart(167, \"tr\")(168, \"th\");\n        i0.ɵɵtext(169, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(170, \"th\");\n        i0.ɵɵtext(171, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(172, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(173, \"div\", 16);\n        i0.ɵɵelementStart(174, \"div\", 14)(175, \"table\", 38)(176, \"thead\")(177, \"tr\")(178, \"th\", 35);\n        i0.ɵɵtext(179, \" (a) 2019-2024 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(180, \"hr\");\n        i0.ɵɵelementStart(181, \"tr\")(182, \"th\");\n        i0.ɵɵtext(183, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(184, \"th\");\n        i0.ɵɵtext(185, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(186, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(187, \"hr\", 39);\n        i0.ɵɵelementStart(188, \"h3\");\n        i0.ɵɵtext(189, \"Authors with their first and most recent year of publication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(190, \"div\", 33)(191, \"div\", 14)(192, \"table\", 40)(193, \"thead\")(194, \"tr\")(195, \"th\");\n        i0.ɵɵtext(196, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(197, \"th\");\n        i0.ɵɵtext(198, \"Degree\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(199, \"th\");\n        i0.ɵɵtext(200, \"First \");\n        i0.ɵɵelement(201, \"br\");\n        i0.ɵɵtext(202, \" year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(203, \"th\");\n        i0.ɵɵtext(204, \"Recent \");\n        i0.ɵɵelement(205, \"br\");\n        i0.ɵɵtext(206, \" year\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(207, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(208, \"hr\", 41);\n        i0.ɵɵelementStart(209, \"h3\", 42);\n        i0.ɵɵtext(210, \"Proceeding by Conference\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(211, \"div\", 33)(212, \"div\", 43)(213, \"table\", 44)(214, \"thead\")(215, \"tr\")(216, \"th\");\n        i0.ɵɵtext(217, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(218, \"th\");\n        i0.ɵɵtext(219, \"Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(220, \"th\");\n        i0.ɵɵtext(221, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(222, \"th\");\n        i0.ɵɵtext(223, \"Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(224, \"th\");\n        i0.ɵɵtext(225, \"numberOfInProceedings\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(226, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(227, StatisticsComponent_div_227_Template, 2, 1, \"div\", 45);\n        i0.ɵɵelement(228, \"hr\", 41);\n        i0.ɵɵelementStart(229, \"div\", 0)(230, \"div\", 4)(231, \"h3\");\n        i0.ɵɵtext(232, \"All Connected Components by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(233, \"div\", 2);\n        i0.ɵɵelement(234, \"canvas\", 46);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(235, \"div\", 4)(236, \"h3\");\n        i0.ɵɵtext(237, \"Connected components for each Conference by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(238, \"div\", 2);\n        i0.ɵɵelement(239, \"canvas\", 47);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(240, \"div\", 0)(241, \"div\", 4)(242, \"h3\");\n        i0.ɵɵtext(243, \"Relative size of components connected by conference\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(244, \"div\", 2);\n        i0.ɵɵelement(245, \"canvas\", 48);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"hidden\", ctx.ConferencesAuthors < 2);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1 || ctx.ConferencesCount < 2);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingTable2);\n        i0.ɵɵadvance(95);\n        i0.ɵɵproperty(\"config\", ctx.options)(\"data\", ctx.cloudData);\n        i0.ɵɵadvance(81);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingTable1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n      }\n    },\n    dependencies: [i5.NgIf, i6.TagCloudComponent, i7.SpinnerComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 40px;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 25px;\\n  margin-bottom: 10px;\\n}\\n\\n.flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-container2[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.graph-bars[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.graph-bars2[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container1[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 91%;\\n}\\n\\n.canvas-container2[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 96%;\\n}\\n\\n.legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  font-size: 18px;\\n  margin-bottom: 20px;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 95%;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 100%; \\n\\n  height: auto;\\n  display: block;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  background-color: rgb(0, 22, 68);\\n}\\n\\n.container-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n  overflow: auto;\\n}\\n\\n.container-table2[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  display: flex;\\n  margin-right: 100px;\\n}\\n\\n.linev[_ngcontent-%COMP%] {\\n  border-right: 1px solid rgb(0, 22, 68);\\n  margin-right: 45px;\\n  margin-left: 20px;\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  vertical-align: middle;\\n  text-align: center;\\n  vertical-align: center;\\n  font-size: 20px;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  min-width: 40px;\\n  min-height: 1px;\\n  margin-right: 5px;\\n}\\n\\n.special[_ngcontent-%COMP%] {\\n  margin-bottom: 40px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(2), #degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n  padding-left: 60px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(4) {\\n  padding-left: 90px;\\n}\\n\\n.men[_ngcontent-%COMP%] {\\n  background-color: rgb(51, 153, 255);\\n}\\n\\n.women[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 87, 51);\\n  margin-left: 20PX;\\n}\\n\\n.line3[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  .legend[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    font-size: 10px;\\n    margin-bottom: 20px;\\n  }\\n  .container-table[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .container-table2[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .table[_ngcontent-%COMP%] {\\n    border-right: none;\\n    padding-right: 0;\\n    padding-bottom: 20px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n}\\n.conceptual[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 200px;\\n}\\n\\n.overlay[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 10px;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 10;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.overlay2[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 50px;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 10;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXN0YWRpc3RpY2FzL3N0YXRpc3RpY3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQ2hCO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFHQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUFGOztBQUdBO0VBQ0UsZ0NBQUE7RUFDQSxhQUFBO0VBQ0EsVUFBQTtBQUFGOztBQUdBO0VBQ0UsZUFBQSxFQUFBLGlDQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQ0FBQTtBQUFGOztBQUdBO0VBQ0UsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBQUY7O0FBR0E7RUFDRSxzQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFJQTtFQUNFLGtCQUFBO0FBREY7O0FBSUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtBQURGOztBQUlBO0VBQ0UsZUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQURGOztBQUlBO0VBQ0UsbUJBQUE7QUFERjs7QUFJQTs7RUFFRSxrQkFBQTtBQURGOztBQUdBO0VBQ0Usa0JBQUE7QUFBRjs7QUFHQTtFQUNFLG1DQUFBO0FBQUY7O0FBR0E7RUFDRSxrQ0FBQTtFQUNBLGlCQUFBO0FBQUY7O0FBR0E7RUFDRSxnQkFBQTtFQUNBLG1CQUFBO0FBQUY7O0FBSUE7RUFFRTtJQUNFLGFBQUE7RUFGRjtFQUtBO0lBQ0UsYUFBQTtJQUNBLHVCQUFBO0lBQ0EsZUFBQTtJQUNBLG1CQUFBO0VBSEY7RUFLQTtJQUNFLHNCQUFBO0VBSEY7RUFLQTtJQUNFLHNCQUFBO0VBSEY7RUFLQTtJQUNFLGtCQUFBO0lBQ0EsZ0JBQUE7SUFDQSxvQkFBQTtFQUhGO0VBS0E7SUFDRSxpQkFBQTtFQUhGO0VBS0E7SUFDRSxpQkFBQTtFQUhGO0FBQ0Y7QUFPQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQUxGOztBQU9BO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBSkY7O0FBT0E7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxPQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFKRiIsInNvdXJjZXNDb250ZW50IjpbIlxuaDJ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiA0MHB4O1xufVxuXG5oMyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyNXB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uZmxleC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5mbGV4LWNvbnRhaW5lcjIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5ncmFwaC1iYXJze1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4uZ3JhcGgtYmFyczJ7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5jYW52YXMtY29udGFpbmVyMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgcGFkZGluZzogMjBweDtcbiAgd2lkdGg6IDkxJTtcbn1cblxuLmNhbnZhcy1jb250YWluZXIyIHtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiKDAsIDIyLCA2OCk7IFxuICBwYWRkaW5nOiAyMHB4O1xuICB3aWR0aDogOTYlO1xufVxuXG4ubGVnZW5ke1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG5cbi5mbGV4LWl0ZW0ge1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4uY2FudmFzLWNvbnRhaW5lciB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgcGFkZGluZzogMjBweDtcbiAgd2lkdGg6IDk1JTtcbn1cblxuY2FudmFzIHtcbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiBIYWNlIGxhcyBncsODwqFmaWNhcyByZXNwb25zaXZlICovXG4gIGhlaWdodDogYXV0bzsgXG4gIGRpc3BsYXk6IGJsb2NrOyBcbn1cblxuLmxpbmV7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAyMiwgNjgpO1xufVxuXG4uY29udGFpbmVyLXRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcbiAgZGlzcGxheTogZmxleDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5jb250YWluZXItdGFibGUyIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IFxuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tcmlnaHQ6IDEwMHB4O1xufVxuXG4ubGluZXZ7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgbWFyZ2luLXJpZ2h0OiA0NXB4O1xuICBtYXJnaW4tbGVmdDogMjBweDtcbn1cblxuXG4udGFibGV7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxudGQsIHRoIHtcbiAgcGFkZGluZzogMjBweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbmRpdiB7XG4gIG1pbi13aWR0aDogNDBweDtcbiAgbWluLWhlaWdodDogMXB4O1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cblxuLnNwZWNpYWx7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG59XG5cbiNkZWdyZWUgdGg6bnRoLWNoaWxkKDIpLFxuI2RlZ3JlZSB0aDpudGgtY2hpbGQoMyl7XG4gIHBhZGRpbmctbGVmdDogNjBweDtcbn1cbiNkZWdyZWUgdGg6bnRoLWNoaWxkKDQpIHtcbiAgcGFkZGluZy1sZWZ0OiA5MHB4O1xufVxuXG4ubWVuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUxLCAxNTMsIDI1NSk7XG4gIFxufVxuLndvbWVuIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI1NSwgODcsIDUxKTtcbiAgbWFyZ2luLWxlZnQ6IDIwUFg7XG59XG5cbi5saW5lM3tcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cblxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuXG4gIHRkLCB0aCB7XG4gICAgcGFkZGluZzogMTBweDsgXG4gIH1cblxuICAubGVnZW5ke1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgZm9udC1zaXplOiAxMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbiAgLmNvbnRhaW5lci10YWJsZSB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgXG4gIH1cbiAgLmNvbnRhaW5lci10YWJsZTIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IFxuICB9XG4gIC50YWJsZSB7XG4gICAgYm9yZGVyLXJpZ2h0OiBub25lOyBcbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyBcbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgfVxuICAjdGFibGVJbnN0aXR1dGlvbiB0aDpudGgtY2hpbGQoMyl7XG4gICAgcGFkZGluZy1sZWZ0OiAwcHg7IFxuICB9XG4gICN0YWJsZUluc3RpdHV0aW9uIHRkOm50aC1jaGlsZCgzKXtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDtcbiAgfVxuICBcbn1cblxuLmNvbmNlcHR1YWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgXG4gIGhlaWdodDogMjAwcHg7IFxufVxuLm92ZXJsYXkge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogMTBweDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogMTA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ub3ZlcmxheTIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHRvcDogNTBweDtcbiAgbGVmdDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogMTAwJTtcbiAgei1pbmRleDogMTA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","singular","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵproperty","ctx_r1","papers","length","register","StatisticsComponent","constructor","apiService","stadisticsService","http","spinnerService","selectedTitles","selectedYears","conferenceOption","venueName","collaborations","connectedComponents","singleAuthor","statistics","statsAuthors","statsPaper","journalsCount","ConferencesCount","ConferencesAuthors","totalAuthorsByYear","PapersAndArticlesByYear","totalArticlesByYear","totalPapersByYear","singlePapers","decadeStats","researchers","papersWithAuthors","loadingTable1","loadingTable2","conferenceName","commonNames","options","width","height","overflow","realignOnResize","strict","step","cloudData","ngOnInit","loadCommonNames","main","waitResearcherNoEmpty","_this","_asyncToGenerator","Promise","resolve","setTimeout","waitPapersNoEmpty","_this2","getResearchersConference","subscribe","next","response","statsResearchers","statsTotalAuthorsByYear","lineChart","destroy","generateChart","generateTotalAuthorsChart","error","console","years","map","title","properties","name","sort","a","b","parseInt","year","totalAuthors","reduce","total","researcher","includes","getPapersAndArticles","statsPapers","statsTotalPapersByYear","paper","filter","value","index","self","indexOf","papersByYear","type","articlesByYear","papersOfYear","articlesOfYear","article","totalPapers","numPapersAndArticles","low","totalArticles","getCollaborations","log","statsColaboraciones","generateChart3","densidades","getConnectedComponents","statsConnectedComponents","getConnectedComponentsByvenue","statsConnectedComponentsByvenue","generateChart4","getConferencebyProceeding","conferencesNames","inprocedings","forEach","numberOfInProceedings","push","generateTablesProceeding","venueTitles","table","document","querySelector","HTMLElement","innerHTML","venueTitle","parts","split","replace","date","rowData","trim","location","slice","join","row","createElement","appendChild","hasNumber","test","isValidFormat","waitAuthorsWithPapersNoEmpty","_this3","waitSingleAuthorsNoEmpty","_this4","getAuthorsPapers","_this5","_ref","statsSingleAuthor","_x","apply","arguments","getDistributions","labels","authorsByPaper","numAuthors","allPapers","all","papersByAuthor","numPubs","numPublications","allAuthors","authorsTable","papersTable","amount","percentage","toFixed","worth","toString","getDemographicData","datasets","Array","isArray","datasetByYear","info","genero","frecuencias","frec_paises","flat","statsGender","statsGeography","generateNGrams","titles","n","ngrams","words","toLowerCase","i","countFrequencies","frequencies","Map","ngram","count","get","set","clearTitle","stopwords","word","wordsNoRepeat","singularWords","filteredWords","newTitle","getTopN","sortedFrequencies","entries","getTopicAnalysis","cleanTitles","ipName","bigrams","trigrams","bigramFrequencies","trigramFrequencies","top20Bigrams","top20Trigrams","top20BigramsWithYears","top20TrigramsWithYears","table1","table2","minYear","Math","min","maxYear","max","combinedData","maxFrecuencia","minWeight","maxWeight","wordCloudData","item","text","weight","calculateWeight","color","randomColor","frec","maxFrec","normWeight","round","names","Set","size","from","titulo","numResearchersPorAnio","anio","numResearchers","numPapersAndArticlesPorAnio","colabsXtotal","colabsPapers","colab","find","c","integer","numColabs","concat","densidadesPorAño","dato","density","Object","copiedData","venueDataMap","venueDataMapRelative","has","venueData","adjustedComponents","values","author","ipNames","paperIndex","findIndex","authorNames","papersWithOneAuthor","porcentajeByYear","numPapersAndArticlesWithSingleAuthor","porcentajes","datosPorAño","porcentaje","añosUnicos","porcentajesMedios","año","porcentajesAño","media","acc","curr","generateBarChart","mappingDate","datasetFiltered","object","keys","uniqueDates","objectDate","countryHighest","highestFrequency","country","Number","countries","datasetsLabels","datasetsData","generateMultipleGraph","filterAuthorsByDecade","authors","startYear","endYear","filteredAuthors","authorYears","existingAuthor","filteredAuthor","statsProlificAuthors","startDecade","floor","endDecade","decades","decade","decadeLabel","decadeStartYear","decadeEndYear","decadeAuthors","label","statsProlificAuthors2","topAuthors","tables","yearsArray","generateTablesDecades2","autor","generateTotalPapersAndArticles","idChart","data","data2","entry","lineChart7","fill","borderColor","borderWidth","plugins","legend","font","family","scales","y","display","lineChart6","getRandomColor","lineChart2","lineChart3","venue","allYears","dataset","datasetsByGenre","genderKey","existingData","d","sortedData","men","women","hombres","mujeres","organizedYears","countMen","countWoman","generateCircularChart","chartId","chartConfig","ctx","getElementById","colors","backgroundColor","barChart","beginAtZero","r","random","g","responseType","parseCommonNames","lines","dict","currentName","currentData","linea","startsWith","frec_paisesStr","substring","lastIndexOf","JSON","parse","_this6","getSelectedTitles","getConferenceOption","getVenueName","venueNameConfirm","show","_","ɵɵdirectiveInject","i1","ApiService","i2","StadisticsService","i3","HttpClient","i4","SpinnerService","_2","selectors","viewQuery","StatisticsComponent_Query","rf","ɵɵtext","ɵɵtemplate","StatisticsComponent_div_32_Template","StatisticsComponent_div_227_Template","ɵɵadvance"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit, destroyPlatform } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { StadisticsService } from '../services/stadistics.service';\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport { HttpClient } from '@angular/common/http';\nimport { CloudData, CloudOptions } from 'angular-tag-cloud-module';\nimport { singular } from 'pluralize';\nimport { ChartConfiguration, ChartData, ChartOptions } from 'chart.js';\nimport { SpinnerService } from '../services/spinner.service';\n\ninterface Author {\n  ipNames: string[];\n  numPublications: number;\n  researcher: string;\n  year: string;\n}\n\ninterface DecadeStats {\n  label: string;\n  startYear: number;\n  endYear: number;\n  authors: Author[];\n}\n\n@Component({\n  selector: 'istics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss'],\n})\n\nexport class StatisticsComponent implements OnInit {\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef;\n\n  selectedTitles: any[] = [];\n  selectedYears: any[] = [];\n  conferenceOption: string = \"\";\n  venueName: any[] = [];\n  papers: any[] = [];\n  collaborations: any[] = [];\n  connectedComponents: any[] = [];\n  singleAuthor: any[] = [];\n  statistics: any[] = [];\n  statsAuthors: any[] = []\n  statsPaper: any[] = []\n  journalsCount: number = 0;\n  ConferencesCount: number = 0;\n  ConferencesAuthors: number = 0;\n  lineChart!: Chart;\n  lineChart2!: Chart;\n  lineChart3!: Chart;\n  lineChart4!: Chart;\n  lineChart5!: Chart;\n  lineChart7!: Chart;\n  lineChart6!: Chart;\n  lineChart8!: Chart;\n  totalAuthorsByYear: any[] = []\n  PapersAndArticlesByYear: any[] = []\n  totalArticlesByYear: any[] = []\n  totalPapersByYear: any[] = []\n  singlePapers: any[] = []\n  barChart!: Chart;\n  decadeStats: any[] = [];\n  researchers: any[] = [];\n  papersWithAuthors: any[] = [];\n  loadingTable1 = true;\n  loadingTable2 = true;\n  conferenceName: string[] = [];\n  commonNames: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n  options: CloudOptions = {\n    width: 500,\n    height: 200,\n    overflow: false,\n    realignOnResize: false,\n    strict: false,\n    step: 2,\n  };\n  cloudData: CloudData[] = []\n\n  constructor(\n    private apiService: ApiService,\n    private stadisticsService: StadisticsService,\n    private http: HttpClient,\n    private spinnerService: SpinnerService,\n  ) {}\n\n\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n\n  async waitResearcherNoEmpty() {\n    while (!this.researchers || this.researchers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitPapersNoEmpty() {\n    while (!this.papers || this.papers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.researchers = [];\n        this.researchers = response;\n        this.statsResearchers();\n        this.statsTotalAuthorsByYear();\n        if(this.researchers.length > 1){\n          if (this.lineChart) {\n            this.lineChart.destroy();\n          }\n          this.generateChart('lineChart1', 'Number of authors', this.statsAuthors);\n          this.generateTotalAuthorsChart('lineChart6', 'Total Authors by Year', this.totalAuthorsByYear);\n        }\n      },\n      error: (error: any) => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n  }\n\n  statsTotalAuthorsByYear() {\n    const years = this.selectedTitles.map(title => title.properties.name);\n    years.sort((a, b) => parseInt(a) - parseInt(b));\n    this.totalAuthorsByYear = years.map(year => {\n      const totalAuthors = this.researchers.reduce((total, researcher) => {\n        if (researcher.years.includes(year)) {\n          return total + 1;\n        }\n        return total;\n      }, 0);\n      return {\n        year: year,\n        totalAuthors: totalAuthors\n      };\n    });\n  }\n  \n  getPapersAndArticles() {\n    this.apiService.getPapersAndArticles(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.papers = response;\n        this.statsPapers();\n        this.statsTotalPapersByYear();\n        if(this.papers.length > 0){\n          this.generateChart('lineChart2', 'Number of papers', this.statsPaper);\n          this.generateTotalAuthorsChart('lineChart7', 'Total Papers by Year', this.PapersAndArticlesByYear);\n        }\n      },\n      error: (error: any) => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n\n\n  statsTotalPapersByYear() {\n    let years = this.papers.map(paper => paper.year);\n    years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n    years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n    \n    // Filtrar Papers y Articles\n    const papersByYear = this.papers.filter(paper => paper.type === \"Paper\");\n    const articlesByYear = this.papers.filter(paper => paper.type === \"Article\");\n\n    // Calcular el total de Papers y Articles por año\n    this.PapersAndArticlesByYear = years.map(year => {\n      const papersOfYear = papersByYear.filter(paper => paper.year === year);\n      const articlesOfYear = articlesByYear.filter(article => article.year === year);\n      \n      const totalPapers = papersOfYear.reduce((total, paper) => {\n        return total + paper.numPapersAndArticles.low;\n      }, 0);\n      \n      const totalArticles = articlesOfYear.reduce((total, article) => {\n        return total + article.numPapersAndArticles.low;\n      }, 0);\n\n      return {\n        year: year,\n        totalPapers: totalPapers,\n        totalArticles: totalArticles\n      };\n    });\n    \n    // Llamar a la función para generar el gráfico\n    this.generateTotalAuthorsChart('lineChart7', 'Total Papers and Articles by Year', this.PapersAndArticlesByYear);\n  }\n\n\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.collaborations = response;\n        console.log(this.collaborations)\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: (error: any) => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n\n  getConnectedComponents(){\n    this.apiService.getConnectedComponents(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConnectedComponentsByvenue(){\n    this.apiService.getConnectedComponentsByvenue(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n        this.generateChart4('lineChart13', 'Number of Connected Components', this.statistics[7]);\n        \n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConferencebyProceeding(){\n    this.apiService.getConferencebyProceeding(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.stadisticsService.conferencesNames = [];\n        this.stadisticsService.years = [];\n        this.stadisticsService.inprocedings = [];\n      \n        response.forEach(({ title, year, numberOfInProceedings }: { title: string, year: string, numberOfInProceedings: number}) => {\n          this.stadisticsService.conferencesNames.push(title);\n          this.stadisticsService.years.push(year);\n          this.stadisticsService.inprocedings.push(numberOfInProceedings);\n        });\n        this.loadingTable1 = false;\n      \n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n     \n      },\n      error: (error: any) => {\n        console.error('Error in getConferencebyProceeding:', error);\n      }\n    });\n  }\n\n  \n  generateTablesProceeding(venueTitles: string[], years: string[], numberOfInProceedings: number[]) {\n    const table = document.querySelector('#tableProceeding tbody');\n    if (table instanceof HTMLElement) {\n      table.innerHTML = ''; // Limpiar tabla existente antes de agregar nuevas filas\n  \n      venueTitles.forEach((venueTitle, index) => {\n        // Divide el título en partes usando la coma como delimitador\n        const parts = venueTitle.split(',');\n\n        if( parts.length== 6){\n            \n          parts[4]= parts[4].replace(\"Proceedings\",\"\");\n          const date = parts[4].split('.')\n          \n\n          // Construye el objeto que contiene los datos para la tabla\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[2] + ',' + parts[3],\n            date: date.slice(0).join(' ')\n          };\n\n          // Crea una fila para la tabla y agrega los datos\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          \n\n          // Agrega la fila a la tabla\n          table.appendChild(row);\n        }\n\n\n        if(parts.length== 5){\n          \n            \n          parts[3] = parts[3].replace(\"Proceedings\",\"\").trim();\n          const date = parts[3].split('.')\n          const hasNumber = /\\d/.test(date[0]);\n\n          if(hasNumber){\n\n            if(parts[1].includes(\"Florence\")){\n \n              const rowData = {\n                name: parts[0],\n                location: parts[1].trim() + ',' + parts[2],\n                date: date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            }else{\n\n              // Construye el objeto que contiene los datos para la tabla\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2],\n                date: date[0]\n              };\n              // Crea una fila para la tabla y agrega los datos\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              // Agrega la fila a la tabla\n              table.appendChild(row);\n            }\n\n          }else{\n\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4] \n            };\n\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n          }\n\n        }\n\n\n        if( parts.length== 7){\n            \n          parts[5]= parts[5].replace(\"Proceedings\",\"\");\n          const date = parts[5].split('.')\n\n          if(parts[2].length > 15){\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[3] + ', ' + parts[4],\n            date: date[0]\n          };\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          table.appendChild(row);\n          }else{\n\n            const isValidFormat = /^[a-zA-Z]+\\s+\\d{1,2}(-\\d{1,2}|\\d{1,2}[a-zA-Z]+\\s+\\d{1,2})$/.test(date[0].trim());\n\n            if(isValidFormat){\n\n              if(parts[2].includes(\"ER\")){\n \n                const rowData = {\n                  name: parts[0] + ',' + parts[1].trim() + '-' +  parts[2] ,\n                  location: parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              }else{\n\n                const rowData = {\n                  name: parts[0] + '-' + parts[1].trim(),\n                  location: parts[2]+ ', ' + parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n    \n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n\n              }\n\n            }else{\n                            \n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4] + ', ' + date[0]\n            };\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            table.appendChild(row);\n            }\n  \n          }       \n        }  \n      });\n    }\n  }\n  \n  \n  async waitAuthorsWithPapersNoEmpty(){\n    while (!this.papersWithAuthors || this.papersWithAuthors.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitSingleAuthorsNoEmpty(){\n    while (!this.singleAuthor || this.singleAuthor.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getAuthorsPapers() {\n      this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName)\n        .subscribe({\n          next: async (response: any) => {\n            this.singleAuthor = response;\n            console.log(this.singleAuthor)\n            this.statsSingleAuthor();\n            \n          },\n          error: (error: any) => {\n            console.error('Error in getAuthorsPapers:', error);\n          }\n        });\n  }\n\n  /**Function to obtain the distributions of both authors by papers and papers by authors*/\n  getDistributions(){\n    const labels: string[] = ['1', '2', '3', '4', '5 o más'];\n\n    // This represents the number of authors that each paper has.\n    const authorsByPaper: number[] = [1, 2, 3, 4].map((numAuthors) =>\n    this.papersWithAuthors.filter((paper) => paper.numAuthors === numAuthors).length\n    );\n    authorsByPaper[4] = this.papersWithAuthors.filter((paper) => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapersAndArticles.low, 0);\n\n    // This represents the number of published papers that each author has.\n    const papersByAuthor: number[] = [1, 2, 3, 4].map((numPubs) =>\n    this.singleAuthor.filter((paper) => paper.numPublications === numPubs).length\n    );\n    papersByAuthor[4] = this.singleAuthor.filter((paper) => paper.numPublications >= 5).length\n    const allAuthors = this.singleAuthor.length;\n\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n\n    \n    \n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n\n  getDemographicData(){\n      const datasets = this.researchers.map(researcher => {\n        let name = researcher.researcher.properties.name.split(' ')[0];\n        if(name.includes(\"-\")){\n          name = name.split('-')[0];\n        }\n        const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      \n        const datasetByYear = years.map((year: any) => {\n          const info = this.commonNames[name];\n          const genero = info ? info.genero : 'Unknown';\n          const frecuencias = info ? info.frec_paises : {};\n      \n          return {\n            year,\n            name,\n            genero,\n            frecuencias\n          };\n        });\n        return datasetByYear;\n      }).flat(); \n\n      this.statsGender(datasets);\n      this.statsGeography(datasets);\n  }\n\n  generateNGrams(titles: string[], n: number): string[] {\n    const ngrams: string[] = [];\n    titles.forEach((title) => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  \n  countFrequencies(ngrams: string[]): Map<string, number> {\n    const frequencies = new Map<string, number>();\n    ngrams.forEach((ngram) => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n\n  clearTitle(title: string, stopwords: string[]) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    \n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n  \n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    \n    return newTitle;\n  }\n\n  getTopN(frequencies: Map<string, number>, n: number): [string, number][] {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n\n  getTopicAnalysis(){\n\n      // We require natural to tokenize and remove stopwords, and calculate frequencies\n      const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n\n      const cleanTitles = this.papersWithAuthors.map(paper => {\n        const ipName = this.clearTitle(paper.ipName, stopwords);\n        const year = parseInt(paper.year);\n        return { ipName, year };\n      });\n\n      const bigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 2);\n      const trigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 3);\n\n      const bigramFrequencies = this.countFrequencies(bigrams);\n      const trigramFrequencies = this.countFrequencies(trigrams);\n\n      const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n      const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n\n    \n      const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n    \n      const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n\n      const table1 = document.querySelector('#tableBigramas tbody');\n      const table2 = document.querySelector('#tableTrigramas tbody');\n    \n      if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n        top20BigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table1.appendChild(row);\n        });\n      \n        top20TrigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table2.appendChild(row);\n        });\n      }\n\n      const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n      \n      combinedData.sort((a, b) => b.count - a.count);\n\n      const maxFrecuencia = combinedData[0].count;\n      const minWeight = 0;\n      const maxWeight = 20;\n\n\n      const wordCloudData = combinedData.map((item, index) => ({\n        text: item.ngram,\n        weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n        color: this.randomColor()\n      }));\n\n      this.cloudData = wordCloudData;\n     \n  }\n  \n  calculateWeight(frec: number, maxFrec: number, minWeight: number, maxWeight: number): number {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n\n  /**\n   * ############################################\n   */\n\n  statsResearchers() {\n    const names = new Set(this.researchers.map(researcher => researcher.name));\n    this.ConferencesAuthors = names.size;\n    this.statsAuthors = [];\n    this.statsAuthors = Array.from(names).map(name => {\n      const years = this.selectedTitles.map(titulo => titulo.properties.name);\n      years.sort((a, b) => parseInt(a) - parseInt(b));\n      this.selectedYears = years;\n      const numResearchersPorAnio = years.map(anio =>\n        this.researchers.reduce((total, researcher) => {\n          if (researcher.name === name && researcher.years.includes(anio)) {\n            return total + 1;\n          }\n          return total;\n        }, 0)\n      );\n      return {\n        name: name,\n        years: years,\n        numResearchers: numResearchersPorAnio\n      };\n    });\n  }\n  \n  statsPapers() {\n    const names = new Set(this.papers.map(paper => paper.name));\n    this.ConferencesCount = names.size;\n    this.statsPaper = Array.from(names).map(name => {\n      let years = this.papers.map(paper => paper.year);\n      years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n      years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n      const numPapersAndArticlesPorAnio = years.map(year =>\n        this.papers.reduce((total, paper) => {\n          const numPapersAndArticles = paper.numPapersAndArticles.low;\n          if (paper.name === name && paper.year === year) {\n            return total + numPapersAndArticles;\n          }\n          return total;\n        }, 0)\n      );\n      return {\n        name: name,\n        years: years,\n        numResearchers: numPapersAndArticlesPorAnio\n      };\n    });\n  }\n\n  statsColaboraciones() {\n    let colabsXtotal: { year: number; numColabs: number; numPapersAndArticles: number }[] = [];\n\n    const colabsPapers = this.papers.map(paper => {\n        const colab = this.collaborations.find(c => c.year === paper.year);\n        const integer = paper.numPapersAndArticles.low;\n        return {\n            year: paper.year,\n            numColabs: colab ? colab.numColabs : 0,\n            numPapersAndArticles: integer\n        };\n    });\n    colabsXtotal = colabsXtotal.concat(colabsPapers);\n\n    // Sumar densidades por año\n    const densidadesPorAño: { [key: number]: number } = {}; // Tipo explícito para densidadesPorAño\n    colabsXtotal.forEach(dato => {\n        const { year, numColabs, numPapersAndArticles } = dato;\n        if (!densidadesPorAño[year]) {\n            densidadesPorAño[year] = 0;\n        }\n        densidadesPorAño[year] += numColabs / numPapersAndArticles;\n    });\n\n    // Convertir el objeto en un array de objetos\n    const density = Object.entries(densidadesPorAño).map(([year, density]) => ({\n        year: parseInt(year),\n        density\n    }));\n\n    this.statistics[3] = {\n        years: density.map(dato => dato.year),\n        densidades: density.map(dato => dato.density)\n    };\n}\n\n  statsConnectedComponents() {\n    // Copiar los datos originales para no afectar el orden original\n    const copiedData = [...this.connectedComponents];\n\n    // Ordenar los datos por año\n    copiedData.sort((a, b) => a.year - b.year);\n\n    // Extraer los años y componentes conectados ordenados\n    const years = copiedData.map(item => item.year);\n    const connectedComponents = copiedData.map(item => item.connectedComponents);\n  \n    this.statistics[5] = {\n        years: years,\n        connectedComponents: connectedComponents\n        // Puedes agregar otras propiedades si es necesario\n    };\n}\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap: Map<string, { years: any[], connectedComponents: any[], venueName: string} | undefined> = new Map();\n    const venueDataMapRelative: Map<string, { years: any[], connectedComponents: any[], venueName: string, index?: number } | undefined> = new Map();\n\n    this.connectedComponents.forEach((item) => {\n      const venueName = item.venueName;\n\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n        });\n\n      }\n\n      const venueData = venueDataMap.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        venueData.connectedComponents.push(item.connectedComponents);\n      }\n    });\n\n    this.connectedComponents.forEach((item) => {\n      const venueName = item.venueName;\n\n      if (!venueDataMapRelative.has(venueName)) {\n        venueDataMapRelative.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n        });\n      }\n\n      const venueData = venueDataMapRelative.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        let adjustedComponents = item.connectedComponents;\n        while (adjustedComponents > 1) {\n          adjustedComponents /= 10;\n        }\n  \n        venueData.connectedComponents.push(adjustedComponents);\n      }\n    });\n\n    this.statistics[6] = Array.from(venueDataMap.values());\n    this.statistics[7] = Array.from(venueDataMapRelative.values());\n  }\n  \n\n  statsSingleAuthor() {\n    \n    const papersWithAuthors: { ipName: string, numAuthors: number, authorNames: string[], year: string }[] = [];\n\n    // Map all the researchers, to create papersWithAuthors, which is an array that has the name of a publication\n    // and the authors who have contributed to it.\n    this.singleAuthor.forEach((author: { ipNames: string[], researcher: string, year: string }) => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n            papersWithAuthors.push({\n              ipName,\n              numAuthors: 1,\n              authorNames: [author.researcher],\n              year: author.year\n            });\n          }\n        });\n    });\n\n    this.papersWithAuthors = papersWithAuthors;\n\n    // We get all the entries whose author is one, for the statistics\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapersAndArticles = paper.numPapersAndArticles.low;\n      const numPapersAndArticlesWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = (numPapersAndArticlesWithSingleAuthor / numPapersAndArticles) * 100;\n    \n      return { year, percentage };\n    });\n\n    console.log(this.statistics[4])\n\n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n\n    console.log(this.statistics[4])\n    \n    let years = this.statistics[4].years;\n    let porcentajes = this.statistics[4].porcentajes;\n    \n    // Crear un objeto para mapear años a porcentajes\n    let datosPorAño:any = {};\n    \n    // Iterar sobre los datos y agrupar los porcentajes por año\n    for (let i = 0; i < years.length; i++) {\n        let year = years[i];\n        let porcentaje = porcentajes[i];\n    \n        if (!datosPorAño[year]) {\n            datosPorAño[year] = [porcentaje];\n        } else {\n            datosPorAño[year].push(porcentaje);\n        }\n    }\n    \n    // Calcular la media de los porcentajes y eliminar años duplicados\n    let añosUnicos = [];\n    let porcentajesMedios = [];\n    \n    for (let año in datosPorAño) {\n        let porcentajesAño = datosPorAño[año];\n        let media = porcentajesAño.reduce((acc: any, curr: any) => acc + curr, 0) / porcentajesAño.length;\n        \n        añosUnicos.push(año);\n        porcentajesMedios.push(media);\n    }\n\n    this.statistics[4] = [];\n    \n    // Actualizar los datos originales\n    this.statistics[4].years = añosUnicos;\n    this.statistics[4].porcentajes = porcentajesMedios;\n\n    this.singlePapers = this.statistics[4];\n    console.log(this.statistics[4])\n    console.log(this.singlePapers)\n    this.generateBarChart('barChart1', 'Single Author Papers and Journals', this.statistics[4].years, this.statistics[4].porcentajes);          \n    \n  }  \n\n  statsGeography(datasets: any[]){\n    const mappingDate: {[date: string]: {[country: string]: number}} = {};\n    const datasetFiltered = datasets.filter((object: any) => Object.keys(object.frecuencias).length > 0);\n    \n    // Obtener todas las fechas únicas\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n\n    // Iterar sobre las fechas\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n\n      // Crear objeto de mapeo para la fecha actual\n      mappingDate[date] = {};\n  \n    for (const object of objectDate) {\n      let countryHighest = '';\n      let highestFrequency = -1;\n\n      for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if(!(countryHighest in mappingDate[date])){\n          mappingDate[date][countryHighest] = 1;\n        }else{\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n\n    // We normalize values according to their total\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country]/total).toFixed(4));\n      }\n    }\n\n    const years = Object.keys(mappingDate); // Get the keys of the years\n    const countries = Object.keys(mappingDate[years[0]]); // Get country names\n    const datasetsLabels = countries; // Labels of the data sets will be the names of the countries \n\n    // Create the data matrix for the countries\n    const datasetsData = countries.map((country) =>\n      years.map((year) => mappingDate[year][country])\n    );\n\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n    \n  }\n\n  filterAuthorsByDecade(authors: Author[], startYear: number, endYear: number): Author[] {\n    const filteredAuthors: Author[] = [];\n  \n    // Browse the original authors\n    authors.forEach((author) => {\n      // Check if the author is within the specified decade\n      const authorYears = author.year.split(\",\").map(Number).filter((year) => year >= startYear && year <= endYear);\n\n      if (authorYears.length > 0) {\n        // Search if there is already a merged author with the same name and decade\n        const existingAuthor = filteredAuthors.find((filteredAuthor) => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Merge the existing author's entries with the current author's entries\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Add the current author to the list of filtered authors\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n\n    return filteredAuthors;\n  }\n\n  statsProlificAuthors(selectedYears: number[]): DecadeStats[] {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n  \n    // Generate the decades within the selected year range\n    const decades: DecadeStats[] = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n  \n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }  \n    // Sort authors by number of publications in each decade\n    decades.forEach((decade) => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20){\n        decade.authors = decade.authors.slice(0, 20); \n      } \n    });\n  \n    // Return the decades with the authors ordered\n    return decades;\n  }\n\n  statsProlificAuthors2(selectedYears: number[]) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n  \n    const tables = {\n      'degree': document.querySelector('#degree tbody'),\n    };\n  \n    for (const author of topAuthors) {\n      const table = tables['degree'];\n  \n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n\n  \n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n  \n        table.appendChild(row);\n      }\n    }\n\n  }\n\n  generateTablesDecades2(decadeStats: any[]){\n    const tables: { [key: string]: HTMLElement | null } = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody'),\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n  \n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach((autor: { researcher: any; numPublications: any; year: any; }) => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n  \n          table.appendChild(row);\n        });\n      }\n    }\n  }\n\n  generateTotalPapersAndArticles(idChart: string, label: string, data: any[], data2: any[]){\n    const years = data.map(entry => entry.year);\n    if (idChart == \"lineChart7\") {\n      this.lineChart7 = new Chart(idChart, {\n          type: 'line',\n          data: {\n              labels: years,\n              datasets: [\n                  {\n                      label: 'Papers',\n                      data: this.totalPapersByYear,\n                      fill: false,\n                      borderColor: 'rgb(0, 22, 68)',\n                      borderWidth: 1\n                  },\n                  {\n                      label: 'Articles',\n                      data: this.totalArticlesByYear,\n                      fill: false,\n                      borderColor: 'rgb(68, 0, 22)', // Choose a different color for Articles\n                      borderWidth: 1\n                  }\n              ]\n          },\n          options: {\n              plugins: {\n                  legend: {\n                      labels: {\n                          color: 'black',\n                          font: {\n                              size: 18,\n                              family: 'Roboto',\n                          }\n                      }\n                  }\n              },\n              scales: {\n                  y: {\n                      type: 'linear',\n                      display: true\n                  }\n              },\n          }\n      });\n    }\n  }\n\n  generateTotalAuthorsChart(idChart: string, label: string, data: any[]) {\n    const years = data.map(entry => entry.year);\n    const totalAuthors = data.map(entry => entry.totalAuthors);\n    const totalPapers = data.map(entry => entry.totalPapers);\n    const totalArticles = data.map(entry => entry.totalArticles);\n\n\n    if(idChart == \"lineChart6\"){\n      this.lineChart6 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [\n            {\n              label: label,\n              data: totalAuthors,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    \n    if (idChart == \"lineChart7\") {\n      this.lineChart7 = new Chart(idChart, {\n          type: 'line',\n          data: {\n              labels: years,\n              datasets: [\n                  {\n                      label: 'Papers',\n                      data: totalPapers,\n                      fill: false,\n                      borderColor: \"rgba(51, 153, 255)\",\n                      borderWidth: 1\n                  },\n                  {\n                      label: 'Articles',\n                      data: totalArticles,\n                      fill: false,\n                      borderColor: \"rgba(255, 0, 0, 1)\", // Choose a different color for Articles\n                      borderWidth: 1\n                  }\n              ]\n          },\n          options: {\n              plugins: {\n                  legend: {\n                      labels: {\n                          color: 'black',\n                          font: {\n                              size: 18,\n                              family: 'Roboto',\n                          }\n                      }\n                  }\n              },\n              scales: {\n                  y: {\n                      type: 'linear',\n                      display: true\n                  }\n              },\n          }\n      });\n    }\n  \n  }\n\n  generateChart(idChart: string, label: string, data: any[]) {\n    const datasets = data.map((entry, index) => ({\n      label: entry.name,\n      data: entry.numResearchers,\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n\n    if(idChart == \"lineChart2\"){\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n  \n    }\n\n    if(idChart == \"lineChart1\"){\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n  \n    }\n  }\n\n  generateChart3(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart==\"lineChart11\" || idChart==\"lineChart3\"){\n      this.lineChart3 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    \n   \n  }\n\n  generateChart4(idChart: string, label: string, data: any) {\n \n    const datasets = data.map((venue: any, index: any) => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        fill: false,\n        borderColor: this.getRandomColor(index),\n        borderWidth: 1\n      };\n    });\n  \n    const allYears = Array.from(new Set([].concat(...datasets.map((dataset: any) => dataset.years))));\n    allYears.sort();\n  \n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        },\n      }\n    });\n  }\n  \n\n  statsGender(datasets: any[]){\n    const datasetsByGenre: { [genero: string]: { year: string; count: number }[] } = {};\n\n      datasets.forEach((data: { year: any; genero: any; }) => {\n        const { year, genero } = data;\n        \n        let genderKey = '';\n        \n        if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n          genderKey = 'Men';\n        } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n          genderKey = 'Women';\n        } else{\n          genderKey = 'Unknown';\n        }\n        \n        if (!datasetsByGenre[genderKey]) {\n          datasetsByGenre[genderKey] = [];\n        }\n        \n        const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n        \n        if (existingData) {\n          existingData.count++;\n        } else {\n          datasetsByGenre[genderKey].push({\n            year,\n            count: 1\n          });\n        }\n      });\n\n      // Create an object to store the ordered data\n      const sortedData: { [anio: string]: { hombres: number; mujeres: number; total: number} } = {};\n      const men = datasetsByGenre['Men'];\n      const women = datasetsByGenre['Women'];\n\n      // Sort men's data\n      men.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        sortedData[year] = { hombres: count, mujeres: 0, total: count };\n      });\n\n      // Sort the women's data and combine it with the men's data\n      women.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        if (sortedData[year]) {\n          sortedData[year].mujeres = count;\n          sortedData[year].total += count;\n        } else {\n          sortedData[year] = { mujeres: count, hombres: 0, total: count };\n        }\n      });\n\n\n      // Get the years sorted\n      const organizedYears = Object.keys(sortedData).sort();\n\n\n      const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres/(sortedData[anio].total)).toFixed(4)));\n      const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres/(sortedData[anio].total)).toFixed(4)));\n\n      \n      this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n      this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n\n  generateMultipleGraph(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n  \n    const chartConfig: ChartConfiguration<'line'> = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true,\n          },\n        },\n      },\n    };\n  \n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generateCircularChart(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const colors = ['#FF5733', '#3399FF'];\n\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],  // Cambia la opacidad a un valor más alto\n      borderColor: 'black',\n    }));\n  \n    const chartConfig: ChartConfiguration<'pie'> = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n      },\n    };\n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  \n\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart = \"barChart1\"){\n      this.barChart = new Chart(idChart, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              backgroundColor: 'rgb(0, 22, 68)',\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }  \n\n\n  randomColor(){\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n\n  getRandomColor(index: number) {\n    let colors: Record<number, string> = {\n      0: \"rgba(51, 153, 255)\",\n      1: \"rgba(255, 0, 0, 1)\",\n      2: \"rgba(98, 192, 75, 1)\", \n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n\n    return colors[index];\n  }\n\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', { responseType: 'text' }).subscribe(\n      (data: string) => {\n        this.commonNames = this.parseCommonNames(data);\n      },\n      (error: any) => {\n        console.error('Error al cargar los datos:', error);\n      }\n    );\n  }\n\n  parseCommonNames(data: string) {\n\n    const lines = data.split('\\n');\n    const dict: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n    let currentName = '';\n    let currentData: { frec_paises: { [key: string]: number }, genero: string } = {\n      frec_paises: {},\n      genero: ''\n    };\n  \n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = { frec_paises: {}, genero: '' };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n\n  async main(){\n    try {\n      this.selectedTitles = this.stadisticsService.getSelectedTitles();\n      this.conferenceOption = this.stadisticsService.getConferenceOption();\n      this.venueName = this.stadisticsService.getVenueName();\n      if(this.stadisticsService.venueNameConfirm != this.stadisticsService.getVenueName()){\n        this.getConferencebyProceeding();\n      }else{\n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n      }\n      this.getResearchersConference();\n      this.getPapersAndArticles();\n      this.getConferencebyProceeding();\n  \n      if(this.researchers.length == 0){\n        await this.waitResearcherNoEmpty(); \n        this.getDemographicData();\n      } else{\n        this.getDemographicData();\n      }\n\n      if(this.papers.length == 0){\n        await this.waitPapersNoEmpty();\n        this.getCollaborations();\n        this.getAuthorsPapers();\n      }else{\n         this.getCollaborations();;\n         this.getAuthorsPapers();\n      }\n\n      while(this.collaborations.length < 1){\n        this.loadingTable2 = true;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.spinnerService.show();\n      }\n      this.loadingTable2 = false;\n\n      if(this.papersWithAuthors.length == 0){\n        await this.waitAuthorsWithPapersNoEmpty();\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }else{\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }\n\n\n      \n      if(this.singleAuthor.length == 0){\n        await this.waitSingleAuthorsNoEmpty();\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }else{\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }\n      this.statsProlificAuthors2(this.selectedYears);\n \n      this.getConnectedComponents();\n      this.getConnectedComponentsByvenue();\n\n      while(this.stadisticsService.conferencesNames.length <1){\n        this.loadingTable1 = true;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.spinnerService.show()\n      }\n      this.loadingTable1 = false;\n      this.stadisticsService.venueNameConfirm = this.stadisticsService.getVenueName();\n\n     \n  } catch (error) {\n    console.error('Error in getData with:', error);\n  }\n  }\n\n}","<div>\n  <h2>Statistics</h2>\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Authors / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart6\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\"  [hidden]=\"ConferencesAuthors < 2\">\n      <h3>Authors by Conference or Journal / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart1\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n\n  <div class=\"flex-container\">\n\n    <div class=\"flex-item\">\n      <h3>Conference Papers and Journal Articles / Year</h3>\n\n      <div class=\"canvas-container\" >\n        <canvas id=\"lineChart7\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\"[hidden]=\"papers.length < 1 || ConferencesCount < 2\">\n      <h3>Papers and Articles by Conference and Jorunal / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart2\" ></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\" >\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Density evolution over the years</h3>\n\n      <div class=\"canvas-container\">\n        <div class=\"overlay\" *ngIf=\"loadingTable2\">\n          <app-spinner ></app-spinner>\n        </div>\n        <canvas id=\"lineChart3\"></canvas>\n      </div>\n    </div>\n\n    <!-- [hidden]=\"statistics[4].years.length === 0\" -->\n    <div class=\"flex-item\" >\n      <h3>Percentage of single-author / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChart1\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Distributions of authors by paper and journal and of papers and journals by author</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n      <table id=\"authorsTable\">\n        <thead>\n          <tr>\n            <th>Author</th>\n            <th>Papers/Journal (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"papersTable\">\n        <thead>\n          <tr>\n            <th>Papers</th>\n            <th>Papers/Journal (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\"> Percentage of Publications Men-Women / Year</h3>\n  <div class=\"flex-container2\">\n\n    <div class=\"graph-bars\">\n\n        <div class=\"canvas-container1\">\n          <div class=\"legend\">\n            <div class=\"men\"></div> Men\n            <div class=\"women\"></div> Women\n          </div>\n          <canvas class=\"circular\" id=\"lineChart4\"></canvas>\n        </div>\n        \n    </div>\n\n    <div class=\"graph-bars2\">\n      <div class=\"canvas-container2\">\n        <canvas id=\"lineChart8\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3> Percentage of publications by Country / Year</h3>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\"> \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart5\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most frequent Bigrams and Trigrams</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n        <table id=\"tableBigramas\">\n          <thead>\n            <tr>\n              <th>Bigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"tableTrigramas\">\n          <thead>\n            <tr>\n              <th>Trigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Frequent terms from all titles of papers</h3>\n  <div class=\"conceptual\">\n    <angular-tag-cloud [config]=\"options\" [data]=\"cloudData\"></angular-tag-cloud>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most prolific authors according to their number of publications accumulated by decade</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"table90\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (a) 1989-1999\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"table00\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (b) 1999-2009\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"table10\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2009-2019\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n  </div>\n  <div class=\"linev\"></div>\n  <div class=\"table\">\n      <table id=\"table20\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2019-2024\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <h3>Authors with their first and most recent year of publication</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"degree\">\n          <thead>\n            <tr>\n              <th>Author</th>\n              <th>Degree</th>\n              <th>First <br> year</th>\n              <th>Recent <br> year</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\" [hidden]=\"papers.length < 1\">\n\n  <h3 [hidden]=\"papers.length < 1\">Proceeding by Conference</h3>\n  <div class=\"container-table2\">\n   \n    <div class=\"table\" [hidden]=\"papers.length < 1\">\n      <table id=\"tableProceeding\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Year</th>\n            <th>numberOfInProceedings</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n  <div class=\"overlay\" [hidden]=\"papers.length < 1\"*ngIf=\"loadingTable1\">\n    <app-spinner ></app-spinner>\n  </div>\n  \n\n  <hr class=\"line3\" [hidden]=\"papers.length < 1\">\n\n  <div class=\"flex-container\">\n\n    <div class=\"flex-item\" [hidden]=\"papers.length < 1\">\n      <h3>All Connected Components by year</h3>\n  \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart11\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\" [hidden]=\"papers.length < 1\">\n      <h3>Connected components for each Conference by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart12\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n \n  <div class=\"flex-container\">\n    <div class=\"flex-item\" [hidden]=\"papers.length < 1\"> \n      <h3>Relative size of components connected by conference</h3>\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart13\"></canvas>\n      </div>\n    </div>\n  </div>\n\n\n  \n</div>\n\n\n\n\n\n \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}