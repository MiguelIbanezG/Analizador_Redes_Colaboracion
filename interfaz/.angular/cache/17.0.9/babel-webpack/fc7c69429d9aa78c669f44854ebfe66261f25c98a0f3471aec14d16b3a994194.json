{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nimport { singular } from 'pluralize';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"../services/stadistics.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"angular-tag-cloud-module\";\nconst _c0 = [\"chartCanvas\"];\nChart.register(...registerables);\nexport class StatisticsComponent {\n  constructor(apiService, stadisticsService, http) {\n    this.apiService = apiService;\n    this.stadisticsService = stadisticsService;\n    this.http = http;\n    this.selectedTitles = [];\n    this.selectedYears = [];\n    this.conferenceOption = \"\";\n    this.venueName = [];\n    this.papers = [];\n    this.collaborations = [];\n    this.connectedComponents = [];\n    this.singleAuthor = [];\n    this.statistics = [];\n    this.researchers = [];\n    this.researchers2 = [];\n    this.papersWithAuthors = [];\n    this.decadeStats = [];\n    this.commonNames = {};\n    this.options = {\n      width: 500,\n      height: 200,\n      overflow: false,\n      realignOnResize: false,\n      strict: false,\n      step: 2\n    };\n    this.cloudData = [];\n  }\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n  waitResearcherNoEmpty() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (!_this.researchers || _this.researchers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getSchools() {\n    this.apiService.getSchools().subscribe({\n      next: response => {\n        this.researchers2 = response;\n        const table = document.querySelector('#tableInstitution tbody');\n        if (table instanceof HTMLElement) {\n          this.researchers2.forEach(({\n            School,\n            NumberOfAuthors,\n            Country\n          }) => {\n            const row = document.createElement('tr');\n            row.innerHTML = `\n            <td>${School}</td><td>${NumberOfAuthors}</td><td style=\"padding-left: 100px\">${Country}</td>`;\n            table.appendChild(row);\n          });\n        }\n      },\n      error: error => {\n        console.error('Error in getSchools:', error);\n      }\n    });\n  }\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles).subscribe({\n      next: response => {\n        this.researchers = response;\n        this.statsResearchers();\n        this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n      },\n      error: error => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n    if (this.researchers.length < 1) {\n      this.apiService.getResearchersJournals(this.selectedTitles).subscribe({\n        next: response => {\n          this.researchers = response;\n          this.statsResearchers();\n          this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n        },\n        error: error => {\n          console.error('Error in getResearchersJournals:', error);\n        }\n      });\n    }\n  }\n  combineAndShowData(researchersConference, researchersJournals) {\n    if (this.lineChart) {\n      this.lineChart.destroy();\n    }\n    this.generateChart3('lineChart1', 'Number of authors', researchersConference, researchersJournals);\n  }\n  getPapers() {\n    this.apiService.getPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: response => {\n        this.papers = response;\n        this.statsPapers();\n        this.generateChart3('lineChart2', 'Number of papers', this.statistics[1].years, this.statistics[1].numPapers);\n      },\n      error: error => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: response => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: error => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n  getConnectedComponents() {\n    this.apiService.getConnectedComponents(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConnectedComponentsByvenue() {\n    this.apiService.getConnectedComponentsByvenue(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n        this.generateChart4('lineChart13', 'Number of Connected Components', this.statistics[7]);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConferencebyProceeding() {\n    this.apiService.getConferencebyProceeding(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        const venueTitles = [];\n        const years = [];\n        response.forEach(({\n          title,\n          year\n        }) => {\n          venueTitles.push(title);\n          years.push(year);\n        });\n        this.generateTablesProceeding(venueTitles, years);\n      },\n      error: error => {\n        console.error('Error in getConferencebyProceeding:', error);\n      }\n    });\n  }\n  generateTablesProceeding(venueTitles, years) {\n    const table = document.querySelector('#tableProceeding tbody');\n    if (table instanceof HTMLElement) {\n      table.innerHTML = ''; // Limpiar tabla existente antes de agregar nuevas filas\n      venueTitles.forEach((venueTitle, index) => {\n        // Divide el t√≠tulo en partes usando la coma como delimitador\n        const parts = venueTitle.split(',');\n        if (parts.length == 6) {\n          parts[4] = parts[4].replace(\"Proceedings\", \"\");\n          const date = parts[4].split('.');\n          // Construye el objeto que contiene los datos para la tabla\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[2] + ',' + parts[3],\n            date: date.slice(0).join(' ')\n          };\n          // Crea una fila para la tabla y agrega los datos\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n          // Agrega la fila a la tabla\n          table.appendChild(row);\n        }\n        if (parts.length == 5) {\n          parts[3] = parts[3].replace(\"Proceedings\", \"\").trim();\n          const date = parts[3].split('.');\n          const hasNumber = /\\d/.test(date[0]);\n          if (hasNumber) {\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2],\n              date: date[0]\n            };\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n          } else {\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4]\n            };\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n          }\n        }\n        if (parts.length == 7) {\n          parts[5] = parts[5].replace(\"Proceedings\", \"\");\n          const date = parts[5].split('.');\n          if (parts[2].length > 15) {\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim() + ', ' + parts[3],\n              location: parts[3] + ', ' + parts[4],\n              date: date[0]\n            };\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n          } else {\n            const isValidFormat = /^[a-zA-Z]+\\s+\\d{1,2}(-\\d{1,2}|\\d{1,2}[a-zA-Z]+\\s+\\d{1,2})$/.test(date[0].trim());\n            if (isValidFormat) {\n              // Construye el objeto que contiene los datos para la tabla\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2] + ', ' + parts[3] + ', ' + parts[4],\n                date: date[0]\n              };\n              // Crea una fila para la tabla y agrega los datos\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n              // Agrega la fila a la tabla\n              table.appendChild(row);\n            } else {\n              // Construye el objeto que contiene los datos para la tabla\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2] + ', ' + parts[3],\n                date: parts[4] + ', ' + date[0]\n              };\n              // Crea una fila para la tabla y agrega los datos\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n              // Agrega la fila a la tabla\n              table.appendChild(row);\n            }\n          }\n        }\n      });\n    }\n  }\n  waitAuthorsWithPapersNoEmpty() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this2.papersWithAuthors || _this2.papersWithAuthors.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitSingleAuthorsNoEmpty() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this3.singleAuthor || _this3.singleAuthor.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getAuthorsPapers() {\n    var _this4 = this;\n    this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          _this4.singleAuthor = response;\n          _this4.statsSingleAuthor();\n          _this4.generateBarChart('barChart1', 'Single Author Papers', _this4.statistics[4].years, _this4.statistics[4].porcentajes);\n        });\n        return function next(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      error: error => {\n        console.error('Error in getAuthorsPapers:', error);\n      }\n    });\n  }\n  /**Function to obtain the distributions of both authors by papers and papers by authors\n   *\n   */\n  getDistributions() {\n    const labels = ['1', '2', '3', '4', '5 o m√°s'];\n    // This represents the number of authors that each paper has.\n    const authorsByPaper = [1, 2, 3, 4].map(numAuthors => this.papersWithAuthors.filter(paper => paper.numAuthors === numAuthors).length);\n    authorsByPaper[4] = this.papersWithAuthors.filter(paper => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapers, 0);\n    // This represents the number of published papers that each author has.\n    const papersByAuthor = [1, 2, 3, 4].map(numPubs => this.singleAuthor.filter(paper => paper.numPublications === numPubs).length);\n    papersByAuthor[4] = this.singleAuthor.filter(paper => paper.numPublications >= 5).length;\n    const allAuthors = this.singleAuthor.length;\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n  getDemographicData() {\n    const datasets = this.researchers.map(researcher => {\n      let name = researcher.researcher.properties.name.split(' ')[0];\n      if (name.includes(\"-\")) {\n        name = name.split('-')[0];\n      }\n      const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      const datasetByYear = years.map(year => {\n        const info = this.commonNames[name];\n        const genero = info ? info.genero : 'Unknown';\n        const frecuencias = info ? info.frec_paises : {};\n        return {\n          year,\n          name,\n          genero,\n          frecuencias\n        };\n      });\n      return datasetByYear;\n    }).flat();\n    this.statsGender(datasets);\n    this.statsGeography(datasets);\n  }\n  generateNGrams(titles, n) {\n    const ngrams = [];\n    titles.forEach(title => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  countFrequencies(ngrams) {\n    const frequencies = new Map();\n    ngrams.forEach(ngram => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n  clearTitle(title, stopwords) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    return newTitle;\n  }\n  getTopN(frequencies, n) {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n  getTopicAnalysis() {\n    // We require natural to tokenize and remove stopwords, and calculate frequencies\n    const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n    const cleanTitles = this.papersWithAuthors.map(paper => {\n      const ipName = this.clearTitle(paper.ipName, stopwords);\n      const year = parseInt(paper.year);\n      return {\n        ipName,\n        year\n      };\n    });\n    const bigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 2);\n    const trigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 3);\n    const bigramFrequencies = this.countFrequencies(bigrams);\n    const trigramFrequencies = this.countFrequencies(trigrams);\n    const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n    const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n    const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const table1 = document.querySelector('#tableBigramas tbody');\n    const table2 = document.querySelector('#tableTrigramas tbody');\n    if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n      top20BigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table1.appendChild(row);\n      });\n      top20TrigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table2.appendChild(row);\n      });\n    }\n    const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n    combinedData.sort((a, b) => b.count - a.count);\n    const maxFrecuencia = combinedData[0].count;\n    const minWeight = 0;\n    const maxWeight = 20;\n    const wordCloudData = combinedData.map((item, index) => ({\n      text: item.ngram,\n      weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n      color: this.randomColor()\n    }));\n    this.cloudData = wordCloudData;\n  }\n  generateTablesDecades() {\n    const table = document.querySelector('#tableInstitution tbody');\n    if (table instanceof HTMLElement) {\n      this.researchers2.forEach(({\n        School,\n        NumberOfAuthors,\n        Country\n      }) => {\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${School}</td><td>${NumberOfAuthors}</td><td>${Country}</td>`;\n        table.appendChild(row);\n      });\n    }\n  }\n  calculateWeight(frec, maxFrec, minWeight, maxWeight) {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n  /**\n   * ############################################\n   */\n  statsResearchers() {\n    const years = this.selectedTitles.map(titulo => titulo.properties.name);\n    this.selectedYears = years;\n    const numResearchersPorAnio = years.map(anio => this.researchers.filter(researcher => researcher.years.includes(anio)).length);\n    this.statistics[0] = {\n      years: years,\n      numResearchers: numResearchersPorAnio\n    };\n  }\n  statsPapers() {\n    const years = this.papers.map(paper => paper.year);\n    const numPapers = this.papers.map(paper => paper.numPapers);\n    this.statistics[1] = {\n      years: years,\n      numPapers: numPapers\n    };\n  }\n  statsColaboraciones() {\n    const colabsXtotal = this.papers.map(paper => {\n      const colab = this.collaborations.find(c => c.year === paper.year);\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapers: paper.numPapers\n      };\n    });\n    const density = colabsXtotal.map(dato => {\n      const {\n        year,\n        numColabs,\n        numPapers\n      } = dato;\n      const density = numColabs / numPapers;\n      return {\n        density,\n        year\n      };\n    });\n    this.statistics[3] = {\n      years: density.map(dato => dato.year),\n      densidades: density.map(dato => dato.density)\n    };\n  }\n  statsConnectedComponents() {\n    // Copiar los datos originales para no afectar el orden original\n    const copiedData = [...this.connectedComponents];\n    // Ordenar los datos por a√±o\n    copiedData.sort((a, b) => a.year - b.year);\n    // Extraer los a√±os y componentes conectados ordenados\n    const years = copiedData.map(item => item.year);\n    const connectedComponents = copiedData.map(item => item.connectedComponents);\n    this.statistics[5] = {\n      years: years,\n      connectedComponents: connectedComponents\n      // Puedes agregar otras propiedades si es necesario\n    };\n  }\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap = new Map();\n    const venueDataMapRelative = new Map();\n    let currentIndex = 0;\n    let currentIndex2 = 0;\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n          index: currentIndex\n        });\n        currentIndex++;\n      }\n      const venueData = venueDataMap.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        venueData.connectedComponents.push(item.connectedComponents);\n      }\n    });\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMapRelative.has(venueName)) {\n        venueDataMapRelative.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n          index: currentIndex2\n        });\n        currentIndex2++;\n      }\n      const venueData = venueDataMapRelative.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        let adjustedComponents = item.connectedComponents;\n        while (adjustedComponents > 1) {\n          adjustedComponents /= 10;\n        }\n        venueData.connectedComponents.push(adjustedComponents);\n      }\n    });\n    this.statistics[6] = Array.from(venueDataMap.values());\n    this.statistics[7] = Array.from(venueDataMapRelative.values());\n  }\n  statsSingleAuthor() {\n    const papersWithAuthors = [];\n    // Map all the researchers, to create papersWithAuthors, which is an array that has the name of a publication\n    // and the authors who have contributed to it.\n    this.singleAuthor.forEach(author => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n          papersWithAuthors.push({\n            ipName,\n            numAuthors: 1,\n            authorNames: [author.researcher],\n            year: author.year\n          });\n        }\n      });\n    });\n    this.papersWithAuthors = papersWithAuthors;\n    // We get all the entries whose author is one, for the statistics\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = numPapersWithSingleAuthor / numPapers * 100;\n      return {\n        year,\n        percentage\n      };\n    });\n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n  }\n  statsGeography(datasets) {\n    const mappingDate = {};\n    const datasetFiltered = datasets.filter(object => Object.keys(object.frecuencias).length > 0);\n    // Obtener todas las fechas √∫nicas\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n    // Iterar sobre las fechas\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n      // Crear objeto de mapeo para la fecha actual\n      mappingDate[date] = {};\n      for (const object of objectDate) {\n        let countryHighest = '';\n        let highestFrequency = -1;\n        for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if (!(countryHighest in mappingDate[date])) {\n          mappingDate[date][countryHighest] = 1;\n        } else {\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n    // We normalize values according to their total\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country] / total).toFixed(4));\n      }\n    }\n    const years = Object.keys(mappingDate); // Get the keys of the years\n    const countries = Object.keys(mappingDate[years[0]]); // Get country names\n    const datasetsLabels = countries; // Labels of the data sets will be the names of the countries \n    // Create the data matrix for the countries\n    const datasetsData = countries.map(country => years.map(year => mappingDate[year][country]));\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n  }\n  filterAuthorsByDecade(authors, startYear, endYear) {\n    const filteredAuthors = [];\n    // Browse the original authors\n    authors.forEach(author => {\n      // Check if the author is within the specified decade\n      const authorYears = author.year.split(\",\").map(Number).filter(year => year >= startYear && year <= endYear);\n      if (authorYears.length > 0) {\n        // Search if there is already a merged author with the same name and decade\n        const existingAuthor = filteredAuthors.find(filteredAuthor => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Merge the existing author's entries with the current author's entries\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Add the current author to the list of filtered authors\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n    return filteredAuthors;\n  }\n  statsProlificAuthors(selectedYears) {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n    // Generate the decades within the selected year range\n    const decades = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }\n    // Sort authors by number of publications in each decade\n    decades.forEach(decade => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20) {\n        decade.authors = decade.authors.slice(0, 20);\n      }\n    });\n    // Return the decades with the authors ordered\n    return decades;\n  }\n  statsProlificAuthors2(selectedYears) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n    const tables = {\n      'degree': document.querySelector('#degree tbody')\n    };\n    for (const author of topAuthors) {\n      const table = tables['degree'];\n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n        table.appendChild(row);\n      }\n    }\n  }\n  generateTablesDecades2(decadeStats) {\n    const tables = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody')\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach(autor => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n          table.appendChild(row);\n        });\n      }\n    }\n  }\n  generateChart3(idChart, label, labels, data) {\n    if (idChart == \"lineChart1\") {\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart2\" || idChart == \"lineChart11\" || idChart == \"lineChart3\") {\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart4(idChart, label, venueDataMap) {\n    const datasets = venueDataMap.map(venue => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        backgroundColor: 'rgba(0, 0, 0, 0.1)',\n        borderColor: this.getRandomColor(venue.index)\n      };\n    });\n    const allYears = Array.from(new Set([].concat(...datasets.map(dataset => dataset.years))));\n    allYears.sort();\n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets.map(dataset => {\n          return {\n            label: dataset.label,\n            data: allYears.map(year => {\n              const index = dataset.years.indexOf(year);\n              return index !== -1 ? dataset.data[index] : null;\n            }),\n            backgroundColor: 'rgba(0, 0, 0, 0.1)',\n            borderColor: dataset.borderColor\n          };\n        })\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    });\n  }\n  getRandomColor2(seed) {\n    const colorSeed = seed.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    const randomColor = Math.floor(Math.abs(Math.sin(colorSeed) * 16777215) % 16777215).toString(16);\n    return '#' + randomColor;\n  }\n  statsGender(datasets) {\n    const datasetsByGenre = {};\n    datasets.forEach(data => {\n      const {\n        year,\n        genero\n      } = data;\n      let genderKey = '';\n      if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n        genderKey = 'Men';\n      } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n        genderKey = 'Women';\n      } else {\n        genderKey = 'Unknown';\n      }\n      if (!datasetsByGenre[genderKey]) {\n        datasetsByGenre[genderKey] = [];\n      }\n      const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n      if (existingData) {\n        existingData.count++;\n      } else {\n        datasetsByGenre[genderKey].push({\n          year,\n          count: 1\n        });\n      }\n    });\n    // Create an object to store the ordered data\n    const sortedData = {};\n    const men = datasetsByGenre['Men'];\n    const women = datasetsByGenre['Women'];\n    // Sort men's data\n    men.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      sortedData[year] = {\n        hombres: count,\n        mujeres: 0,\n        total: count\n      };\n    });\n    // Sort the women's data and combine it with the men's data\n    women.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      if (sortedData[year]) {\n        sortedData[year].mujeres = count;\n        sortedData[year].total += count;\n      } else {\n        sortedData[year] = {\n          mujeres: count,\n          hombres: 0,\n          total: count\n        };\n      }\n    });\n    // Get the years sorted\n    const organizedYears = Object.keys(sortedData).sort();\n    const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres / sortedData[anio].total).toFixed(4)));\n    const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres / sortedData[anio].total).toFixed(4)));\n    this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n    this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n  generateMultipleGraph(chartId, labels, datasetsLabels, datasetsData) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      borderColor: this.getRandomColor(index)\n    }));\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateCircularChart(chartId, labels, datasetsLabels, datasetsData) {\n    const colors = ['#FF5733', '#3399FF'];\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],\n      borderColor: 'black'\n    }));\n    const chartConfig = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateBarChart(idChart, label, labels, data) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          backgroundColor: 'rgb(0, 22, 68)',\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  randomColor() {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n  getRandomColor(index) {\n    let colors = {\n      0: \"rgba(75, 192, 192, 1)\",\n      1: \"rgba(192, 75, 75, 1)\",\n      2: \"rgba(98, 192, 75, 1)\",\n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n    return colors[index];\n  }\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', {\n      responseType: 'text'\n    }).subscribe(data => {\n      this.commonNames = this.parseCommonNames(data);\n    }, error => {\n      console.error('Error al cargar los datos:', error);\n    });\n  }\n  parseCommonNames(data) {\n    const lines = data.split('\\n');\n    const dict = {};\n    let currentName = '';\n    let currentData = {\n      frec_paises: {},\n      genero: ''\n    };\n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = {\n          frec_paises: {},\n          genero: ''\n        };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n  main() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this5.selectedTitles = _this5.stadisticsService.getSelectedTitles();\n        console.log(_this5.selectedTitles);\n        _this5.conferenceOption = _this5.stadisticsService.getConferenceOption();\n        console.log(_this5.conferenceOption);\n        _this5.venueName = _this5.stadisticsService.getVenueName();\n        console.log(_this5.venueName);\n        _this5.getPapers();\n        _this5.getCollaborations();\n        _this5.getAuthorsPapers();\n        _this5.getResearchersConference();\n        _this5.getSchools();\n        _this5.generateTablesDecades();\n        _this5.getConferencebyProceeding();\n        if (_this5.researchers.length == 0) {\n          yield _this5.waitResearcherNoEmpty();\n          _this5.getDemographicData();\n        } else {\n          _this5.getDemographicData();\n        }\n        if (_this5.papersWithAuthors.length == 0) {\n          yield _this5.waitAuthorsWithPapersNoEmpty();\n          _this5.getTopicAnalysis();\n          _this5.getDistributions();\n        } else {\n          _this5.getTopicAnalysis();\n          _this5.getDistributions();\n        }\n        if (_this5.singleAuthor.length == 0) {\n          yield _this5.waitSingleAuthorsNoEmpty();\n          _this5.decadeStats = _this5.statsProlificAuthors(_this5.selectedYears);\n          _this5.generateTablesDecades2(_this5.decadeStats);\n        } else {\n          _this5.decadeStats = _this5.statsProlificAuthors(_this5.selectedYears);\n          _this5.generateTablesDecades2(_this5.decadeStats);\n        }\n        _this5.statsProlificAuthors2(_this5.selectedYears);\n        _this5.getConnectedComponents();\n        _this5.getConnectedComponentsByvenue();\n      } catch (error) {\n        console.error('Error in getData with:', error);\n      }\n    })();\n  }\n  static #_ = this.…µfac = function StatisticsComponent_Factory(t) {\n    return new (t || StatisticsComponent)(i0.…µ…µdirectiveInject(i1.ApiService), i0.…µ…µdirectiveInject(i2.StadisticsService), i0.…µ…µdirectiveInject(i3.HttpClient));\n  };\n  static #_2 = this.…µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n    type: StatisticsComponent,\n    selectors: [[\"app-statistics\"]],\n    viewQuery: function StatisticsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.…µ…µviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.…µ…µqueryRefresh(_t = i0.…µ…µloadQuery()) && (ctx.chartCanvas = _t.first);\n      }\n    },\n    decls: 243,\n    vars: 2,\n    consts: [[1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [\"id\", \"lineChart1\"], [\"id\", \"lineChart2\"], [1, \"line\"], [\"id\", \"lineChart3\"], [\"id\", \"barChart1\"], [1, \"special\"], [1, \"container-table\"], [1, \"table\"], [\"id\", \"authorsTable\"], [1, \"linev\"], [\"id\", \"papersTable\"], [1, \"flex-container2\"], [1, \"graph-bars\"], [1, \"canvas-container1\"], [1, \"legend\"], [1, \"men\"], [1, \"women\"], [\"id\", \"lineChart4\", 1, \"circular\"], [1, \"graph-bars2\"], [1, \"canvas-container2\"], [\"id\", \"lineChart8\"], [\"id\", \"lineChart5\"], [\"id\", \"tableBigramas\"], [\"id\", \"tableTrigramas\"], [1, \"conceptual\"], [3, \"config\", \"data\"], [1, \"container-table2\"], [\"id\", \"table90\"], [\"colspan\", \"2\"], [\"id\", \"table00\"], [\"id\", \"table10\", 1, \"centered-table\"], [\"id\", \"table20\", 1, \"centered-table\"], [1, \"line3\"], [\"id\", \"degree\"], [\"id\", \"tableProceeding\"], [\"id\", \"lineChart11\"], [\"id\", \"lineChart12\"], [\"id\", \"lineChart13\"], [\"id\", \"tableInstitution\"]],\n    template: function StatisticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.…µ…µelementStart(0, \"div\")(1, \"h2\");\n        i0.…µ…µtext(2, \"Statistics\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"h3\");\n        i0.…µ…µtext(6, \"Authors by year\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(7, \"div\", 2);\n        i0.…µ…µelement(8, \"canvas\", 3);\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(9, \"div\", 1)(10, \"h3\");\n        i0.…µ…µtext(11, \"Papers by year\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(12, \"div\", 2);\n        i0.…µ…µelement(13, \"canvas\", 4);\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(14, \"hr\", 5);\n        i0.…µ…µelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"h3\");\n        i0.…µ…µtext(18, \"Density evolution over the years\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(19, \"div\", 2);\n        i0.…µ…µelement(20, \"canvas\", 6);\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(21, \"div\", 1)(22, \"h3\");\n        i0.…µ…µtext(23, \"Percentage of single-author papers per year\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(24, \"div\", 2);\n        i0.…µ…µelement(25, \"canvas\", 7);\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(26, \"hr\", 5);\n        i0.…µ…µelementStart(27, \"h3\", 8);\n        i0.…µ…µtext(28, \"Distributions of authors per paper and of papers per author\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(29, \"div\", 9)(30, \"div\", 10)(31, \"table\", 11)(32, \"thead\")(33, \"tr\")(34, \"th\");\n        i0.…µ…µtext(35, \"Author\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(36, \"th\");\n        i0.…µ…µtext(37, \"Papers (%)\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(38, \"tbody\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelement(39, \"div\", 12);\n        i0.…µ…µelementStart(40, \"div\", 10)(41, \"table\", 13)(42, \"thead\")(43, \"tr\")(44, \"th\");\n        i0.…µ…µtext(45, \"Papers\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(46, \"th\");\n        i0.…µ…µtext(47, \"Author (%)\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(48, \"tbody\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(49, \"hr\", 5);\n        i0.…µ…µelementStart(50, \"h3\", 8);\n        i0.…µ…µtext(51, \" Percentage of Publications Men-Women / Year\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(52, \"div\", 14)(53, \"div\", 15)(54, \"div\", 16)(55, \"div\", 17);\n        i0.…µ…µelement(56, \"div\", 18);\n        i0.…µ…µtext(57, \" Men \");\n        i0.…µ…µelement(58, \"div\", 19);\n        i0.…µ…µtext(59, \" Women \");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(60, \"canvas\", 20);\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(61, \"div\", 21)(62, \"div\", 22);\n        i0.…µ…µelement(63, \"canvas\", 23);\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(64, \"hr\", 5);\n        i0.…µ…µelementStart(65, \"h3\");\n        i0.…µ…µtext(66, \" Percentage of publications by Country / Year\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(67, \"div\", 0)(68, \"div\", 1)(69, \"div\", 2);\n        i0.…µ…µelement(70, \"canvas\", 24);\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(71, \"hr\", 5);\n        i0.…µ…µelementStart(72, \"h3\", 8);\n        i0.…µ…µtext(73, \"Most frequent Bigrams and Trigrams\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(74, \"div\", 9)(75, \"div\", 10)(76, \"table\", 25)(77, \"thead\")(78, \"tr\")(79, \"th\");\n        i0.…µ…µtext(80, \"Bigrams\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(81, \"th\");\n        i0.…µ…µtext(82, \"Appearances\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(83, \"th\");\n        i0.…µ…µtext(84, \"First \");\n        i0.…µ…µelement(85, \"br\");\n        i0.…µ…µtext(86, \" a\\u00F1o\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(87, \"th\");\n        i0.…µ…µtext(88, \"Recent \");\n        i0.…µ…µelement(89, \"br\");\n        i0.…µ…µtext(90, \" a\\u00F1o\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(91, \"tbody\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelement(92, \"div\", 12);\n        i0.…µ…µelementStart(93, \"div\", 10)(94, \"table\", 26)(95, \"thead\")(96, \"tr\")(97, \"th\");\n        i0.…µ…µtext(98, \"Trigrams\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(99, \"th\");\n        i0.…µ…µtext(100, \"Appearances\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(101, \"th\");\n        i0.…µ…µtext(102, \"First \");\n        i0.…µ…µelement(103, \"br\");\n        i0.…µ…µtext(104, \" a\\u00F1o\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(105, \"th\");\n        i0.…µ…µtext(106, \"Recent \");\n        i0.…µ…µelement(107, \"br\");\n        i0.…µ…µtext(108, \" a\\u00F1o\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(109, \"tbody\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(110, \"hr\", 5);\n        i0.…µ…µelementStart(111, \"h3\", 8);\n        i0.…µ…µtext(112, \"Frequent terms from all titles of papers\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(113, \"div\", 27);\n        i0.…µ…µelement(114, \"angular-tag-cloud\", 28);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(115, \"hr\", 5);\n        i0.…µ…µelementStart(116, \"h3\", 8);\n        i0.…µ…µtext(117, \"Most prolific authors according to their number of publications accumulated by decade\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(118, \"div\", 29)(119, \"div\", 10)(120, \"table\", 30)(121, \"thead\")(122, \"tr\")(123, \"th\", 31);\n        i0.…µ…µtext(124, \" (a) 1989-1999 \");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelement(125, \"hr\");\n        i0.…µ…µelementStart(126, \"tr\")(127, \"th\");\n        i0.…µ…µtext(128, \"Author\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(129, \"th\");\n        i0.…µ…µtext(130, \"#\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(131, \"tbody\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelement(132, \"div\", 12);\n        i0.…µ…µelementStart(133, \"div\", 10)(134, \"table\", 32)(135, \"thead\")(136, \"tr\")(137, \"th\", 31);\n        i0.…µ…µtext(138, \" (b) 1999-2009 \");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelement(139, \"hr\");\n        i0.…µ…µelementStart(140, \"tr\")(141, \"th\");\n        i0.…µ…µtext(142, \"Author\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(143, \"th\");\n        i0.…µ…µtext(144, \"#\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(145, \"tbody\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelement(146, \"div\", 12);\n        i0.…µ…µelementStart(147, \"div\", 10)(148, \"table\", 33)(149, \"thead\")(150, \"tr\")(151, \"th\", 31);\n        i0.…µ…µtext(152, \" (a) 2009-2019 \");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelement(153, \"hr\");\n        i0.…µ…µelementStart(154, \"tr\")(155, \"th\");\n        i0.…µ…µtext(156, \"Author\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(157, \"th\");\n        i0.…µ…µtext(158, \"#\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(159, \"tbody\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelement(160, \"div\", 12);\n        i0.…µ…µelementStart(161, \"div\", 10)(162, \"table\", 34)(163, \"thead\")(164, \"tr\")(165, \"th\", 31);\n        i0.…µ…µtext(166, \" (a) 2019-2024 \");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelement(167, \"hr\");\n        i0.…µ…µelementStart(168, \"tr\")(169, \"th\");\n        i0.…µ…µtext(170, \"Author\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(171, \"th\");\n        i0.…µ…µtext(172, \"#\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(173, \"tbody\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(174, \"hr\", 35);\n        i0.…µ…µelementStart(175, \"h3\");\n        i0.…µ…µtext(176, \"Authors with their first and most recent year of publication\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(177, \"div\", 29)(178, \"div\", 10)(179, \"table\", 36)(180, \"thead\")(181, \"tr\")(182, \"th\");\n        i0.…µ…µtext(183, \"Author\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(184, \"th\");\n        i0.…µ…µtext(185, \"Degree\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(186, \"th\");\n        i0.…µ…µtext(187, \"First \");\n        i0.…µ…µelement(188, \"br\");\n        i0.…µ…µtext(189, \" year\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(190, \"th\");\n        i0.…µ…µtext(191, \"Recent \");\n        i0.…µ…µelement(192, \"br\");\n        i0.…µ…µtext(193, \" year\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(194, \"tbody\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(195, \"hr\", 35);\n        i0.…µ…µelementStart(196, \"h3\");\n        i0.…µ…µtext(197, \"Proceeding by Conference\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(198, \"div\", 29)(199, \"div\", 10)(200, \"table\", 37)(201, \"thead\")(202, \"tr\")(203, \"th\");\n        i0.…µ…µtext(204, \"Name\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(205, \"th\");\n        i0.…µ…µtext(206, \"Location\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(207, \"th\");\n        i0.…µ…µtext(208, \"Date\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(209, \"th\");\n        i0.…µ…µtext(210, \"Year\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(211, \"tbody\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(212, \"hr\", 35);\n        i0.…µ…µelementStart(213, \"div\", 0)(214, \"div\", 1)(215, \"h3\");\n        i0.…µ…µtext(216, \"All Connected Components by year\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(217, \"div\", 2);\n        i0.…µ…µelement(218, \"canvas\", 38);\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(219, \"div\", 1)(220, \"h3\");\n        i0.…µ…µtext(221, \"Connected components for each Conference by year\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(222, \"div\", 2);\n        i0.…µ…µelement(223, \"canvas\", 39);\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelementStart(224, \"h3\");\n        i0.…µ…µtext(225, \"Relative size of components connected by conference\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(226, \"div\", 0)(227, \"div\", 1)(228, \"div\", 2);\n        i0.…µ…µelement(229, \"canvas\", 40);\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(230, \"hr\", 35);\n        i0.…µ…µelementStart(231, \"div\", 29)(232, \"div\", 10)(233, \"table\", 41)(234, \"thead\")(235, \"tr\")(236, \"th\");\n        i0.…µ…µtext(237, \"Institution\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(238, \"th\");\n        i0.…µ…µtext(239, \"Number of Authors\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(240, \"th\");\n        i0.…µ…µtext(241, \"Country\");\n        i0.…µ…µelementEnd()()();\n        i0.…µ…µelement(242, \"tbody\");\n        i0.…µ…µelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.…µ…µadvance(114);\n        i0.…µ…µproperty(\"config\", ctx.options)(\"data\", ctx.cloudData);\n      }\n    },\n    dependencies: [i4.TagCloudComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 30px;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 20px;\\n  margin-bottom: 10px;\\n}\\n\\n.flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-container2[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.graph-bars[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.graph-bars2[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container1[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 91%;\\n}\\n\\n.canvas-container2[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 96%;\\n}\\n\\n.legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  font-size: 18px;\\n  margin-bottom: 20px;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 95%;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 100%; \\n\\n  height: auto;\\n  display: block;\\n}\\n\\n.line3[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  background-color: rgb(0, 22, 68);\\n}\\n\\n.container-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n  overflow: auto;\\n}\\n\\n.container-table2[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  display: flex;\\n  margin-right: 100px;\\n}\\n\\n.linev[_ngcontent-%COMP%] {\\n  border-right: 1px solid rgb(0, 22, 68);\\n  margin-right: 45px;\\n  margin-left: 20px;\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  vertical-align: middle;\\n  text-align: center;\\n  vertical-align: center;\\n  font-size: 20px;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  min-width: 40px;\\n  min-height: 1px;\\n  margin-right: 5px;\\n}\\n\\n.special[_ngcontent-%COMP%] {\\n  margin-bottom: 40px;\\n}\\n\\n#tableInstitution[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n  padding-left: 120px; \\n\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(2), #degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n  padding-left: 60px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(4) {\\n  padding-left: 90px;\\n}\\n\\n.men[_ngcontent-%COMP%] {\\n  background-color: rgb(51, 153, 255);\\n}\\n\\n.women[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 87, 51);\\n  margin-left: 20PX;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  .legend[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    font-size: 10px;\\n    margin-bottom: 20px;\\n  }\\n  .container-table[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .container-table2[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .table[_ngcontent-%COMP%] {\\n    border-right: none;\\n    padding-right: 0;\\n    padding-bottom: 20px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n}\\n.conceptual[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 200px;\\n}\\n\\n.aparte[_ngcontent-%COMP%] {\\n  margin-top: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXN0YWRpc3RpY2FzL3N0YXRpc3RpY3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBSWhCO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0FBRkY7O0FBS0E7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUZGOztBQUtBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FBRkY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFGRjs7QUFLQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUZGOztBQUtBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBRkY7O0FBS0E7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBRkY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUFGRjs7QUFNQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUhGOztBQU1BO0VBQ0UsZ0NBQUE7RUFDQSxhQUFBO0VBQ0EsVUFBQTtBQUhGOztBQU1BO0VBQ0UsZUFBQSxFQUFBLGlDQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFIRjs7QUFNQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7QUFIRjs7QUFNQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQ0FBQTtBQUhGOztBQU1BO0VBQ0UsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7QUFIRjs7QUFNQTtFQUNFLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBSEY7O0FBTUE7RUFDRSxzQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFIRjs7QUFPQTtFQUNFLGtCQUFBO0FBSkY7O0FBUUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtBQUxGOztBQVFBO0VBQ0UsZUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQUxGOztBQVFBO0VBQ0UsbUJBQUE7QUFMRjs7QUFRQTtFQUNFLG1CQUFBLEVBQUEsa0RBQUE7QUFMRjs7QUFRQTs7RUFFRSxrQkFBQTtBQUxGOztBQU9BO0VBQ0Usa0JBQUE7QUFKRjs7QUFPQTtFQUNFLG1DQUFBO0FBSkY7O0FBT0E7RUFDRSxrQ0FBQTtFQUNBLGlCQUFBO0FBSkY7O0FBUUE7RUFFRTtJQUNFLGFBQUE7RUFORjtFQVNBO0lBQ0UsYUFBQTtJQUNBLHVCQUFBO0lBQ0EsZUFBQTtJQUNBLG1CQUFBO0VBUEY7RUFTQTtJQUNFLHNCQUFBO0VBUEY7RUFTQTtJQUNFLHNCQUFBO0VBUEY7RUFTQTtJQUNFLGtCQUFBO0lBQ0EsZ0JBQUE7SUFDQSxvQkFBQTtFQVBGO0VBU0E7SUFDRSxpQkFBQTtFQVBGO0VBU0E7SUFDRSxpQkFBQTtFQVBGO0FBQ0Y7QUFXQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQVRGOztBQWNBO0VBQ0UsaUJBQUE7QUFYRiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG5cbn1cblxuaDJ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAzMHB4O1xufVxuXG5oMyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uZmxleC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5mbGV4LWNvbnRhaW5lcjIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5ncmFwaC1iYXJze1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4uZ3JhcGgtYmFyczJ7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5jYW52YXMtY29udGFpbmVyMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgcGFkZGluZzogMjBweDtcbiAgd2lkdGg6IDkxJTtcbn1cblxuLmNhbnZhcy1jb250YWluZXIyIHtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiKDAsIDIyLCA2OCk7IFxuICBwYWRkaW5nOiAyMHB4O1xuICB3aWR0aDogOTYlO1xufVxuXG4ubGVnZW5ke1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG5cbi5mbGV4LWl0ZW0ge1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4uY2FudmFzLWNvbnRhaW5lciB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgcGFkZGluZzogMjBweDtcbiAgd2lkdGg6IDk1JTtcbn1cblxuY2FudmFzIHtcbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiBIYWNlIGxhcyBncsODwqFmaWNhcyByZXNwb25zaXZlICovXG4gIGhlaWdodDogYXV0bzsgXG4gIGRpc3BsYXk6IGJsb2NrOyBcbn1cblxuLmxpbmUze1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG4ubGluZXtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDIyLCA2OCk7XG59XG5cbi5jb250YWluZXItdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IFxuICBkaXNwbGF5OiBmbGV4O1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLmNvbnRhaW5lci10YWJsZTIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1yaWdodDogMTAwcHg7XG59XG5cbi5saW5ldntcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiKDAsIDIyLCA2OCk7IFxuICBtYXJnaW4tcmlnaHQ6IDQ1cHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG5cbi50YWJsZXtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG59XG5cbnRkLCB0aCB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG5kaXYge1xuICBtaW4td2lkdGg6IDQwcHg7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbi5zcGVjaWFse1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuXG4jdGFibGVJbnN0aXR1dGlvbiB0aDpudGgtY2hpbGQoMyl7XG4gIHBhZGRpbmctbGVmdDogMTIwcHg7IC8qIEFqdXN0YSBlbCB2YWxvciBkZSBww4PCrXhlbGVzIHNlZ8ODwrpuIGxvIG5lY2VzaXRlcyAqL1xufVxuXG4jZGVncmVlIHRoOm50aC1jaGlsZCgyKSxcbiNkZWdyZWUgdGg6bnRoLWNoaWxkKDMpe1xuICBwYWRkaW5nLWxlZnQ6IDYwcHg7XG59XG4jZGVncmVlIHRoOm50aC1jaGlsZCg0KSB7XG4gIHBhZGRpbmctbGVmdDogOTBweDtcbn1cblxuLm1lbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig1MSwgMTUzLCAyNTUpO1xuICBcbn1cbi53b21lbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDg3LCA1MSk7XG4gIG1hcmdpbi1sZWZ0OiAyMFBYO1xufVxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG5cbiAgdGQsIHRoIHtcbiAgICBwYWRkaW5nOiAxMHB4OyBcbiAgfVxuXG4gIC5sZWdlbmR7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuICAuY29udGFpbmVyLXRhYmxlIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBcbiAgfVxuICAuY29udGFpbmVyLXRhYmxlMiB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgXG4gIH1cbiAgLnRhYmxlIHtcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7IFxuICAgIHBhZGRpbmctcmlnaHQ6IDA7IFxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICB9XG4gICN0YWJsZUluc3RpdHV0aW9uIHRoOm50aC1jaGlsZCgzKXtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDsgXG4gIH1cbiAgI3RhYmxlSW5zdGl0dXRpb24gdGQ6bnRoLWNoaWxkKDMpe1xuICAgIHBhZGRpbmctbGVmdDogMHB4O1xuICB9XG4gIFxufVxuXG4uY29uY2VwdHVhbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyBcbiAgaGVpZ2h0OiAyMDBweDsgXG59XG5cblxuXG4uYXBhcnRle1xuICBtYXJnaW4tdG9wOiA1MDBweDtcbn1cblxuXG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","singular","register","StatisticsComponent","constructor","apiService","stadisticsService","http","selectedTitles","selectedYears","conferenceOption","venueName","papers","collaborations","connectedComponents","singleAuthor","statistics","researchers","researchers2","papersWithAuthors","decadeStats","commonNames","options","width","height","overflow","realignOnResize","strict","step","cloudData","ngOnInit","loadCommonNames","main","waitResearcherNoEmpty","_this","_asyncToGenerator","length","Promise","resolve","setTimeout","getSchools","subscribe","next","response","table","document","querySelector","HTMLElement","forEach","School","NumberOfAuthors","Country","row","createElement","innerHTML","appendChild","error","console","getResearchersConference","statsResearchers","combineAndShowData","years","numResearchers","getResearchersJournals","researchersConference","researchersJournals","lineChart","destroy","generateChart3","getPapers","statsPapers","numPapers","getCollaborations","statsColaboraciones","densidades","getConnectedComponents","statsConnectedComponents","getConnectedComponentsByvenue","statsConnectedComponentsByvenue","generateChart4","getConferencebyProceeding","venueTitles","title","year","push","generateTablesProceeding","venueTitle","index","parts","split","replace","date","rowData","name","trim","location","slice","join","hasNumber","test","isValidFormat","waitAuthorsWithPapersNoEmpty","_this2","waitSingleAuthorsNoEmpty","_this3","getAuthorsPapers","_this4","_ref","statsSingleAuthor","generateBarChart","porcentajes","_x","apply","arguments","getDistributions","labels","authorsByPaper","map","numAuthors","filter","paper","allPapers","reduce","all","papersByAuthor","numPubs","numPublications","allAuthors","authorsTable","papersTable","amount","percentage","toFixed","worth","toString","getDemographicData","datasets","researcher","properties","includes","Array","isArray","datasetByYear","info","genero","frecuencias","frec_paises","flat","statsGender","statsGeography","generateNGrams","titles","n","ngrams","words","toLowerCase","i","countFrequencies","frequencies","Map","ngram","count","get","set","clearTitle","stopwords","word","wordsNoRepeat","singularWords","filteredWords","newTitle","getTopN","sortedFrequencies","entries","sort","a","b","getTopicAnalysis","cleanTitles","ipName","parseInt","bigrams","trigrams","bigramFrequencies","trigramFrequencies","top20Bigrams","top20Trigrams","top20BigramsWithYears","top20TrigramsWithYears","table1","table2","minYear","Math","min","maxYear","max","combinedData","maxFrecuencia","minWeight","maxWeight","wordCloudData","item","text","weight","calculateWeight","color","randomColor","generateTablesDecades","frec","maxFrec","normWeight","round","titulo","numResearchersPorAnio","anio","colabsXtotal","colab","find","c","numColabs","density","dato","copiedData","venueDataMap","venueDataMapRelative","currentIndex","currentIndex2","has","venueData","adjustedComponents","from","values","author","ipNames","paperIndex","findIndex","authorNames","papersWithOneAuthor","porcentajeByYear","numPapersWithSingleAuthor","mappingDate","datasetFiltered","object","Object","keys","uniqueDates","Set","objectDate","countryHighest","highestFrequency","country","total","Number","countries","datasetsLabels","datasetsData","generateMultipleGraph","filterAuthorsByDecade","authors","startYear","endYear","filteredAuthors","authorYears","existingAuthor","filteredAuthor","statsProlificAuthors","startDecade","floor","endDecade","decades","decade","decadeLabel","decadeStartYear","decadeEndYear","decadeAuthors","label","statsProlificAuthors2","topAuthors","tables","yearsArray","generateTablesDecades2","autor","idChart","data","type","fill","borderColor","borderWidth","plugins","legend","font","size","family","scales","y","display","lineChart2","venue","backgroundColor","getRandomColor","allYears","concat","dataset","indexOf","getRandomColor2","seed","colorSeed","acc","char","charCodeAt","abs","sin","datasetsByGenre","genderKey","existingData","d","sortedData","men","women","hombres","mujeres","organizedYears","countMen","countWoman","generateCircularChart","chartId","chartConfig","ctx","getElementById","colors","barChart","beginAtZero","r","random","g","responseType","parseCommonNames","lines","dict","currentName","currentData","linea","startsWith","frec_paisesStr","substring","lastIndexOf","JSON","parse","_this5","getSelectedTitles","log","getConferenceOption","getVenueName","_","i0","…µ…µdirectiveInject","i1","ApiService","i2","StadisticsService","i3","HttpClient","_2","selectors","viewQuery","StatisticsComponent_Query","rf","…µ…µelementStart","…µ…µtext","…µ…µelementEnd","…µ…µelement","…µ…µadvance","…µ…µproperty"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { StadisticsService } from '../services/stadistics.service';\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport { HttpClient } from '@angular/common/http';\nimport { CloudData, CloudOptions } from 'angular-tag-cloud-module';\nimport { singular } from 'pluralize';\nimport { ChartConfiguration, ChartData, ChartOptions } from 'chart.js';\n\ninterface Author {\n  ipNames: string[];\n  numPublications: number;\n  researcher: string;\n  year: string;\n}\n\ninterface DecadeStats {\n  label: string;\n  startYear: number;\n  endYear: number;\n  authors: Author[];\n}\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss'],\n})\n\nexport class StatisticsComponent implements OnInit {\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef;\n\n  selectedTitles: any[] = [];\n  selectedYears: any[] = [];\n  conferenceOption: string = \"\";\n  venueName: any[] = [];\n  papers: any[] = [];\n  collaborations: any[] = [];\n  connectedComponents: any[] = [];\n  singleAuthor: any[] = [];\n  statistics: any[] = [];\n  lineChart!: Chart;\n  lineChart2!: Chart;\n  barChart!: Chart;\n  researchers: any[] = [];\n  researchers2: any[] = [];\n  papersWithAuthors: any[] = [];\n  decadeStats: any[] = [];\n  commonNames: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n  options: CloudOptions = {\n    width: 500,\n    height: 200,\n    overflow: false,\n    realignOnResize: false,\n    strict: false,\n    step: 2,\n  };\n  cloudData: CloudData[] = []\n\n  constructor(\n    private apiService: ApiService,\n    private stadisticsService: StadisticsService,\n    private http: HttpClient\n  ) {}\n\n\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n\n  async waitResearcherNoEmpty() {\n    while (!this.researchers || this.researchers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getSchools() {\n    this.apiService.getSchools().subscribe({\n      next: (response: any[]) => {\n        this.researchers2 = response;\n        const table = document.querySelector('#tableInstitution tbody');\n        if (table instanceof HTMLElement) {\n          this.researchers2.forEach(({ School, NumberOfAuthors, Country }) => {\n            const row = document.createElement('tr');\n            row.innerHTML = `\n            <td>${School}</td><td>${NumberOfAuthors}</td><td style=\"padding-left: 100px\">${Country}</td>`;\n      \n            table.appendChild(row);\n          });\n        }\n      },\n      error: (error: any) => {\n        console.error('Error in getSchools:', error);\n      }\n    });\n  }\n\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles).subscribe({\n      next: (response: any) => {\n        this.researchers = response;\n        this.statsResearchers();\n        this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n      },\n      error: (error: any) => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n    if(this.researchers.length < 1){\n      this.apiService.getResearchersJournals(this.selectedTitles).subscribe({\n        next: (response: any) => {\n          this.researchers = response;\n          this.statsResearchers();\n          this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n        },\n        error: (error: any) => {\n          console.error('Error in getResearchersJournals:', error);\n        }\n      });\n    }\n    \n  }\n\n  combineAndShowData(researchersConference: any[], researchersJournals: any[]) {\n    \n    if(this.lineChart){\n      this.lineChart.destroy();\n    }\n  \n    this.generateChart3('lineChart1', 'Number of authors', researchersConference, researchersJournals);\n\n  }\n\n  getPapers() {\n    this.apiService.getPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: (response: any) => {\n        \n        this.papers = response;\n        this.statsPapers();\n        this.generateChart3('lineChart2', 'Number of papers', this.statistics[1].years, this.statistics[1].numPapers);\n      },\n      error: (error: any) => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: (response: any) => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: (error: any) => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n\n  getConnectedComponents(){\n    this.apiService.getConnectedComponents(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConnectedComponentsByvenue(){\n    this.apiService.getConnectedComponentsByvenue(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n        this.generateChart4('lineChart13', 'Number of Connected Components', this.statistics[7]);\n        \n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConferencebyProceeding(){\n    this.apiService.getConferencebyProceeding(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        const venueTitles: string[] = [];\n        const years: string[] = [];\n      \n        response.forEach(({ title, year }: { title: string, year: string }) => {\n          venueTitles.push(title);\n          years.push(year);\n        });\n      \n        this.generateTablesProceeding(venueTitles, years);\n      },\n      error: (error: any) => {\n        console.error('Error in getConferencebyProceeding:', error);\n      }\n    });\n  }\n\n  \n  generateTablesProceeding(venueTitles: string[], years: string[]) {\n    const table = document.querySelector('#tableProceeding tbody');\n    if (table instanceof HTMLElement) {\n      table.innerHTML = ''; // Limpiar tabla existente antes de agregar nuevas filas\n  \n      venueTitles.forEach((venueTitle, index) => {\n        // Divide el t√≠tulo en partes usando la coma como delimitador\n        const parts = venueTitle.split(',');\n\n        if( parts.length== 6){\n            \n          parts[4]= parts[4].replace(\"Proceedings\",\"\");\n          const date = parts[4].split('.')\n          \n\n          // Construye el objeto que contiene los datos para la tabla\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[2] + ',' + parts[3],\n            date: date.slice(0).join(' ')\n          };\n\n          // Crea una fila para la tabla y agrega los datos\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n          \n\n          // Agrega la fila a la tabla\n          table.appendChild(row);\n        }\n\n\n        if( parts.length== 5){\n          \n            \n          parts[3] = parts[3].replace(\"Proceedings\",\"\").trim();\n          const date = parts[3].split('.')\n          const hasNumber = /\\d/.test(date[0]);\n\n          if(hasNumber){\n\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2],\n              date: date[0]\n            };\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n\n          }else{\n\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4] \n            };\n\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n          }\n\n        }\n\n\n        if( parts.length== 7){\n            \n          parts[5]= parts[5].replace(\"Proceedings\",\"\");\n          const date = parts[5].split('.')\n\n          if(parts[2].length > 15){\n                  // Construye el objeto que contiene los datos para la tabla\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim() + ', ' + parts[3],\n            location: parts[3] + ', ' + parts[4],\n            date: date[0]\n          };\n\n          // Crea una fila para la tabla y agrega los datos\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n\n          // Agrega la fila a la tabla\n          table.appendChild(row);\n          }else{\n\n            const isValidFormat = /^[a-zA-Z]+\\s+\\d{1,2}(-\\d{1,2}|\\d{1,2}[a-zA-Z]+\\s+\\d{1,2})$/.test(date[0].trim());\n\n            if(isValidFormat){\n                        // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3] + ', ' + parts[4],\n              date: date[0]\n            };\n\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n            }else{\n                               // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4] + ', ' + date[0]\n            };\n\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td>`;\n\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n            }\n  \n          }\n          \n\n\n        }\n        \n    \n      });\n    }\n  }\n  \n  \n\n\n  async waitAuthorsWithPapersNoEmpty(){\n    while (!this.papersWithAuthors || this.papersWithAuthors.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitSingleAuthorsNoEmpty(){\n    while (!this.singleAuthor || this.singleAuthor.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getAuthorsPapers() {\n      this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName)\n        .subscribe({\n          next: async (response: any) => {\n            this.singleAuthor = response;\n            this.statsSingleAuthor();\n            this.generateBarChart('barChart1', 'Single Author Papers', this.statistics[4].years, this.statistics[4].porcentajes);          \n          },\n          error: (error: any) => {\n            console.error('Error in getAuthorsPapers:', error);\n          }\n        });\n  }\n\n  /**Function to obtain the distributions of both authors by papers and papers by authors\n   * \n   */\n  getDistributions(){\n    const labels: string[] = ['1', '2', '3', '4', '5 o m√°s'];\n\n    // This represents the number of authors that each paper has.\n    const authorsByPaper: number[] = [1, 2, 3, 4].map((numAuthors) =>\n    this.papersWithAuthors.filter((paper) => paper.numAuthors === numAuthors).length\n    );\n    authorsByPaper[4] = this.papersWithAuthors.filter((paper) => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapers, 0);\n\n    // This represents the number of published papers that each author has.\n    const papersByAuthor: number[] = [1, 2, 3, 4].map((numPubs) =>\n    this.singleAuthor.filter((paper) => paper.numPublications === numPubs).length\n    );\n    papersByAuthor[4] = this.singleAuthor.filter((paper) => paper.numPublications >= 5).length\n    const allAuthors = this.singleAuthor.length;\n\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n    \n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n\n  getDemographicData(){\n      const datasets = this.researchers.map(researcher => {\n        let name = researcher.researcher.properties.name.split(' ')[0];\n        if(name.includes(\"-\")){\n          name = name.split('-')[0];\n        }\n        const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      \n        const datasetByYear = years.map((year: any) => {\n          const info = this.commonNames[name];\n          const genero = info ? info.genero : 'Unknown';\n          const frecuencias = info ? info.frec_paises : {};\n      \n          return {\n            year,\n            name,\n            genero,\n            frecuencias\n          };\n        });\n        return datasetByYear;\n      }).flat(); \n\n      this.statsGender(datasets);\n      this.statsGeography(datasets);\n  }\n\n  generateNGrams(titles: string[], n: number): string[] {\n    const ngrams: string[] = [];\n    titles.forEach((title) => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  \n  countFrequencies(ngrams: string[]): Map<string, number> {\n    const frequencies = new Map<string, number>();\n    ngrams.forEach((ngram) => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n\n  clearTitle(title: string, stopwords: string[]) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    \n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n  \n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    \n    return newTitle;\n  }\n\n  getTopN(frequencies: Map<string, number>, n: number): [string, number][] {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n\n  getTopicAnalysis(){\n\n      // We require natural to tokenize and remove stopwords, and calculate frequencies\n      const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n\n      const cleanTitles = this.papersWithAuthors.map(paper => {\n        const ipName = this.clearTitle(paper.ipName, stopwords);\n        const year = parseInt(paper.year);\n        return { ipName, year };\n      });\n\n      const bigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 2);\n      const trigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 3);\n\n      const bigramFrequencies = this.countFrequencies(bigrams);\n      const trigramFrequencies = this.countFrequencies(trigrams);\n\n      const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n      const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n\n    \n      const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n    \n      const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n\n      const table1 = document.querySelector('#tableBigramas tbody');\n      const table2 = document.querySelector('#tableTrigramas tbody');\n    \n      if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n        top20BigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table1.appendChild(row);\n        });\n      \n        top20TrigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table2.appendChild(row);\n        });\n      }\n\n      const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n      \n      combinedData.sort((a, b) => b.count - a.count);\n\n      const maxFrecuencia = combinedData[0].count;\n      const minWeight = 0;\n      const maxWeight = 20;\n\n\n      const wordCloudData = combinedData.map((item, index) => ({\n        text: item.ngram,\n        weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n        color: this.randomColor()\n      }));\n\n      this.cloudData = wordCloudData;\n     \n  }\n\n  generateTablesDecades() {\n    const table = document.querySelector('#tableInstitution tbody');\n    if (table instanceof HTMLElement) {\n      this.researchers2.forEach(({ School, NumberOfAuthors, Country }) => {\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${School}</td><td>${NumberOfAuthors}</td><td>${Country}</td>`;\n  \n        table.appendChild(row);\n      });\n    }\n  }\n  \n  calculateWeight(frec: number, maxFrec: number, minWeight: number, maxWeight: number): number {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n\n  /**\n   * ############################################\n   */\n\n  statsResearchers() {\n    const years = this.selectedTitles.map(titulo => titulo.properties.name);\n    this.selectedYears = years;\n\n    const numResearchersPorAnio = years.map(anio =>\n      this.researchers.filter(researcher => researcher.years.includes(anio)).length\n    );\n    this.statistics[0] = {\n      years: years,\n      numResearchers: numResearchersPorAnio\n    };\n  }\n\n  statsPapers() {\n    const years = this.papers.map(paper => paper.year); \n    const numPapers = this.papers.map(paper => paper.numPapers); \n\n    this.statistics[1] = {\n      years: years,\n      numPapers: numPapers\n    };\n  }  \n\n  statsColaboraciones(){    \n    const colabsXtotal = this.papers.map(paper => {\n      const colab = this.collaborations.find(c => c.year === paper.year);\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapers: paper.numPapers\n      };\n    });\n\n    const density = colabsXtotal.map(dato => {\n      const { year, numColabs, numPapers } = dato;\n      const density = numColabs / numPapers;\n      return { density, year };\n    });\n\n    this.statistics[3] = {\n      years: density.map(dato => dato.year),\n      densidades: density.map(dato => dato.density)\n    };\n  }\n\n  statsConnectedComponents() {\n    // Copiar los datos originales para no afectar el orden original\n    const copiedData = [...this.connectedComponents];\n\n    // Ordenar los datos por a√±o\n    copiedData.sort((a, b) => a.year - b.year);\n\n    // Extraer los a√±os y componentes conectados ordenados\n    const years = copiedData.map(item => item.year);\n    const connectedComponents = copiedData.map(item => item.connectedComponents);\n  \n    this.statistics[5] = {\n        years: years,\n        connectedComponents: connectedComponents\n        // Puedes agregar otras propiedades si es necesario\n    };\n}\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap: Map<string, { years: any[], connectedComponents: any[], venueName: string, index?: number } | undefined> = new Map();\n    const venueDataMapRelative: Map<string, { years: any[], connectedComponents: any[], venueName: string, index?: number } | undefined> = new Map();\n\n    let currentIndex = 0;\n    let currentIndex2 = 0;\n\n    this.connectedComponents.forEach((item) => {\n      const venueName = item.venueName;\n\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n          index: currentIndex\n        });\n\n        currentIndex++;  \n      }\n\n      const venueData = venueDataMap.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        venueData.connectedComponents.push(item.connectedComponents);\n      }\n    });\n\n    this.connectedComponents.forEach((item) => {\n      const venueName = item.venueName;\n\n      if (!venueDataMapRelative.has(venueName)) {\n        venueDataMapRelative.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n          index: currentIndex2\n        });\n\n        currentIndex2++;  \n      }\n\n      const venueData = venueDataMapRelative.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        let adjustedComponents = item.connectedComponents;\n        while (adjustedComponents > 1) {\n          adjustedComponents /= 10;\n        }\n  \n        venueData.connectedComponents.push(adjustedComponents);\n      }\n    });\n\n    this.statistics[6] = Array.from(venueDataMap.values());\n    this.statistics[7] = Array.from(venueDataMapRelative.values());\n  }\n  \n\n  statsSingleAuthor() {\n    \n    const papersWithAuthors: { ipName: string, numAuthors: number, authorNames: string[], year: string }[] = [];\n\n    // Map all the researchers, to create papersWithAuthors, which is an array that has the name of a publication\n    // and the authors who have contributed to it.\n    this.singleAuthor.forEach((author: { ipNames: string[], researcher: string, year: string }) => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n            papersWithAuthors.push({\n              ipName,\n              numAuthors: 1,\n              authorNames: [author.researcher],\n              year: author.year\n            });\n          }\n        });\n    });\n\n    this.papersWithAuthors = papersWithAuthors;\n\n    // We get all the entries whose author is one, for the statistics\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = (numPapersWithSingleAuthor / numPapers) * 100;\n    \n      return { year, percentage };\n    });\n    \n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n  }  \n\n  statsGeography(datasets: any[]){\n    const mappingDate: {[date: string]: {[country: string]: number}} = {};\n    const datasetFiltered = datasets.filter((object: any) => Object.keys(object.frecuencias).length > 0);\n    \n    // Obtener todas las fechas √∫nicas\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n\n    // Iterar sobre las fechas\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n\n      // Crear objeto de mapeo para la fecha actual\n      mappingDate[date] = {};\n  \n    for (const object of objectDate) {\n      let countryHighest = '';\n      let highestFrequency = -1;\n\n      for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if(!(countryHighest in mappingDate[date])){\n          mappingDate[date][countryHighest] = 1;\n        }else{\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n\n    // We normalize values according to their total\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country]/total).toFixed(4));\n      }\n    }\n\n    const years = Object.keys(mappingDate); // Get the keys of the years\n    const countries = Object.keys(mappingDate[years[0]]); // Get country names\n    const datasetsLabels = countries; // Labels of the data sets will be the names of the countries \n\n    // Create the data matrix for the countries\n    const datasetsData = countries.map((country) =>\n      years.map((year) => mappingDate[year][country])\n    );\n\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n    \n  }\n\n  filterAuthorsByDecade(authors: Author[], startYear: number, endYear: number): Author[] {\n    const filteredAuthors: Author[] = [];\n  \n    // Browse the original authors\n    authors.forEach((author) => {\n      // Check if the author is within the specified decade\n      const authorYears = author.year.split(\",\").map(Number).filter((year) => year >= startYear && year <= endYear);\n\n      if (authorYears.length > 0) {\n        // Search if there is already a merged author with the same name and decade\n        const existingAuthor = filteredAuthors.find((filteredAuthor) => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Merge the existing author's entries with the current author's entries\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Add the current author to the list of filtered authors\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n\n    return filteredAuthors;\n  }\n\n  statsProlificAuthors(selectedYears: number[]): DecadeStats[] {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n  \n    // Generate the decades within the selected year range\n    const decades: DecadeStats[] = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n  \n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }  \n    // Sort authors by number of publications in each decade\n    decades.forEach((decade) => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20){\n        decade.authors = decade.authors.slice(0, 20); \n      } \n    });\n  \n    // Return the decades with the authors ordered\n    return decades;\n  }\n\n  statsProlificAuthors2(selectedYears: number[]) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n  \n    const tables = {\n      'degree': document.querySelector('#degree tbody'),\n    };\n  \n    for (const author of topAuthors) {\n      const table = tables['degree'];\n  \n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n\n  \n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n  \n        table.appendChild(row);\n      }\n    }\n\n  }\n\n  generateTablesDecades2(decadeStats: any[]){\n    const tables: { [key: string]: HTMLElement | null } = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody'),\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n  \n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach((autor: { researcher: any; numPublications: any; year: any; }) => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n  \n          table.appendChild(row);\n        });\n      }\n    }\n  }\n\n  generateChart3(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart==\"lineChart1\"){\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    if(idChart==\"lineChart2\" || idChart==\"lineChart11\" || idChart==\"lineChart3\"){\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    \n   \n  }\n\n  generateChart4(idChart: string, label: string, venueDataMap: any) {\n    const datasets = venueDataMap.map((venue: any) => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        backgroundColor: 'rgba(0, 0, 0, 0.1)',\n        borderColor: this.getRandomColor(venue.index)\n      };\n    });\n  \n    const allYears = Array.from(new Set([].concat(...datasets.map((dataset: any) => dataset.years))));\n    allYears.sort();\n  \n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets.map((dataset: any) => {\n          return {\n            label: dataset.label,\n            data: allYears.map(year => {\n              const index = dataset.years.indexOf(year);\n              return index !== -1 ? dataset.data[index] : null;\n            }),\n            backgroundColor: 'rgba(0, 0, 0, 0.1)',\n            borderColor: dataset.borderColor,\n          };\n        })\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        },\n      }\n    });\n  }\n\n  getRandomColor2(seed: string) {\n    const colorSeed = seed.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);\n    const randomColor = Math.floor(Math.abs(Math.sin(colorSeed) * 16777215) % 16777215).toString(16);\n    return '#' + randomColor;\n}\n  \n  \n  \n  \n\n  statsGender(datasets: any[]){\n    const datasetsByGenre: { [genero: string]: { year: string; count: number }[] } = {};\n\n      datasets.forEach((data: { year: any; genero: any; }) => {\n        const { year, genero } = data;\n        \n        let genderKey = '';\n        \n        if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n          genderKey = 'Men';\n        } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n          genderKey = 'Women';\n        } else{\n          genderKey = 'Unknown';\n        }\n        \n        if (!datasetsByGenre[genderKey]) {\n          datasetsByGenre[genderKey] = [];\n        }\n        \n        const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n        \n        if (existingData) {\n          existingData.count++;\n        } else {\n          datasetsByGenre[genderKey].push({\n            year,\n            count: 1\n          });\n        }\n      });\n\n      // Create an object to store the ordered data\n      const sortedData: { [anio: string]: { hombres: number; mujeres: number; total: number} } = {};\n      const men = datasetsByGenre['Men'];\n      const women = datasetsByGenre['Women'];\n\n      // Sort men's data\n      men.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        sortedData[year] = { hombres: count, mujeres: 0, total: count };\n      });\n\n      // Sort the women's data and combine it with the men's data\n      women.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        if (sortedData[year]) {\n          sortedData[year].mujeres = count;\n          sortedData[year].total += count;\n        } else {\n          sortedData[year] = { mujeres: count, hombres: 0, total: count };\n        }\n      });\n\n\n      // Get the years sorted\n      const organizedYears = Object.keys(sortedData).sort();\n\n\n      const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres/(sortedData[anio].total)).toFixed(4)));\n      const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres/(sortedData[anio].total)).toFixed(4)));\n\n      \n      this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n      this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n\n  generateMultipleGraph(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      borderColor: this.getRandomColor(index),\n    }));\n  \n    const chartConfig: ChartConfiguration<'line'> = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true,\n          },\n        },\n      },\n    };\n  \n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generateCircularChart(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const colors = ['#FF5733', '#3399FF'];\n\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],  // Cambia la opacidad a un valor m√°s alto\n      borderColor: 'black',\n    }));\n  \n    const chartConfig: ChartConfiguration<'pie'> = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n      },\n    };\n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }  \n\n  randomColor(){\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n\n  getRandomColor(index: number) {\n    let colors: Record<number, string> = {\n      0: \"rgba(75, 192, 192, 1)\",\n      1: \"rgba(192, 75, 75, 1)\",\n      2: \"rgba(98, 192, 75, 1)\", \n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n\n    return colors[index];\n  }\n\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', { responseType: 'text' }).subscribe(\n      (data: string) => {\n        this.commonNames = this.parseCommonNames(data);\n      },\n      (error: any) => {\n        console.error('Error al cargar los datos:', error);\n      }\n    );\n  }\n\n  parseCommonNames(data: string) {\n\n    const lines = data.split('\\n');\n    const dict: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n    let currentName = '';\n    let currentData: { frec_paises: { [key: string]: number }, genero: string } = {\n      frec_paises: {},\n      genero: ''\n    };\n  \n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = { frec_paises: {}, genero: '' };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n\n  async main(){\n    try {\n      this.selectedTitles = this.stadisticsService.getSelectedTitles();\n      console.log(this.selectedTitles)\n      this.conferenceOption = this.stadisticsService.getConferenceOption();\n      console.log(this.conferenceOption)\n      this.venueName = this.stadisticsService.getVenueName();\n      console.log(this.venueName)\n\n      this.getPapers();\n      this.getCollaborations();\n      this.getAuthorsPapers();\n      this.getResearchersConference();\n      this.getSchools();\n      this.generateTablesDecades();\n      this.getConferencebyProceeding();\n\n      if(this.researchers.length == 0){\n        await this.waitResearcherNoEmpty();\n        this.getDemographicData();\n      } else{\n        this.getDemographicData();\n      }      \n\n      if(this.papersWithAuthors.length == 0){\n        await this.waitAuthorsWithPapersNoEmpty();\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }else{\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }\n      \n      if(this.singleAuthor.length == 0){\n        await this.waitSingleAuthorsNoEmpty();\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }else{\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }\n      this.statsProlificAuthors2(this.selectedYears);\n \n      this.getConnectedComponents();\n      this.getConnectedComponentsByvenue();\n\n  } catch (error) {\n    console.error('Error in getData with:', error);\n  }\n  }\n\n}","<div>\n  <h2>Statistics</h2>\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Authors by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart1\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Papers by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart2\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Density evolution over the years</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart3\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Percentage of single-author papers per year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChart1\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Distributions of authors per paper and of papers per author</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n      <table id=\"authorsTable\">\n        <thead>\n          <tr>\n            <th>Author</th>\n            <th>Papers (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"papersTable\">\n        <thead>\n          <tr>\n            <th>Papers</th>\n            <th>Author (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\"> Percentage of Publications Men-Women / Year</h3>\n  <div class=\"flex-container2\">\n\n    <div class=\"graph-bars\">\n\n        <div class=\"canvas-container1\">\n          <div class=\"legend\">\n            <div class=\"men\"></div> Men\n            <div class=\"women\"></div> Women\n          </div>\n          <canvas class=\"circular\" id=\"lineChart4\"></canvas>\n        </div>\n        \n    </div>\n\n    <div class=\"graph-bars2\">\n      <div class=\"canvas-container2\">\n        <canvas id=\"lineChart8\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3> Percentage of publications by Country / Year</h3>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\"> \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart5\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most frequent Bigrams and Trigrams</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n        <table id=\"tableBigramas\">\n          <thead>\n            <tr>\n              <th>Bigrams</th>\n              <th>Appearances</th>\n              <th>First <br> a√±o</th>\n              <th>Recent <br> a√±o</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"tableTrigramas\">\n          <thead>\n            <tr>\n              <th>Trigrams</th>\n              <th>Appearances</th>\n              <th>First <br> a√±o</th>\n              <th>Recent <br> a√±o</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Frequent terms from all titles of papers</h3>\n  <div class=\"conceptual\">\n    <angular-tag-cloud [config]=\"options\" [data]=\"cloudData\"></angular-tag-cloud>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most prolific authors according to their number of publications accumulated by decade</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"table90\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (a) 1989-1999\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"table00\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (b) 1999-2009\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"table10\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2009-2019\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n  </div>\n  <div class=\"linev\"></div>\n  <div class=\"table\">\n      <table id=\"table20\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2019-2024\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <h3>Authors with their first and most recent year of publication</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"degree\">\n          <thead>\n            <tr>\n              <th>Author</th>\n              <th>Degree</th>\n              <th>First <br> year</th>\n              <th>Recent <br> year</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <h3>Proceeding by Conference</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n      <table id=\"tableProceeding\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Year</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n  \n\n  <hr class=\"line3\">\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>All Connected Components by year</h3>\n  \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart11\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Connected components for each Conference by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart12\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <h3>Relative size of components connected by conference</h3>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\"> \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart13\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <div class=\"container-table2\">\n    <div class=\"table\">\n      <table id=\"tableInstitution\">\n        <thead>\n          <tr>\n            <th>Institution</th>\n            <th>Number of Authors</th>\n            <th>Country</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n\n\n\n  \n\n  \n  \n</div>\n\n\n\n\n\n \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}