{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nlet ConfigComponent = class ConfigComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.publicationsByYear = [];\n    this.authorsByYear = [];\n    this.conferencesByYear = [];\n    this.combinedData = [];\n    this.allPublications = 0;\n    this.publicationsCombined = [];\n    this.authorsCombined = [];\n    this.conferencesCombined = [];\n    this.allAuthors = 0;\n    this.allConferences = 0;\n  }\n  ngOnInit() {\n    this.main();\n  }\n  getPublicationsbyYear() {\n    let totalPublications = 0;\n    this.apiService.getPublicationsbyYear().subscribe({\n      next: response => {\n        this.publicationsByYear = response;\n        // Asigna la respuesta del servicio a la variable\n        this.publicationsByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n        const years = this.publicationsByYear.map(item => item.yearName);\n        this.publicationsCombined = this.publicationsByYear.map(item => item.allPublications);\n        totalPublications = this.publicationsByYear.reduce((total, year) => total + year.allPublications, 0); // Suma el número total de publicaciones\n        this.generateBarChart('barChart1', 'Publications by Year', years, this.publicationsCombined);\n        console.log('Total de publicaciones por año: ', totalPublications);\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getPublicationsbyYear:', error);\n      }\n    });\n  }\n  getAuthorsbyYear() {\n    let totalAuthors = 0;\n    this.apiService.getAuthorsbyYear().subscribe({\n      next: response => {\n        this.authorsByYear = response;\n        // Asigna la respuesta del servicio a la variable\n        this.authorsByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n        const years = this.authorsByYear.map(item => item.yearName);\n        this.authorsCombined = this.authorsByYear.map(item => item.allAuthors);\n        totalAuthors = this.authorsByYear.reduce((total, year) => total + year.allAuthors, 0); // Suma el número total de publicaciones\n        this.generateBarChart('barChart2', 'Authors by Year', years, this.authorsCombined);\n        console.log('Total de autores por año: ', totalAuthors);\n      },\n      error: error => {\n        console.error('Error al obtener los autores en getAuthorsbyYear:', error);\n      }\n    });\n  }\n  getConferencesbyYear() {\n    let totalConferences = 0;\n    this.apiService.getConferencesbyYear().subscribe({\n      next: response => {\n        this.conferencesByYear = response;\n        // Asigna la respuesta del servicio a la variable\n        this.conferencesByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n        const years = this.conferencesByYear.map(item => item.yearName);\n        this.conferencesCombined = this.conferencesByYear.map(item => item.allConferences);\n        totalConferences = this.conferencesByYear.reduce((total, year) => total + year.allConferences, 0); // Suma el número total de publicaciones\n        this.generateBarChart('barChart3', 'Conferences by Year', years, this.conferencesCombined);\n        console.log('Total de conferencias por año:', totalConferences);\n      },\n      error: error => {\n        console.error('Error al obtener las conferencias en getConferencesbyYear:', error);\n      }\n    });\n  }\n  getPublications() {\n    this.apiService.getPublications().subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.allPublications = response[0].all_publications;\n        } else {\n          this.allPublications = 0;\n        }\n        console.log('Total de publicaciones correcto:', this.allPublications);\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getPublications:', error);\n      }\n    });\n  }\n  getConferences() {\n    this.apiService.getConferences().subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.allConferences = response[0].all_conferences;\n        } else {\n          this.allConferences = 0;\n        }\n        console.log('Total de conferencias correcto:', this.allConferences);\n      },\n      error: error => {\n        console.error('Error al obtener las conferencias en getConferences:', error);\n      }\n    });\n  }\n  getAuthors() {\n    this.apiService.getAuthors().subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.allAuthors = response[0].all_authors;\n        } else {\n          this.allAuthors = 0;\n        }\n        console.log('Total de autores correcto:', this.allAuthors);\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getBooks:', error);\n      }\n    });\n  }\n  combineData() {\n    // Creamos un conjunto para almacenar los años únicos\n    const uniqueYears = new Set();\n    // Agregamos los años de cada consulta al conjunto\n    this.publicationsByYear.forEach(item => uniqueYears.add(item.yearName));\n    this.authorsByYear.forEach(item => uniqueYears.add(item.yearName));\n    this.conferencesByYear.forEach(item => uniqueYears.add(item.yearName));\n    // Convertimos el conjunto a un arreglo de años únicos\n    const years = Array.from(uniqueYears);\n    // Iteramos sobre los años únicos y llenamos los datos combinados\n    years.forEach(year => {\n      const combinedItem = {\n        yearName: year,\n        allConferences: 0,\n        allAuthors: 0,\n        allPublications: 0\n      };\n      // Buscamos y asignamos los valores correspondientes para cada año\n      const publicationsData = this.publicationsByYear.find(item => item.yearName === year);\n      if (publicationsData) {\n        combinedItem.allPublications = publicationsData.allPublications;\n      }\n      const authorsData = this.authorsByYear.find(item => item.yearName === year);\n      if (authorsData) {\n        combinedItem.allAuthors = authorsData.allAuthors;\n      }\n      const conferencesData = this.conferencesByYear.find(item => item.yearName === year);\n      if (conferencesData) {\n        combinedItem.allConferences = conferencesData.allConferences;\n      }\n      // Agregamos el objeto combinado al arreglo combinedData\n      this.combinedData.push(combinedItem);\n    });\n  }\n  generateBarChart(idChart, label, labels, data) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          backgroundColor: 'rgb(0, 22, 68)',\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  generateBarChartTriple(idChart, label, labels, authorsData, conferencesData, publicationsData) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Authors',\n          data: authorsData,\n          backgroundColor: 'rgba(255, 99, 132, 1)',\n          borderColor: 'rgb(255, 99, 132)',\n          borderWidth: 1\n        }, {\n          label: 'Conferences',\n          data: conferencesData,\n          backgroundColor: 'rgba(54, 162, 235, 1)',\n          borderColor: 'rgb(54, 162, 235)',\n          borderWidth: 1\n        }, {\n          label: 'Publications',\n          data: publicationsData,\n          backgroundColor: 'rgba(255, 206, 86, 1)',\n          borderColor: 'rgb(255, 206, 86)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          },\n          x: {\n            stacked: true\n          }\n        }\n      }\n    });\n  }\n  waitForData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (_this.publicationsByYear.length < 1 || _this.conferencesByYear.length < 1 || _this.authorsByYear.length < 1) {\n        // Espera 1 segundo antes de verificar de nuevo\n        yield new Promise(resolve => setTimeout(resolve, 1000));\n      }\n    })();\n  }\n  main() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.getPublications();\n        _this2.getAuthors();\n        _this2.getConferences();\n        yield Promise.all([_this2.getPublicationsbyYear(), _this2.getAuthorsbyYear(), _this2.getConferencesbyYear()]);\n        yield _this2.waitForData();\n        yield _this2.combineData();\n        _this2.generateBarChartTriple('tripleBarChart', 'Triple Bar Chart', _this2.combinedData.map(item => item.yearName), _this2.combinedData.map(item => item.allAuthors), _this2.combinedData.map(item => item.allConferences), _this2.combinedData.map(item => item.allPublications));\n      } catch (error) {\n        console.error('Error in getData:', error);\n      }\n    })();\n  }\n};\nConfigComponent = __decorate([Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss']\n})], ConfigComponent);\nexport { ConfigComponent };","map":{"version":3,"names":["Component","Chart","registerables","register","ConfigComponent","constructor","apiService","publicationsByYear","authorsByYear","conferencesByYear","combinedData","allPublications","publicationsCombined","authorsCombined","conferencesCombined","allAuthors","allConferences","ngOnInit","main","getPublicationsbyYear","totalPublications","subscribe","next","response","sort","a","b","parseInt","yearName","years","map","item","reduce","total","year","generateBarChart","console","log","error","getAuthorsbyYear","totalAuthors","getConferencesbyYear","totalConferences","getPublications","length","all_publications","getConferences","all_conferences","getAuthors","all_authors","combineData","uniqueYears","Set","forEach","add","Array","from","combinedItem","publicationsData","find","authorsData","conferencesData","push","idChart","label","labels","data","barChart","type","datasets","backgroundColor","borderColor","borderWidth","options","plugins","legend","color","font","size","family","scales","y","beginAtZero","generateBarChartTriple","x","stacked","waitForData","_this","_asyncToGenerator","Promise","resolve","setTimeout","_this2","all","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/info/info.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { SelectionService } from '../services/selection.service';\nimport { Chart, registerables } from 'chart.js';\nimport { combineLatest, forkJoin } from 'rxjs';\nChart.register(...registerables);\n\n\n@Component({\n  selector: 'app-config',\n  templateUrl: './config.component.html',\n  styleUrls: ['./config.component.scss']\n})\nexport class ConfigComponent implements OnInit{\n  \n  publicationsByYear: { yearName: string, allPublications: number }[] = [];\n  authorsByYear: { yearName: string, allAuthors: number }[] = [];\n  conferencesByYear: { yearName: string, allConferences: number }[] = [];\n  combinedData: { yearName: string, allConferences: number, allAuthors: number, allPublications: number}[] = [];\n  allPublications = 0;\n  publicationsCombined: number[] = [];\n  authorsCombined: number[] = [];\n  conferencesCombined: number[] = [];\n  allAuthors = 0;\n  allConferences = 0;\n  barChart!: Chart;\n  \n\n  constructor(\n    private apiService: ApiService,\n  ) {}\n\n\n\n\n  ngOnInit() {\n    this.main();\n  }\n\n  getPublicationsbyYear() {\n \n    let totalPublications = 0;\n\n    this.apiService.getPublicationsbyYear().subscribe({\n      next: (response: any[]) => {\n        this.publicationsByYear = response; \n        // Asigna la respuesta del servicio a la variable\n        this.publicationsByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n    \n        const years = this.publicationsByYear.map(item => item.yearName);\n        this.publicationsCombined = this.publicationsByYear.map(item => item.allPublications);\n    \n\n        totalPublications = this.publicationsByYear.reduce((total, year) => total + year.allPublications, 0); // Suma el número total de publicaciones\n\n        this.generateBarChart('barChart1', 'Publications by Year', years, this.publicationsCombined);\n        console.log('Total de publicaciones por año: ', totalPublications);\n \n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getPublicationsbyYear:', error);\n      }\n    });\n  }\n\n  getAuthorsbyYear() {\n \n    let totalAuthors = 0;\n\n    this.apiService.getAuthorsbyYear().subscribe({\n      next: (response: any[]) => {\n        this.authorsByYear = response; \n        // Asigna la respuesta del servicio a la variable\n        this.authorsByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n    \n        const years = this.authorsByYear.map(item => item.yearName);\n        this.authorsCombined = this.authorsByYear.map(item => item.allAuthors);\n    \n\n        totalAuthors = this.authorsByYear.reduce((total, year) => total + year.allAuthors, 0); // Suma el número total de publicaciones\n\n        this.generateBarChart('barChart2', 'Authors by Year', years, this.authorsCombined);\n        console.log('Total de autores por año: ', totalAuthors);\n \n      },\n      error: (error: any) => {\n        console.error('Error al obtener los autores en getAuthorsbyYear:', error);\n      }\n    });\n  }\n\n  getConferencesbyYear() {\n \n    let totalConferences = 0;\n\n    this.apiService.getConferencesbyYear().subscribe({\n      next: (response: any[]) => {\n        this.conferencesByYear = response; \n        // Asigna la respuesta del servicio a la variable\n        this.conferencesByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n    \n        const years = this.conferencesByYear.map(item => item.yearName);\n        this.conferencesCombined = this.conferencesByYear.map(item => item.allConferences);\n    \n\n        totalConferences = this.conferencesByYear.reduce((total, year) => total + year.allConferences, 0); // Suma el número total de publicaciones\n\n        this.generateBarChart('barChart3', 'Conferences by Year', years, this.conferencesCombined);\n        console.log('Total de conferencias por año:', totalConferences);\n \n      },\n      error: (error: any) => {\n        console.error('Error al obtener las conferencias en getConferencesbyYear:', error);\n      }\n    });\n  }\n\n  getPublications() {\n    this.apiService.getPublications().subscribe({\n      next: (response: any[]) => {\n  \n        if (response.length > 0) {\n          this.allPublications = response[0].all_publications;\n        } else {\n          this.allPublications = 0;\n        }\n        console.log('Total de publicaciones correcto:', this.allPublications);\n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getPublications:', error);\n      }\n    });\n  }\n\n  getConferences() {\n    this.apiService.getConferences().subscribe({\n      next: (response: any[]) => {\n  \n        if (response.length > 0) {\n          this.allConferences = response[0].all_conferences;\n        } else {\n          this.allConferences = 0;\n        }\n        console.log('Total de conferencias correcto:', this.allConferences);\n      },\n      error: (error: any) => {\n        console.error('Error al obtener las conferencias en getConferences:', error);\n      }\n    });\n  }\n\n  getAuthors() {\n    this.apiService.getAuthors().subscribe({\n      next: (response: any[]) => {\n  \n        if (response.length > 0) {\n          this.allAuthors = response[0].all_authors;\n        } else {\n          this.allAuthors = 0;\n        }\n        console.log('Total de autores correcto:', this.allAuthors);\n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getBooks:', error);\n      }\n    });\n  }\n\n  combineData() {\n    // Creamos un conjunto para almacenar los años únicos\n    const uniqueYears = new Set<string>();\n\n    // Agregamos los años de cada consulta al conjunto\n    this.publicationsByYear.forEach(item => uniqueYears.add(item.yearName));\n    this.authorsByYear.forEach(item => uniqueYears.add(item.yearName));\n    this.conferencesByYear.forEach(item => uniqueYears.add(item.yearName));\n\n    // Convertimos el conjunto a un arreglo de años únicos\n    const years = Array.from(uniqueYears);\n\n    // Iteramos sobre los años únicos y llenamos los datos combinados\n    years.forEach(year => {\n        const combinedItem = {\n            yearName: year,\n            allConferences: 0,\n            allAuthors: 0,\n            allPublications: 0\n        };\n\n        // Buscamos y asignamos los valores correspondientes para cada año\n        const publicationsData = this.publicationsByYear.find(item => item.yearName === year);\n        if (publicationsData) {\n            combinedItem.allPublications = publicationsData.allPublications;\n        }\n\n        const authorsData = this.authorsByYear.find(item => item.yearName === year);\n        if (authorsData) {\n            combinedItem.allAuthors = authorsData.allAuthors;\n        }\n\n        const conferencesData = this.conferencesByYear.find(item => item.yearName === year);\n        if (conferencesData) {\n            combinedItem.allConferences = conferencesData.allConferences;\n        }\n\n        // Agregamos el objeto combinado al arreglo combinedData\n        this.combinedData.push(combinedItem);\n\n    });\n}\n\n\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n\n  generateBarChartTriple(idChart: string, label: string, labels: any[], authorsData: any[], conferencesData: any[], publicationsData: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Authors',\n            data: authorsData,\n            backgroundColor: 'rgba(255, 99, 132, 1)', // Color rojo transparente\n            borderColor: 'rgb(255, 99, 132)',\n            borderWidth: 1\n          },\n          {\n            label: 'Conferences',\n            data: conferencesData,\n            backgroundColor: 'rgba(54, 162, 235, 1)', // Color azul transparente\n            borderColor: 'rgb(54, 162, 235)',\n            borderWidth: 1\n          },\n          {\n            label: 'Publications',\n            data: publicationsData,\n            backgroundColor: 'rgba(255, 206, 86, 1)', // Color amarillo transparente\n            borderColor: 'rgb(255, 206, 86)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          },\n          x:{\n            stacked: true\n          }\n        }\n      }\n    });\n  }\n\n  async waitForData() {\n    while (this.publicationsByYear.length < 1 || this.conferencesByYear.length < 1 || this.authorsByYear.length < 1) {\n        // Espera 1 segundo antes de verificar de nuevo\n        await new Promise(resolve => setTimeout(resolve, 1000));\n    }\n  } \n\n  async main(){\n    try {\n\n        this.getPublications();\n        this.getAuthors();\n        this.getConferences();\n\n        await Promise.all([\n          this.getPublicationsbyYear(),\n          this.getAuthorsbyYear(),\n          this.getConferencesbyYear()\n        ]);\n\n        await this.waitForData();\n\n        await this.combineData();\n\n            this.generateBarChartTriple(\n              'tripleBarChart',\n              'Triple Bar Chart',\n              this.combinedData.map(item => item.yearName),\n              this.combinedData.map(item => item.allAuthors),\n              this.combinedData.map(item => item.allConferences),\n              this.combinedData.map(item => item.allPublications)\n        );\n\n  } catch (error) {\n    console.error('Error in getData:', error);\n  }\n\n  }\n \n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}