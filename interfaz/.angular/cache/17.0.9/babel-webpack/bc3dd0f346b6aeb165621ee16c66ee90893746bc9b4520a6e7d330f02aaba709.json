{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:3000/api';\n  }\n  autocompleteConference(term) {\n    const params = new HttpParams().set('term', term);\n    return this.http.get(`${this.baseUrl}/autocompleteConference/${term}`, {\n      params\n    });\n  }\n  autocompleteAuthors(term) {\n    const params = new HttpParams().set('term', term);\n    return this.http.get(`${this.baseUrl}/autocompleteAuthor/${term}`, {\n      params\n    });\n  }\n  getFilteredNodesConference(filtros) {\n    return this.http.post(`${this.baseUrl}/filterConferences`, {\n      filterNames: filtros\n    });\n  }\n  getFilteredNodesJournal(filtros) {\n    return this.http.post(`${this.baseUrl}/filterJournals`, {\n      filterNames: filtros\n    });\n  }\n  getResearchersConference(titulosSeleccionados, venue) {\n    return this.http.post(`${this.baseUrl}/researchers`, {\n      titulosSeleccionados,\n      venue\n    });\n  }\n  getPapers(titulosSeleccionados, venue) {\n    return this.http.post(`${this.baseUrl}/PapersAndArticles`, {\n      titulosSeleccionados,\n      venue\n    });\n  }\n  getCollaborations(titulosSeleccionados, venue) {\n    return this.http.post(`${this.baseUrl}/collaborations`, {\n      titulosSeleccionados,\n      venue\n    });\n  }\n  getAuthorsPapers(titulosSeleccionados, option, venue) {\n    return this.http.post(`${this.baseUrl}/AuthorsPapers`, {\n      titulosSeleccionados,\n      option,\n      venue\n    });\n  }\n  getAuthorsDegree(titulosSeleccionados, option, venue) {\n    return this.http.post(`${this.baseUrl}/AuthorsDegree`, {\n      titulosSeleccionados,\n      option,\n      venue\n    });\n  }\n  getPublicationsbyYear() {\n    return this.http.post(`${this.baseUrl}/searchPublications`, {});\n  }\n  getAuthorsbyYear() {\n    return this.http.post(`${this.baseUrl}/searchAuthors`, {});\n  }\n  getConferencesbyYear() {\n    return this.http.post(`${this.baseUrl}/searchConference`, {});\n  }\n  getPublications() {\n    return this.http.post(`${this.baseUrl}/allPublications`, {});\n  }\n  getConferences() {\n    return this.http.post(`${this.baseUrl}/allConferences`, {});\n  }\n  getAuthors() {\n    return this.http.post(`${this.baseUrl}/allAuthors`, {});\n  }\n  getSchools() {\n    return this.http.post(`${this.baseUrl}/schools`, {});\n  }\n  getConnectedComponents(titulosSeleccionados, venue) {\n    return this.http.post(`${this.baseUrl}/connectedComponents`, {\n      titulosSeleccionados,\n      venue\n    });\n  }\n  getConnectedComponentsByvenue(titulosSeleccionados, venue) {\n    return this.http.post(`${this.baseUrl}/connectedComponentsBYvenue`, {\n      titulosSeleccionados,\n      venue\n    });\n  }\n  getConferencebyProceeding(titulosSeleccionados, venue) {\n    return this.http.post(`${this.baseUrl}/ConferencebyProceeding`, {\n      titulosSeleccionados,\n      venue\n    });\n  }\n  getAuthorsPublications(filterNames) {\n    return this.http.post(`${this.baseUrl}/filterAuthors`, {\n      filterNames\n    });\n  }\n  static #_ = this.ɵfac = function ApiService_Factory(t) {\n    return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ApiService,\n    factory: ApiService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpParams","ApiService","constructor","http","baseUrl","autocompleteConference","term","params","set","get","autocompleteAuthors","getFilteredNodesConference","filtros","post","filterNames","getFilteredNodesJournal","getResearchersConference","titulosSeleccionados","venue","getPapers","getCollaborations","getAuthorsPapers","option","getAuthorsDegree","getPublicationsbyYear","getAuthorsbyYear","getConferencesbyYear","getPublications","getConferences","getAuthors","getSchools","getConnectedComponents","getConnectedComponentsByvenue","getConferencebyProceeding","getAuthorsPublications","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/services/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  private baseUrl = 'http://localhost:3000/api';\n\n  constructor(private http: HttpClient) {}\n\n  autocompleteConference(term: string): Observable<string[]> {\n    const params = new HttpParams().set('term', term);\n    return this.http.get<string[]>(`${this.baseUrl}/autocompleteConference/${term}`, { params });\n  }\n\n  autocompleteAuthors(term: string): Observable<string[]> {\n    const params = new HttpParams().set('term', term);\n    return this.http.get<string[]>(`${this.baseUrl}/autocompleteAuthor/${term}`, { params });\n  }\n\n  getFilteredNodesConference(filtros: string[]): Observable<string[]> {\n    return this.http.post<string[]>(`${this.baseUrl}/filterConferences`, { filterNames: filtros });\n  }\n\n  getFilteredNodesJournal(filtros: string[]): Observable<string[]> {\n    return this.http.post<string[]>(`${this.baseUrl}/filterJournals`, { filterNames: filtros });\n  }\n\n  getResearchersConference(titulosSeleccionados: any[], venue: string[]): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/researchers`, { titulosSeleccionados, venue});\n  }\n\n  getPapers(titulosSeleccionados: any[], venue: string[]): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/PapersAndArticles`, { titulosSeleccionados, venue });\n  }\n\n  getCollaborations(titulosSeleccionados: any[], venue: string[]): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/collaborations`, { titulosSeleccionados, venue });\n  }\n\n  getAuthorsPapers(titulosSeleccionados: any[], option: string, venue: string[]): Observable<any> {\n     return this.http.post<any>(`${this.baseUrl}/AuthorsPapers`, { titulosSeleccionados, option, venue });\n  }\n\n  getAuthorsDegree(titulosSeleccionados: any[], option: string, venue: string[]): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/AuthorsDegree`, { titulosSeleccionados, option, venue });\n  }\n\n  getPublicationsbyYear(): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/searchPublications`, {});\n  }\n\n  getAuthorsbyYear(): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/searchAuthors`, {});\n  }\n\n  getConferencesbyYear(): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/searchConference`, {});\n  }\n\n  getPublications(): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/allPublications`, {});\n  }\n\n  getConferences(): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/allConferences`, {});\n  }\n\n  getAuthors(): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/allAuthors`, {});\n  }\n\n  getSchools(): Observable<any[]> {\n    return this.http.post<any[]>(`${this.baseUrl}/schools`, {});\n  }\n\n  getConnectedComponents(titulosSeleccionados: any[], venue: string[]): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/connectedComponents`, { titulosSeleccionados, venue });\n  }\n\n  getConnectedComponentsByvenue(titulosSeleccionados: any[], venue: string[]): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/connectedComponentsBYvenue`, { titulosSeleccionados, venue });\n  }\n\n  getConferencebyProceeding(titulosSeleccionados: any[], venue: string[]): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/ConferencebyProceeding`, { titulosSeleccionados, venue });\n  }\n\n  getAuthorsPublications(filterNames: string[]): Observable<any> {\n    return this.http.post<any>(`${this.baseUrl}/filterAuthors`, { filterNames });\n  }\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}