{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nimport { singular } from 'pluralize';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"../selection.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"angular-tag-cloud-module\";\nconst _c0 = [\"chartCanvas\"];\nChart.register(...registerables);\nexport class StatisticsComponent {\n  constructor(apiService, selectionService, http) {\n    this.apiService = apiService;\n    this.selectionService = selectionService;\n    this.http = http;\n    this.selectedTitles = [];\n    this.selectedYears = [];\n    this.conferenceOption = \"\";\n    this.venueName = [];\n    this.papers = [];\n    this.collaborations = [];\n    this.singleAuthor = [];\n    this.statistics = [];\n    this.researchers = [];\n    this.researchers2 = [];\n    this.papersWithAuthors = [];\n    this.decadeStats = [];\n    this.commonNames = {};\n    this.options = {\n      // if width is between 0 and 1 it will be set to the width of the upper element multiplied by the value\n      width: 500,\n      // if height is between 0 and 1 it will be set to the height of the upper element multiplied by the value\n      height: 200,\n      overflow: false,\n      realignOnResize: false,\n      strict: false,\n      step: 2\n    };\n    this.cloudData = [];\n  }\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n  ngAfterViewInit() {\n    // Este método se ejecutará después de que Angular haya inicializado la vista\n    // Perfe para realizar cualquier manipulación adicional del DOM relacionada con el gráfico\n    // como ajustes de estilo, cambios dinámicos en los datos, etc.\n  }\n  waitResearcherNoEmpty() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (!_this.researchers || _this.researchers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getSchools() {\n    this.apiService.getSchools().subscribe({\n      next: response => {\n        this.researchers2 = response;\n        const table = document.querySelector('#tablaInstitution tbody');\n        if (table instanceof HTMLElement) {\n          this.researchers2.forEach(({\n            School,\n            NumberOfAuthors,\n            Country\n          }) => {\n            const row = document.createElement('tr');\n            row.innerHTML = `\n            <td>${School}</td><td>${NumberOfAuthors}</td><td style=\"padding-left: 100px\">${Country}</td>`;\n            table.appendChild(row);\n          });\n        }\n      },\n      error: error => {\n        console.error('Error in getSchools:', error);\n      }\n    });\n  }\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles).subscribe({\n      next: response => {\n        this.researchers = response;\n        this.statsResearchers();\n        this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n      },\n      error: error => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n    if (this.researchers.length < 1) {\n      this.apiService.getResearchersJournals(this.selectedTitles).subscribe({\n        next: response => {\n          this.researchers = response;\n          this.statsResearchers();\n          this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n        },\n        error: error => {\n          console.error('Error in getResearchersJournals:', error);\n        }\n      });\n    }\n  }\n  combineAndShowData(researchersConference, researchersJournals) {\n    if (this.lineChart) {\n      this.lineChart.destroy();\n    }\n    this.generarGrafico3('lineChart1', 'Number of authors', researchersConference, researchersJournals);\n  }\n  getPapers() {\n    this.apiService.getPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: response => {\n        this.papers = response;\n        this.statsPapers();\n        this.generarGrafico3('lineChart2', 'Number of papers', this.statistics[1].years, this.statistics[1].numPapers);\n      },\n      error: error => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: response => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generarGrafico3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: error => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n  waitAuthorsWithPapersNoEmpty() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this2.papersWithAuthors || _this2.papersWithAuthors.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitSingleAuthorsNoEmpty() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this3.singleAuthor || _this3.singleAuthor.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getAuthorsPapers() {\n    var _this4 = this;\n    this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          _this4.singleAuthor = response;\n          _this4.statsSingleAuthor();\n          _this4.generarGraficoBarras('barChart1', 'Single Author Papers', _this4.statistics[4].years, _this4.statistics[4].porcentajes);\n        });\n        return function next(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      error: error => {\n        console.error('Error in getAuthorsPapers:', error);\n      }\n    });\n  }\n  /**Function to obtain the distributions of both authors by papers and papers by authors\n   *\n   */\n  getDistributions() {\n    const labels = ['1', '2', '3', '4', '5 o más'];\n    // This represents the number of authors that each paper has.\n    const authorsByPaper = [1, 2, 3, 4].map(numAuthors => this.papersWithAuthors.filter(paper => paper.numAuthors === numAuthors).length);\n    authorsByPaper[4] = this.papersWithAuthors.filter(paper => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapers, 0);\n    // This represents the number of published papers that each author has.\n    const papersByAuthor = [1, 2, 3, 4].map(numPubs => this.singleAuthor.filter(paper => paper.numPublications === numPubs).length);\n    papersByAuthor[4] = this.singleAuthor.filter(paper => paper.numPublications >= 5).length;\n    const allAuthors = this.singleAuthor.length;\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#autoresTabla tbody');\n    const papersTable = document.querySelector('#papersTabla tbody');\n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n  obtenerDatosDemograficos() {\n    const datasets = this.researchers.map(researcher => {\n      let name = researcher.researcher.properties.name.split(' ')[0];\n      if (name.includes(\"-\")) {\n        name = name.split('-')[0];\n      }\n      const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      const datasetByYear = years.map(year => {\n        const info = this.commonNames[name];\n        const genero = info ? info.genero : 'Unknown';\n        const frecuencias = info ? info.frec_paises : {};\n        return {\n          year,\n          name,\n          genero,\n          frecuencias\n        };\n      });\n      return datasetByYear;\n    }).flat();\n    this.statsGenero(datasets);\n    this.statsGeografia(datasets);\n  }\n  generateNGrams(titles, n) {\n    const ngrams = [];\n    titles.forEach(title => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  countFrequencies(ngrams) {\n    const frequencies = new Map();\n    ngrams.forEach(ngram => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n  clearTitle(title, stopwords) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    return newTitle;\n  }\n  getTopN(frequencies, n) {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n  getTopicAnalysis() {\n    // We require natural to tokenize and remove stopwords, and calculate frequencies\n    const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n    const cleanTitles = this.papersWithAuthors.map(paper => {\n      const ipName = this.clearTitle(paper.ipName, stopwords);\n      const year = parseInt(paper.year);\n      return {\n        ipName,\n        year\n      };\n    });\n    const bigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 2);\n    const trigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 3);\n    const bigramFrequencies = this.countFrequencies(bigrams);\n    const trigramFrequencies = this.countFrequencies(trigrams);\n    const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n    const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n    const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const table1 = document.querySelector('#tablaBigramas tbody');\n    const table2 = document.querySelector('#tablaTrigramas tbody');\n    if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n      top20BigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table1.appendChild(row);\n      });\n      top20TrigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table2.appendChild(row);\n      });\n    }\n    const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n    combinedData.sort((a, b) => b.count - a.count);\n    const maxFrecuencia = combinedData[0].count;\n    const minWeight = 0;\n    const maxWeight = 20;\n    const wordCloudData = combinedData.map((item, index) => ({\n      text: item.ngram,\n      weight: this.calcularWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n      color: this.randomColor()\n    }));\n    this.cloudData = wordCloudData;\n  }\n  generarTablasDecadas2() {\n    const table = document.querySelector('#tablaInstitution tbody');\n    if (table instanceof HTMLElement) {\n      this.researchers2.forEach(({\n        School,\n        NumberOfAuthors,\n        Country\n      }) => {\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${School}</td><td>${NumberOfAuthors}</td><td>${Country}</td>`;\n        table.appendChild(row);\n      });\n    }\n  }\n  calcularWeight(frecuencia, maxFrecuencia, minWeight, maxWeight) {\n    const peso = frecuencia / maxFrecuencia;\n    const pesoNormalizado = peso * (maxWeight - minWeight) + minWeight;\n    return Math.round(pesoNormalizado);\n  }\n  /**\n   * ############################################\n   */\n  statsResearchers() {\n    const numResearchers = this.researchers.length;\n    const years = this.selectedTitles.map(titulo => titulo.properties.name);\n    this.selectedYears = years;\n    const numResearchersPorAnio = years.map(anio => this.researchers.filter(researcher => researcher.years.includes(anio)).length);\n    this.statistics[0] = {\n      years: years,\n      numResearchers: numResearchersPorAnio\n    };\n  }\n  statsPapers() {\n    const years = this.papers.map(paper => paper.year); // Extraer los años de this.numPapers\n    const numPapers = this.papers.map(paper => paper.numPapers);\n    this.statistics[1] = {\n      years: years,\n      numPapers: numPapers\n    };\n  }\n  statsInstitutions() {\n    const years = this.papers.map(paper => paper.year);\n    // Extraer los años de this.numPapers\n    // const numPapers = this.papers.map(paper => paper.numPapers); \n    this.statistics[2] = {\n      years: years,\n      numPapers: years\n    };\n  }\n  statsColaboraciones() {\n    const colabsXtotal = this.papers.map(paper => {\n      const colab = this.collaborations.find(c => c.year === paper.year);\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapers: paper.numPapers\n      };\n    });\n    const densidad = colabsXtotal.map(dato => {\n      const {\n        year,\n        numColabs,\n        numPapers\n      } = dato;\n      const densidad = numColabs / numPapers;\n      return {\n        densidad,\n        year\n      };\n    });\n    this.statistics[3] = {\n      years: densidad.map(dato => dato.year),\n      densidades: densidad.map(dato => dato.densidad)\n    };\n  }\n  statsSingleAuthor() {\n    const papersWithAuthors = [];\n    // Mapea todos los researchers, para crear papersWithAuthors, que es un array que tiene el nombre de una publicacion\n    // y los autores que han contribuido él.\n    this.singleAuthor.forEach(author => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n          papersWithAuthors.push({\n            ipName,\n            numAuthors: 1,\n            authorNames: [author.researcher],\n            year: author.year\n          });\n        }\n      });\n    });\n    this.papersWithAuthors = papersWithAuthors;\n    // Conseguimos todas las entradas cuyo autor sea uno, para las estadisticas\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const porcentaje = numPapersWithSingleAuthor / numPapers * 100;\n      return {\n        year,\n        porcentaje\n      };\n    });\n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.porcentaje)\n    };\n  }\n  statsGeografia(datasets) {\n    const mapeoFecha = {};\n    const datasetFiltrado = datasets.filter(objeto => Object.keys(objeto.frecuencias).length > 0);\n    // Obtener todas las fechas únicas\n    const fechasUnicas = [...new Set(datasetFiltrado.map(dato => dato.year))];\n    // Iterar sobre las fechas\n    for (const fecha of fechasUnicas) {\n      const objetosFecha = datasetFiltrado.filter(dato => dato.year === fecha);\n      // Crear objeto de mapeo para la fecha actual\n      mapeoFecha[fecha] = {};\n      for (const objeto of objetosFecha) {\n        let paisMasAlto = '';\n        let frecuenciaMasAlta = -1;\n        for (const pais in objeto.frecuencias) {\n          if (objeto.frecuencias[pais] > frecuenciaMasAlta) {\n            paisMasAlto = pais;\n            frecuenciaMasAlta = objeto.frecuencias[pais];\n          }\n        }\n        if (!(paisMasAlto in mapeoFecha[fecha])) {\n          mapeoFecha[fecha][paisMasAlto] = 1;\n        } else {\n          mapeoFecha[fecha][paisMasAlto] = mapeoFecha[fecha][paisMasAlto] + 1;\n        }\n      }\n    }\n    // Normalizamos valores según su total\n    for (const year in mapeoFecha) {\n      let total = 0;\n      for (const country in mapeoFecha[year]) {\n        total += mapeoFecha[year][country];\n      }\n      for (const country in mapeoFecha[year]) {\n        mapeoFecha[year][country] = Number((mapeoFecha[year][country] / total).toFixed(4));\n      }\n    }\n    const years = Object.keys(mapeoFecha); // Obtener las llaves de los años\n    const countries = Object.keys(mapeoFecha[years[0]]); // Obtener los nombres de los países\n    const datasetsLabels = countries; // Etiquetas de los conjuntos de datos serán los nombres de los países\n    // Crear la matriz de datos para los países\n    const datasetsData = countries.map(country => years.map(year => mapeoFecha[year][country]));\n    this.generarGraficoMultiple('lineChart5', years, datasetsLabels, datasetsData);\n  }\n  filterAuthorsByDecade(authors, startYear, endYear) {\n    const filteredAuthors = [];\n    // Recorrer los autores originales\n    authors.forEach(author => {\n      // Verificar si el autor está dentro de la década especificada\n      const authorYears = author.year.split(\",\").map(Number).filter(year => year >= startYear && year <= endYear);\n      if (authorYears.length > 0) {\n        // Buscar si ya existe un autor fusionado con el mismo nombre y década\n        const existingAuthor = filteredAuthors.find(filteredAuthor => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Fusionar las entradas del autor existente con las del autor actual\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Agregar el autor actual a la lista de autores filtrados\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n    return filteredAuthors;\n  }\n  statsProlificAuthors(selectedYears) {\n    // Obtener el rango de años seleccionados por el usuario\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    // Calcular las décadas correspondientes al rango de años seleccionados\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n    // Generar las décadas dentro del rango de años seleccionados\n    const decades = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }\n    // Ordenar los autores por número de publicaciones en cada década\n    decades.forEach(decade => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20) {\n        decade.authors = decade.authors.slice(0, 20);\n      }\n    });\n    // Devolver las décadas con los autores ordenados\n    return decades;\n  }\n  statsProlificAuthors2(selectedYears) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n    const tablas = {\n      'degree': document.querySelector('#degree tbody')\n    };\n    for (const author of topAuthors) {\n      const tabla = tablas['degree'];\n      if (tabla instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n        tabla.appendChild(row);\n      }\n    }\n  }\n  generarDegreeAnalisis(years) {}\n  generarTablasDecadas(decadeStats) {\n    const tablas = {\n      '1990s': document.querySelector('#tabla90 tbody'),\n      '2000s': document.querySelector('#tabla00 tbody'),\n      '2010s': document.querySelector('#tabla10 tbody'),\n      '2020s': document.querySelector('#tabla20 tbody')\n    };\n    for (const decada of decadeStats) {\n      const tabla = tablas[decada.label];\n      if (tabla instanceof HTMLElement) {\n        decada.authors.slice(0, 20).forEach(autor => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n          tabla.appendChild(row);\n        });\n      }\n    }\n  }\n  generarGrafico3(idChart, label, labels, data) {\n    if (idChart == \"lineChart1\") {\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart2\") {\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart3\") {\n      this.lineChart3 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  statsGenero(datasets) {\n    const datasetsPorGenero = {};\n    datasets.forEach(data => {\n      const {\n        year,\n        genero\n      } = data;\n      let genderKey = '';\n      if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n        genderKey = 'Hombres';\n      } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n        genderKey = 'Mujeres';\n      } else {\n        genderKey = 'Desconocido';\n      }\n      if (!datasetsPorGenero[genderKey]) {\n        datasetsPorGenero[genderKey] = [];\n      }\n      const existingData = datasetsPorGenero[genderKey].find(d => d.year === year);\n      if (existingData) {\n        existingData.count++;\n      } else {\n        datasetsPorGenero[genderKey].push({\n          year,\n          count: 1\n        });\n      }\n    });\n    // Crear un objeto para almacenar los datos ordenados\n    const datosOrdenados = {};\n    const hombres = datasetsPorGenero['Hombres'];\n    const mujeres = datasetsPorGenero['Mujeres'];\n    // Ordenar los datos de hombres\n    hombres.forEach(dato => {\n      const anio = dato.year;\n      const conteo = dato.count;\n      datosOrdenados[anio] = {\n        hombres: conteo,\n        mujeres: 0,\n        total: conteo\n      };\n    });\n    // Ordenar los datos de mujeres y combinarlos con los datos de hombres\n    mujeres.forEach(dato => {\n      const anio = dato.year;\n      const conteo = dato.count;\n      if (datosOrdenados[anio]) {\n        datosOrdenados[anio].mujeres = conteo;\n        datosOrdenados[anio].total += conteo;\n      } else {\n        datosOrdenados[anio] = {\n          mujeres: conteo,\n          hombres: 0,\n          total: conteo\n        };\n      }\n    });\n    // Obtener los años ordenados\n    const organizedYears = Object.keys(datosOrdenados).sort();\n    const conteosHombres = organizedYears.map(anio => Number((datosOrdenados[anio].hombres / datosOrdenados[anio].total).toFixed(4)));\n    const conteosMujeres = organizedYears.map(anio => Number((datosOrdenados[anio].mujeres / datosOrdenados[anio].total).toFixed(4)));\n    this.generarGraficoCircular('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [conteosHombres, conteosMujeres]);\n    this.generarGraficoMultiple('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [conteosHombres, conteosMujeres]);\n  }\n  generarGraficoMultiple(chartId, labels, datasetsLabels, datasetsData) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      borderColor: this.getRandomColor(index)\n    }));\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    };\n    // Crear el gráfico\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generarGraficoCircular(chartId, labels, datasetsLabels, datasetsData) {\n    const colores = ['#FF5733', '#3399FF'];\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colores[index],\n      borderColor: 'black'\n    }));\n    const chartConfig = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generarGraficoBarras(idChart, label, labels, data) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          backgroundColor: 'rgb(0, 22, 68)',\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  randomColor() {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n  getRandomColor(index) {\n    let colors = {\n      0: \"rgba(75, 192, 192, 1)\",\n      1: \"rgba(192, 75, 75, 1)\",\n      2: \"rgba(98, 192, 75, 1)\",\n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n    return colors[index];\n  }\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', {\n      responseType: 'text'\n    }).subscribe(data => {\n      this.commonNames = this.parseCommonNames(data);\n    }, error => {\n      console.error('Error al cargar los datos:', error);\n    });\n  }\n  parseCommonNames(data) {\n    const lines = data.split('\\n');\n    const dict = {};\n    let currentName = '';\n    let currentData = {\n      frec_paises: {},\n      genero: ''\n    };\n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = {\n          frec_paises: {},\n          genero: ''\n        };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n  main() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this5.selectedTitles = _this5.selectionService.getSelectedTitles();\n        _this5.conferenceOption = _this5.selectionService.getConferenceOption();\n        _this5.venueName = _this5.selectionService.getVenueName();\n        _this5.getPapers();\n        _this5.getCollaborations();\n        _this5.getAuthorsPapers();\n        _this5.getResearchersConference();\n        _this5.getSchools();\n        _this5.generarTablasDecadas2();\n        if (_this5.researchers.length == 0) {\n          yield _this5.waitResearcherNoEmpty();\n          _this5.obtenerDatosDemograficos();\n        } else {\n          _this5.obtenerDatosDemograficos();\n        }\n        if (_this5.papersWithAuthors.length == 0) {\n          yield _this5.waitAuthorsWithPapersNoEmpty();\n          _this5.getTopicAnalysis();\n          _this5.getDistributions();\n        } else {\n          _this5.getTopicAnalysis();\n          _this5.getDistributions();\n        }\n        if (_this5.singleAuthor.length == 0) {\n          yield _this5.waitSingleAuthorsNoEmpty();\n          _this5.decadeStats = _this5.statsProlificAuthors(_this5.selectedYears);\n          _this5.generarTablasDecadas(_this5.decadeStats);\n        } else {\n          _this5.decadeStats = _this5.statsProlificAuthors(_this5.selectedYears);\n          _this5.generarTablasDecadas(_this5.decadeStats);\n        }\n        _this5.statsProlificAuthors2(_this5.selectedYears);\n      } catch (error) {\n        console.error('Error al obtener los datos:', error);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function StatisticsComponent_Factory(t) {\n    return new (t || StatisticsComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.SelectionService), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatisticsComponent,\n    selectors: [[\"app-statistics\"]],\n    viewQuery: function StatisticsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n      }\n    },\n    decls: 208,\n    vars: 2,\n    consts: [[1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [\"id\", \"lineChart1\"], [\"id\", \"lineChart2\"], [1, \"line\"], [\"id\", \"lineChart3\"], [\"id\", \"barChart1\"], [1, \"especial\"], [1, \"container-table\"], [1, \"tabla\"], [\"id\", \"autoresTabla\"], [1, \"linev\"], [\"id\", \"papersTabla\"], [1, \"flex-container2\"], [1, \"graph-bars\"], [1, \"canvas-container1\"], [1, \"legend\"], [1, \"hombres\"], [1, \"mujeres\"], [\"id\", \"lineChart4\", 1, \"circular\"], [1, \"graph-bars2\"], [1, \"canvas-container2\"], [\"id\", \"lineChart8\"], [\"id\", \"lineChart5\"], [\"id\", \"tablaBigramas\"], [\"id\", \"tablaTrigramas\"], [1, \"conceptual\"], [3, \"config\", \"data\"], [1, \"container-table2\"], [\"id\", \"tabla90\"], [\"colspan\", \"2\"], [\"id\", \"tabla00\"], [\"id\", \"tabla10\", 1, \"centered-table\"], [\"id\", \"tabla20\", 1, \"centered-table\"], [1, \"line3\"], [\"id\", \"degree\"], [\"id\", \"tablaInstitution\"]],\n    template: function StatisticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"h3\");\n        i0.ɵɵtext(6, \"Authors by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelement(8, \"canvas\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"h3\");\n        i0.ɵɵtext(11, \"Papers by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2);\n        i0.ɵɵelement(13, \"canvas\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"hr\", 5);\n        i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"h3\");\n        i0.ɵɵtext(18, \"Density evolution over the years\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵelement(20, \"canvas\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 1)(22, \"h3\");\n        i0.ɵɵtext(23, \"Percentage of single-author papers per year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2);\n        i0.ɵɵelement(25, \"canvas\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(26, \"hr\", 5);\n        i0.ɵɵelementStart(27, \"h3\", 8);\n        i0.ɵɵtext(28, \"Distributions of authors per paper and of papers per author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 9)(30, \"div\", 10)(31, \"table\", 11)(32, \"thead\")(33, \"tr\")(34, \"th\");\n        i0.ɵɵtext(35, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"th\");\n        i0.ɵɵtext(37, \"Papers (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(38, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(39, \"div\", 12);\n        i0.ɵɵelementStart(40, \"div\", 10)(41, \"table\", 13)(42, \"thead\")(43, \"tr\")(44, \"th\");\n        i0.ɵɵtext(45, \"Papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"th\");\n        i0.ɵɵtext(47, \"Author (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(48, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(49, \"hr\", 5);\n        i0.ɵɵelementStart(50, \"h3\", 8);\n        i0.ɵɵtext(51, \" Percentage of Publications Men-Women / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 14)(53, \"div\", 15)(54, \"div\", 16)(55, \"div\", 17);\n        i0.ɵɵelement(56, \"div\", 18);\n        i0.ɵɵtext(57, \" Men \");\n        i0.ɵɵelement(58, \"div\", 19);\n        i0.ɵɵtext(59, \" Women \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"canvas\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(61, \"div\", 21)(62, \"div\", 22);\n        i0.ɵɵelement(63, \"canvas\", 23);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(64, \"hr\", 5);\n        i0.ɵɵelementStart(65, \"h3\");\n        i0.ɵɵtext(66, \" Percentage of publications by Country / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"div\", 0)(68, \"div\", 1)(69, \"div\", 2);\n        i0.ɵɵelement(70, \"canvas\", 24);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(71, \"hr\", 5);\n        i0.ɵɵelementStart(72, \"h3\", 8);\n        i0.ɵɵtext(73, \"Most frequent Bigrams and Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"div\", 9)(75, \"div\", 10)(76, \"table\", 25)(77, \"thead\")(78, \"tr\")(79, \"th\");\n        i0.ɵɵtext(80, \"Bigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"th\");\n        i0.ɵɵtext(82, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"th\");\n        i0.ɵɵtext(84, \"First \");\n        i0.ɵɵelement(85, \"br\");\n        i0.ɵɵtext(86, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"th\");\n        i0.ɵɵtext(88, \"Recent \");\n        i0.ɵɵelement(89, \"br\");\n        i0.ɵɵtext(90, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(91, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(92, \"div\", 12);\n        i0.ɵɵelementStart(93, \"div\", 10)(94, \"table\", 26)(95, \"thead\")(96, \"tr\")(97, \"th\");\n        i0.ɵɵtext(98, \"Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(99, \"th\");\n        i0.ɵɵtext(100, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(101, \"th\");\n        i0.ɵɵtext(102, \"First \");\n        i0.ɵɵelement(103, \"br\");\n        i0.ɵɵtext(104, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"th\");\n        i0.ɵɵtext(106, \"Recent \");\n        i0.ɵɵelement(107, \"br\");\n        i0.ɵɵtext(108, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(109, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(110, \"hr\", 5);\n        i0.ɵɵelementStart(111, \"h3\", 8);\n        i0.ɵɵtext(112, \"Frequent terms from all titles of papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(113, \"div\", 27);\n        i0.ɵɵelement(114, \"angular-tag-cloud\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(115, \"hr\", 5);\n        i0.ɵɵelementStart(116, \"h3\", 8);\n        i0.ɵɵtext(117, \"Most prolific authors according to their number of publications accumulated by decade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"div\", 29)(119, \"div\", 10)(120, \"table\", 30)(121, \"thead\")(122, \"tr\")(123, \"th\", 31);\n        i0.ɵɵtext(124, \" (a) 1989-1999 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(125, \"hr\");\n        i0.ɵɵelementStart(126, \"tr\")(127, \"th\");\n        i0.ɵɵtext(128, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(129, \"th\");\n        i0.ɵɵtext(130, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(131, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(132, \"div\", 12);\n        i0.ɵɵelementStart(133, \"div\", 10)(134, \"table\", 32)(135, \"thead\")(136, \"tr\")(137, \"th\", 31);\n        i0.ɵɵtext(138, \" (b) 1999-2009 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(139, \"hr\");\n        i0.ɵɵelementStart(140, \"tr\")(141, \"th\");\n        i0.ɵɵtext(142, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(143, \"th\");\n        i0.ɵɵtext(144, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(145, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(146, \"div\", 12);\n        i0.ɵɵelementStart(147, \"div\", 10)(148, \"table\", 33)(149, \"thead\")(150, \"tr\")(151, \"th\", 31);\n        i0.ɵɵtext(152, \" (a) 2009-2019 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(153, \"hr\");\n        i0.ɵɵelementStart(154, \"tr\")(155, \"th\");\n        i0.ɵɵtext(156, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(157, \"th\");\n        i0.ɵɵtext(158, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(159, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(160, \"div\", 12);\n        i0.ɵɵelementStart(161, \"div\", 10)(162, \"table\", 34)(163, \"thead\")(164, \"tr\")(165, \"th\", 31);\n        i0.ɵɵtext(166, \" (a) 2019-2024 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(167, \"hr\");\n        i0.ɵɵelementStart(168, \"tr\")(169, \"th\");\n        i0.ɵɵtext(170, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(171, \"th\");\n        i0.ɵɵtext(172, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(173, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(174, \"hr\", 35);\n        i0.ɵɵelementStart(175, \"h3\");\n        i0.ɵɵtext(176, \"Authors with their first and most recent year of publication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(177, \"div\", 29)(178, \"div\", 10)(179, \"table\", 36)(180, \"thead\")(181, \"tr\")(182, \"th\");\n        i0.ɵɵtext(183, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(184, \"th\");\n        i0.ɵɵtext(185, \"Degree\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(186, \"th\");\n        i0.ɵɵtext(187, \"First \");\n        i0.ɵɵelement(188, \"br\");\n        i0.ɵɵtext(189, \" year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(190, \"th\");\n        i0.ɵɵtext(191, \"Recent \");\n        i0.ɵɵelement(192, \"br\");\n        i0.ɵɵtext(193, \" year\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(194, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(195, \"hr\", 35);\n        i0.ɵɵelementStart(196, \"div\", 29)(197, \"div\", 10)(198, \"table\", 37)(199, \"thead\")(200, \"tr\")(201, \"th\");\n        i0.ɵɵtext(202, \"Institution\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(203, \"th\");\n        i0.ɵɵtext(204, \"Number of Authors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(205, \"th\");\n        i0.ɵɵtext(206, \"Country\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(207, \"tbody\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(114);\n        i0.ɵɵproperty(\"config\", ctx.options)(\"data\", ctx.cloudData);\n      }\n    },\n    dependencies: [i4.TagCloudComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 30px;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 20px;\\n  margin-bottom: 10px;\\n}\\n\\n.flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-container2[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.graph-bars[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.graph-bars2[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container1[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 91%;\\n}\\n\\n.canvas-container2[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 96%;\\n}\\n\\n.legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  font-size: 18px;\\n  margin-bottom: 20px;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 95%;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 100%; \\n\\n  height: auto;\\n  display: block;\\n}\\n\\n.line3[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  background-color: rgb(0, 22, 68);\\n}\\n\\n.container-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n  overflow: auto;\\n}\\n\\n.container-table2[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  display: flex;\\n  margin-right: 100px;\\n}\\n\\n.linev[_ngcontent-%COMP%] {\\n  border-right: 1px solid rgb(0, 22, 68);\\n  margin-right: 45px;\\n  margin-left: 20px;\\n}\\n\\n.tabla[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  vertical-align: middle;\\n  text-align: center;\\n  vertical-align: center;\\n  font-size: 20px;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  min-width: 40px;\\n  min-height: 1px;\\n  margin-right: 5px;\\n}\\n\\n.especial[_ngcontent-%COMP%] {\\n  margin-bottom: 40px;\\n}\\n\\n#tablaInstitution[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n  padding-left: 120px; \\n\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(2), #degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n  padding-left: 60px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(4) {\\n  padding-left: 90px;\\n}\\n\\n.hombres[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 87, 51);\\n}\\n\\n.mujeres[_ngcontent-%COMP%] {\\n  background-color: rgb(51, 153, 255);\\n  margin-left: 20PX;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  .legend[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    font-size: 10px;\\n    margin-bottom: 20px;\\n  }\\n  .container-table[_ngcontent-%COMP%] {\\n    flex-direction: column; \\n\\n  }\\n  .container-table2[_ngcontent-%COMP%] {\\n    flex-direction: column; \\n\\n  }\\n  .tabla[_ngcontent-%COMP%] {\\n    border-right: none; \\n\\n    padding-right: 0; \\n\\n    padding-bottom: 20px; \\n\\n  }\\n  #tablaInstitution[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px; \\n\\n  }\\n  #tablaInstitution[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px; \\n\\n  }\\n}\\n.conceptual[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 200px;\\n}\\n\\n.aparte[_ngcontent-%COMP%] {\\n  margin-top: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXN0YWRpc3RpY2FzL3N0YXRpc3RpY3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBSWhCO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0FBRkY7O0FBS0E7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUZGOztBQUtBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FBRkY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFGRjs7QUFLQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUZGOztBQUtBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBRkY7O0FBS0E7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBRkY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUFGRjs7QUFNQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUhGOztBQU1BO0VBQ0UsZ0NBQUE7RUFDQSxhQUFBO0VBQ0EsVUFBQTtBQUhGOztBQU1BO0VBQ0UsZUFBQSxFQUFBLGlDQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFIRjs7QUFNQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7QUFIRjs7QUFNQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQ0FBQTtBQUhGOztBQU1BO0VBQ0UsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7QUFIRjs7QUFNQTtFQUNFLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBSEY7O0FBTUE7RUFDRSxzQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFIRjs7QUFPQTtFQUNFLGtCQUFBO0FBSkY7O0FBUUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtBQUxGOztBQVFBO0VBQ0UsZUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQUxGOztBQVFBO0VBQ0UsbUJBQUE7QUFMRjs7QUFRQTtFQUNFLG1CQUFBLEVBQUEsa0RBQUE7QUFMRjs7QUFRQTs7RUFFRSxrQkFBQTtBQUxGOztBQU9BO0VBQ0Usa0JBQUE7QUFKRjs7QUFPQTtFQUNFLGtDQUFBO0FBSkY7O0FBT0E7RUFDRSxtQ0FBQTtFQUNBLGlCQUFBO0FBSkY7O0FBUUE7RUFFRTtJQUNFLGFBQUE7RUFORjtFQVNBO0lBQ0UsYUFBQTtJQUNBLHVCQUFBO0lBQ0EsZUFBQTtJQUNBLG1CQUFBO0VBUEY7RUFTQTtJQUNFLHNCQUFBLEVBQUEsaUVBQUE7RUFQRjtFQVNBO0lBQ0Usc0JBQUEsRUFBQSxpRUFBQTtFQVBGO0VBU0E7SUFDRSxrQkFBQSxFQUFBLG1EQUFBO0lBQ0EsZ0JBQUEsRUFBQSxxREFBQTtJQUNBLG9CQUFBLEVBQUEsMERBQUE7RUFQRjtFQVNBO0lBQ0UsaUJBQUEsRUFBQSxrREFBQTtFQVBGO0VBU0E7SUFDRSxpQkFBQSxFQUFBLGtEQUFBO0VBUEY7QUFDRjtBQVdBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0FBVEY7O0FBY0E7RUFDRSxpQkFBQTtBQVhGIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcblxufVxuXG5oMntcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDMwcHg7XG59XG5cbmgzIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5mbGV4LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLmZsZXgtY29udGFpbmVyMiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLmdyYXBoLWJhcnN7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5ncmFwaC1iYXJzMntcbiAgcGFkZGluZzogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLmNhbnZhcy1jb250YWluZXIxIHtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiKDAsIDIyLCA2OCk7IFxuICBwYWRkaW5nOiAyMHB4O1xuICB3aWR0aDogOTElO1xufVxuXG4uY2FudmFzLWNvbnRhaW5lcjIge1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiA5NiU7XG59XG5cbi5sZWdlbmR7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmb250LXNpemU6IDE4cHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cblxuLmZsZXgtaXRlbSB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5jYW52YXMtY29udGFpbmVyIHtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiKDAsIDIyLCA2OCk7IFxuICBwYWRkaW5nOiAyMHB4O1xuICB3aWR0aDogOTUlO1xufVxuXG5jYW52YXMge1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIEhhY2UgbGFzIGdyw4PCoWZpY2FzIHJlc3BvbnNpdmUgKi9cbiAgaGVpZ2h0OiBhdXRvOyBcbiAgZGlzcGxheTogYmxvY2s7IFxufVxuXG4ubGluZTN7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cbi5saW5le1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMjIsIDY4KTtcbn1cblxuLmNvbnRhaW5lci10YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uY29udGFpbmVyLXRhYmxlMiB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luLXJpZ2h0OiAxMDBweDtcbn1cblxuLmxpbmV2e1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIG1hcmdpbi1yaWdodDogNDVweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cblxuLnRhYmxhe1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG5cbn1cblxudGQsIHRoIHtcbiAgcGFkZGluZzogMjBweDtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICB2ZXJ0aWNhbC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDIwcHg7XG59XG5cbmRpdiB7XG4gIG1pbi13aWR0aDogNDBweDtcbiAgbWluLWhlaWdodDogMXB4O1xuICBtYXJnaW4tcmlnaHQ6IDVweDtcbn1cblxuLmVzcGVjaWFse1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuXG4jdGFibGFJbnN0aXR1dGlvbiB0aDpudGgtY2hpbGQoMyl7XG4gIHBhZGRpbmctbGVmdDogMTIwcHg7IC8qIEFqdXN0YSBlbCB2YWxvciBkZSBww4PCrXhlbGVzIHNlZ8ODwrpuIGxvIG5lY2VzaXRlcyAqL1xufVxuXG4jZGVncmVlIHRoOm50aC1jaGlsZCgyKSxcbiNkZWdyZWUgdGg6bnRoLWNoaWxkKDMpe1xuICBwYWRkaW5nLWxlZnQ6IDYwcHg7XG59XG4jZGVncmVlIHRoOm50aC1jaGlsZCg0KSB7XG4gIHBhZGRpbmctbGVmdDogOTBweDtcbn1cblxuLmhvbWJyZXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCA4NywgNTEpO1xuICBcbn1cbi5tdWplcmVzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUxLCAxNTMsIDI1NSk7XG4gIG1hcmdpbi1sZWZ0OiAyMFBYO1xufVxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG5cbiAgdGQsIHRoIHtcbiAgICBwYWRkaW5nOiAxMHB4OyBcbiAgfVxuXG4gIC5sZWdlbmR7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuICAuY29udGFpbmVyLXRhYmxlIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyAvKiBBcGlsYSBsYXMgdGFibGFzIHVuYSBlbmNpbWEgZGUgbGEgb3RyYSBlbiBwYW50YWxsYXMgcGVxdWXDg8KxYXMgKi9cbiAgfVxuICAuY29udGFpbmVyLXRhYmxlMiB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgLyogQXBpbGEgbGFzIHRhYmxhcyB1bmEgZW5jaW1hIGRlIGxhIG90cmEgZW4gcGFudGFsbGFzIHBlcXVlw4PCsWFzICovXG4gIH1cbiAgLnRhYmxhIHtcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7IC8qIEVsaW1pbmEgZWwgYm9yZGUgZGVyZWNobyBlbiBwYW50YWxsYXMgcGVxdWXDg8KxYXMgKi9cbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyAvKiBFbGltaW5hIGVsIHBhZGRpbmcgZGVyZWNobyBlbiBwYW50YWxsYXMgcGVxdWXDg8KxYXMgKi9cbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsgLyogQWdyZWdhIGVzcGFjaW8gZW50cmUgbGFzIHRhYmxhcyBlbiBwYW50YWxsYXMgcGVxdWXDg8KxYXMgKi9cbiAgfVxuICAjdGFibGFJbnN0aXR1dGlvbiB0aDpudGgtY2hpbGQoMyl7XG4gICAgcGFkZGluZy1sZWZ0OiAwcHg7IC8qIEFqdXN0YSBlbCB2YWxvciBkZSBww4PCrXhlbGVzIHNlZ8ODwrpuIGxvIG5lY2VzaXRlcyAqL1xuICB9XG4gICN0YWJsYUluc3RpdHV0aW9uIHRkOm50aC1jaGlsZCgzKXtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDsgLyogQWp1c3RhIGVsIHZhbG9yIGRlIHDDg8KteGVsZXMgc2Vnw4PCum4gbG8gbmVjZXNpdGVzICovXG4gIH1cbiAgXG59XG5cbi5jb25jZXB0dWFsIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IFxuICBoZWlnaHQ6IDIwMHB4OyBcbn1cblxuXG5cbi5hcGFydGV7XG4gIG1hcmdpbi10b3A6IDUwMHB4O1xufVxuXG5cblxuXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","singular","register","StatisticsComponent","constructor","apiService","selectionService","http","selectedTitles","selectedYears","conferenceOption","venueName","papers","collaborations","singleAuthor","statistics","researchers","researchers2","papersWithAuthors","decadeStats","commonNames","options","width","height","overflow","realignOnResize","strict","step","cloudData","ngOnInit","loadCommonNames","main","ngAfterViewInit","waitResearcherNoEmpty","_this","_asyncToGenerator","length","Promise","resolve","setTimeout","getSchools","subscribe","next","response","table","document","querySelector","HTMLElement","forEach","School","NumberOfAuthors","Country","row","createElement","innerHTML","appendChild","error","console","getResearchersConference","statsResearchers","combineAndShowData","years","numResearchers","getResearchersJournals","researchersConference","researchersJournals","lineChart","destroy","generarGrafico3","getPapers","statsPapers","numPapers","getCollaborations","statsColaboraciones","densidades","waitAuthorsWithPapersNoEmpty","_this2","waitSingleAuthorsNoEmpty","_this3","getAuthorsPapers","_this4","_ref","statsSingleAuthor","generarGraficoBarras","porcentajes","_x","apply","arguments","getDistributions","labels","authorsByPaper","map","numAuthors","filter","paper","allPapers","reduce","all","papersByAuthor","numPubs","numPublications","allAuthors","authorsTable","papersTable","amount","index","percentage","toFixed","worth","toString","obtenerDatosDemograficos","datasets","researcher","name","properties","split","includes","Array","isArray","datasetByYear","year","info","genero","frecuencias","frec_paises","flat","statsGenero","statsGeografia","generateNGrams","titles","n","ngrams","title","words","toLowerCase","i","push","slice","join","countFrequencies","frequencies","Map","ngram","count","get","set","clearTitle","stopwords","word","replace","wordsNoRepeat","singularWords","filteredWords","newTitle","getTopN","sortedFrequencies","entries","sort","a","b","getTopicAnalysis","cleanTitles","ipName","parseInt","bigrams","trigrams","bigramFrequencies","trigramFrequencies","top20Bigrams","top20Trigrams","top20BigramsWithYears","top20TrigramsWithYears","table1","table2","minYear","Math","min","maxYear","max","combinedData","maxFrecuencia","minWeight","maxWeight","wordCloudData","item","text","weight","calcularWeight","color","randomColor","generarTablasDecadas2","frecuencia","peso","pesoNormalizado","round","titulo","numResearchersPorAnio","anio","statsInstitutions","colabsXtotal","colab","find","c","numColabs","densidad","dato","author","ipNames","paperIndex","findIndex","authorNames","papersWithOneAuthor","porcentajeByYear","numPapersWithSingleAuthor","porcentaje","mapeoFecha","datasetFiltrado","objeto","Object","keys","fechasUnicas","Set","fecha","objetosFecha","paisMasAlto","frecuenciaMasAlta","pais","total","country","Number","countries","datasetsLabels","datasetsData","generarGraficoMultiple","filterAuthorsByDecade","authors","startYear","endYear","filteredAuthors","authorYears","existingAuthor","filteredAuthor","statsProlificAuthors","startDecade","floor","endDecade","decades","decade","decadeLabel","decadeStartYear","decadeEndYear","decadeAuthors","label","statsProlificAuthors2","topAuthors","tablas","tabla","yearsArray","generarDegreeAnalisis","generarTablasDecadas","decada","autor","idChart","data","type","fill","borderColor","borderWidth","plugins","legend","font","size","family","scales","y","display","lineChart2","lineChart3","datasetsPorGenero","genderKey","existingData","d","datosOrdenados","hombres","mujeres","conteo","organizedYears","conteosHombres","conteosMujeres","generarGraficoCircular","chartId","backgroundColor","getRandomColor","chartConfig","ctx","getElementById","colores","barChart","beginAtZero","r","random","g","colors","responseType","parseCommonNames","lines","dict","currentName","currentData","linea","startsWith","trim","frec_paisesStr","substring","indexOf","lastIndexOf","JSON","parse","_this5","getSelectedTitles","getConferenceOption","getVenueName","_","i0","ɵɵdirectiveInject","i1","ApiService","i2","SelectionService","i3","HttpClient","_2","selectors","viewQuery","StatisticsComponent_Query","rf","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { SelectionService } from '../selection.service';\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport { HttpClient } from '@angular/common/http';\nimport { CloudData, CloudOptions } from 'angular-tag-cloud-module';\nimport { singular } from 'pluralize';\nimport { ChartConfiguration, ChartData, ChartOptions } from 'chart.js';\n\ninterface Author {\n  ipNames: string[];\n  numPublications: number;\n  researcher: string;\n  year: string;\n}\n\ninterface DecadeStats {\n  label: string;\n  startYear: number;\n  endYear: number;\n  authors: Author[];\n}\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss'],\n})\n\nexport class StatisticsComponent implements OnInit, AfterViewInit {\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef;\n\n  selectedTitles: any[] = [];\n  selectedYears: any[] = [];\n  conferenceOption: string = \"\";\n  venueName: any[] = [];\n  papers: any[] = [];\n  collaborations: any[] = [];\n  singleAuthor: any[] = [];\n  statistics: any[] = [];\n  lineChart!: Chart;\n  lineChart2!: Chart;\n  lineChart3!: Chart;\n  barChart!: Chart;\n  researchers: any[] = [];\n  researchers2: any[] = [];\n  papersWithAuthors: any[] = [];\n  decadeStats: any[] = [];\n  commonNames: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n  options: CloudOptions = {\n    // if width is between 0 and 1 it will be set to the width of the upper element multiplied by the value\n    width: 500,\n    // if height is between 0 and 1 it will be set to the height of the upper element multiplied by the value\n    height: 200,\n    overflow: false,\n    realignOnResize: false,\n    strict: false,\n    step: 2,\n  };\n  cloudData: CloudData[] = []\n\n  constructor(\n    private apiService: ApiService,\n    private selectionService: SelectionService,\n    private http: HttpClient\n  ) {}\n\n\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n\n  ngAfterViewInit() {\n    // Este método se ejecutará después de que Angular haya inicializado la vista\n    // Perfe para realizar cualquier manipulación adicional del DOM relacionada con el gráfico\n    // como ajustes de estilo, cambios dinámicos en los datos, etc.\n  }\n\n  async waitResearcherNoEmpty() {\n    while (!this.researchers || this.researchers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getSchools() {\n    this.apiService.getSchools().subscribe({\n      next: (response: any[]) => {\n        this.researchers2 = response;\n        const table = document.querySelector('#tablaInstitution tbody');\n        if (table instanceof HTMLElement) {\n          this.researchers2.forEach(({ School, NumberOfAuthors, Country }) => {\n            const row = document.createElement('tr');\n            row.innerHTML = `\n            <td>${School}</td><td>${NumberOfAuthors}</td><td style=\"padding-left: 100px\">${Country}</td>`;\n      \n            table.appendChild(row);\n          });\n        }\n      },\n      error: (error: any) => {\n        console.error('Error in getSchools:', error);\n      }\n    });\n  }\n\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles).subscribe({\n      next: (response: any) => {\n        this.researchers = response;\n        this.statsResearchers();\n        this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n      },\n      error: (error: any) => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n    if(this.researchers.length < 1){\n      this.apiService.getResearchersJournals(this.selectedTitles).subscribe({\n        next: (response: any) => {\n          this.researchers = response;\n          this.statsResearchers();\n          this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n        },\n        error: (error: any) => {\n          console.error('Error in getResearchersJournals:', error);\n        }\n      });\n    }\n    \n  }\n\n  combineAndShowData(researchersConference: any[], researchersJournals: any[]) {\n    \n    if(this.lineChart){\n      this.lineChart.destroy();\n    }\n  \n    this.generarGrafico3('lineChart1', 'Number of authors', researchersConference, researchersJournals);\n\n  }\n\n  getPapers() {\n    this.apiService.getPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: (response: any) => {\n        \n        this.papers = response;\n        this.statsPapers();\n        this.generarGrafico3('lineChart2', 'Number of papers', this.statistics[1].years, this.statistics[1].numPapers);\n      },\n      error: (error: any) => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: (response: any) => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generarGrafico3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: (error: any) => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n\n  async waitAuthorsWithPapersNoEmpty(){\n    while (!this.papersWithAuthors || this.papersWithAuthors.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitSingleAuthorsNoEmpty(){\n    while (!this.singleAuthor || this.singleAuthor.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getAuthorsPapers() {\n      this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName)\n        .subscribe({\n          next: async (response: any) => {\n            this.singleAuthor = response;\n            this.statsSingleAuthor();\n            this.generarGraficoBarras('barChart1', 'Single Author Papers', this.statistics[4].years, this.statistics[4].porcentajes);          \n          },\n          error: (error: any) => {\n            console.error('Error in getAuthorsPapers:', error);\n          }\n        });\n  }\n\n  /**Function to obtain the distributions of both authors by papers and papers by authors\n   * \n   */\n  getDistributions(){\n    const labels: string[] = ['1', '2', '3', '4', '5 o más'];\n\n    // This represents the number of authors that each paper has.\n    const authorsByPaper: number[] = [1, 2, 3, 4].map((numAuthors) =>\n    this.papersWithAuthors.filter((paper) => paper.numAuthors === numAuthors).length\n    );\n    authorsByPaper[4] = this.papersWithAuthors.filter((paper) => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapers, 0);\n\n    // This represents the number of published papers that each author has.\n    const papersByAuthor: number[] = [1, 2, 3, 4].map((numPubs) =>\n    this.singleAuthor.filter((paper) => paper.numPublications === numPubs).length\n    );\n    papersByAuthor[4] = this.singleAuthor.filter((paper) => paper.numPublications >= 5).length\n    const allAuthors = this.singleAuthor.length;\n\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#autoresTabla tbody');\n    const papersTable = document.querySelector('#papersTabla tbody');\n    \n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n\n  obtenerDatosDemograficos(){\n      const datasets = this.researchers.map(researcher => {\n        let name = researcher.researcher.properties.name.split(' ')[0];\n        if(name.includes(\"-\")){\n          name = name.split('-')[0];\n        }\n        const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      \n        const datasetByYear = years.map((year: any) => {\n          const info = this.commonNames[name];\n          const genero = info ? info.genero : 'Unknown';\n          const frecuencias = info ? info.frec_paises : {};\n      \n          return {\n            year,\n            name,\n            genero,\n            frecuencias\n          };\n        });\n        return datasetByYear;\n      }).flat(); \n\n      this.statsGenero(datasets);\n      this.statsGeografia(datasets);\n  }\n\n  generateNGrams(titles: string[], n: number): string[] {\n    const ngrams: string[] = [];\n    titles.forEach((title) => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  \n  countFrequencies(ngrams: string[]): Map<string, number> {\n    const frequencies = new Map<string, number>();\n    ngrams.forEach((ngram) => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n\n  clearTitle(title: string, stopwords: string[]) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    \n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n  \n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    \n    return newTitle;\n  }\n\n  getTopN(frequencies: Map<string, number>, n: number): [string, number][] {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n\n  getTopicAnalysis(){\n\n      // We require natural to tokenize and remove stopwords, and calculate frequencies\n      const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n\n      const cleanTitles = this.papersWithAuthors.map(paper => {\n        const ipName = this.clearTitle(paper.ipName, stopwords);\n        const year = parseInt(paper.year);\n        return { ipName, year };\n      });\n\n      const bigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 2);\n      const trigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 3);\n\n      const bigramFrequencies = this.countFrequencies(bigrams);\n      const trigramFrequencies = this.countFrequencies(trigrams);\n\n      const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n      const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n\n    \n      const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n    \n      const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n\n      const table1 = document.querySelector('#tablaBigramas tbody');\n      const table2 = document.querySelector('#tablaTrigramas tbody');\n    \n      if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n        top20BigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table1.appendChild(row);\n        });\n      \n        top20TrigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table2.appendChild(row);\n        });\n      }\n\n      const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n      \n      combinedData.sort((a, b) => b.count - a.count);\n\n      const maxFrecuencia = combinedData[0].count;\n      const minWeight = 0;\n      const maxWeight = 20;\n\n\n      const wordCloudData = combinedData.map((item, index) => ({\n        text: item.ngram,\n        weight: this.calcularWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n        color: this.randomColor()\n      }));\n\n      this.cloudData = wordCloudData;\n     \n  }\n\n\n  generarTablasDecadas2() {\n    const table = document.querySelector('#tablaInstitution tbody');\n    if (table instanceof HTMLElement) {\n      this.researchers2.forEach(({ School, NumberOfAuthors, Country }) => {\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${School}</td><td>${NumberOfAuthors}</td><td>${Country}</td>`;\n  \n        table.appendChild(row);\n      });\n    }\n  }\n  \n\n  \n\n  calcularWeight(frecuencia: number, maxFrecuencia: number, minWeight: number, maxWeight: number): number {\n    const peso = frecuencia / maxFrecuencia;\n    const pesoNormalizado = peso * (maxWeight - minWeight) + minWeight;\n    return Math.round(pesoNormalizado);\n  }\n\n  /**\n   * ############################################\n   */\n\n  statsResearchers() {\n    const numResearchers = this.researchers.length;\n    const years = this.selectedTitles.map(titulo => titulo.properties.name);\n    this.selectedYears = years;\n\n    const numResearchersPorAnio = years.map(anio =>\n      this.researchers.filter(researcher => researcher.years.includes(anio)).length\n    );\n    this.statistics[0] = {\n      years: years,\n      numResearchers: numResearchersPorAnio\n    };\n  }\n\n  statsPapers() {\n    const years = this.papers.map(paper => paper.year); // Extraer los años de this.numPapers\n    const numPapers = this.papers.map(paper => paper.numPapers); \n\n    this.statistics[1] = {\n      years: years,\n      numPapers: numPapers\n    };\n  }  \n  \n  statsInstitutions() {\n    const years = this.papers.map(paper => paper.year); \n    // Extraer los años de this.numPapers\n    // const numPapers = this.papers.map(paper => paper.numPapers); \n\n    this.statistics[2] = {\n      years: years,\n      numPapers: years\n    };\n  }\n\n  statsColaboraciones(){    \n    const colabsXtotal = this.papers.map(paper => {\n      const colab = this.collaborations.find(c => c.year === paper.year);\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapers: paper.numPapers\n      };\n    });\n\n    const densidad = colabsXtotal.map(dato => {\n      const { year, numColabs, numPapers } = dato;\n      const densidad = numColabs / numPapers;\n      return { densidad, year };\n    });\n\n    this.statistics[3] = {\n      years: densidad.map(dato => dato.year),\n      densidades: densidad.map(dato => dato.densidad)\n    };\n  }\n\n  statsSingleAuthor() {\n    \n    const papersWithAuthors: { ipName: string, numAuthors: number, authorNames: string[], year: string }[] = [];\n\n    // Mapea todos los researchers, para crear papersWithAuthors, que es un array que tiene el nombre de una publicacion\n    // y los autores que han contribuido él.\n    this.singleAuthor.forEach((author: { ipNames: string[], researcher: string, year: string }) => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n            papersWithAuthors.push({\n              ipName,\n              numAuthors: 1,\n              authorNames: [author.researcher],\n              year: author.year\n            });\n          }\n        });\n    });\n\n    this.papersWithAuthors = papersWithAuthors;\n\n    // Conseguimos todas las entradas cuyo autor sea uno, para las estadisticas\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const porcentaje = (numPapersWithSingleAuthor / numPapers) * 100;\n    \n      return { year, porcentaje };\n    });\n    \n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.porcentaje)\n    };\n  }  \n\n\n \n\n  statsGeografia(datasets: any[]){\n    const mapeoFecha: {[fecha: string]: {[pais: string]: number}} = {};\n    const datasetFiltrado = datasets.filter((objeto: any) => Object.keys(objeto.frecuencias).length > 0);\n    \n    // Obtener todas las fechas únicas\n    const fechasUnicas = [...new Set(datasetFiltrado.map(dato => dato.year))];\n\n    // Iterar sobre las fechas\n    for (const fecha of fechasUnicas) {\n      const objetosFecha = datasetFiltrado.filter(dato => dato.year === fecha);\n\n      // Crear objeto de mapeo para la fecha actual\n      mapeoFecha[fecha] = {};\n  \n    for (const objeto of objetosFecha) {\n      let paisMasAlto = '';\n      let frecuenciaMasAlta = -1;\n\n      for (const pais in objeto.frecuencias) {\n          if (objeto.frecuencias[pais] > frecuenciaMasAlta) {\n            paisMasAlto = pais;\n            frecuenciaMasAlta = objeto.frecuencias[pais];\n          }\n        }\n        if(!(paisMasAlto in mapeoFecha[fecha])){\n          mapeoFecha[fecha][paisMasAlto] = 1;\n        }else{\n          mapeoFecha[fecha][paisMasAlto] = mapeoFecha[fecha][paisMasAlto] + 1;\n        }\n      }\n    }\n\n    // Normalizamos valores según su total\n    for (const year in mapeoFecha) {\n      let total = 0;\n      for (const country in mapeoFecha[year]) {\n        total += mapeoFecha[year][country];\n      }\n      for (const country in mapeoFecha[year]) {\n        mapeoFecha[year][country] = Number((mapeoFecha[year][country]/total).toFixed(4));\n      }\n    }\n\n    const years = Object.keys(mapeoFecha); // Obtener las llaves de los años\n    const countries = Object.keys(mapeoFecha[years[0]]); // Obtener los nombres de los países\n    const datasetsLabels = countries; // Etiquetas de los conjuntos de datos serán los nombres de los países\n\n    // Crear la matriz de datos para los países\n    const datasetsData = countries.map((country) =>\n      years.map((year) => mapeoFecha[year][country])\n    );\n\n    this.generarGraficoMultiple('lineChart5', years, datasetsLabels, datasetsData);\n    \n  }\n\n  filterAuthorsByDecade(authors: Author[], startYear: number, endYear: number): Author[] {\n    const filteredAuthors: Author[] = [];\n  \n    // Recorrer los autores originales\n    authors.forEach((author) => {\n      // Verificar si el autor está dentro de la década especificada\n      const authorYears = author.year.split(\",\").map(Number).filter((year) => year >= startYear && year <= endYear);\n\n      if (authorYears.length > 0) {\n        // Buscar si ya existe un autor fusionado con el mismo nombre y década\n        const existingAuthor = filteredAuthors.find((filteredAuthor) => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Fusionar las entradas del autor existente con las del autor actual\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Agregar el autor actual a la lista de autores filtrados\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n\n    return filteredAuthors;\n  }\n\n  statsProlificAuthors(selectedYears: number[]): DecadeStats[] {\n    // Obtener el rango de años seleccionados por el usuario\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    // Calcular las décadas correspondientes al rango de años seleccionados\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n  \n    // Generar las décadas dentro del rango de años seleccionados\n    const decades: DecadeStats[] = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n  \n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }  \n    // Ordenar los autores por número de publicaciones en cada década\n    decades.forEach((decade) => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20){\n        decade.authors = decade.authors.slice(0, 20); \n      } \n    });\n  \n    // Devolver las décadas con los autores ordenados\n    return decades;\n  }\n\n  statsProlificAuthors2(selectedYears: number[]) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n  \n    const tablas = {\n      'degree': document.querySelector('#degree tbody'),\n    };\n  \n    for (const author of topAuthors) {\n      const tabla = tablas['degree'];\n  \n      if (tabla instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n  \n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n  \n        tabla.appendChild(row);\n      }\n    }\n  }\n  \n\n  generarDegreeAnalisis(years: any[]){\n    \n  }\n\n  generarTablasDecadas(decadeStats: any[]){\n    const tablas: { [key: string]: HTMLElement | null } = {\n      '1990s': document.querySelector('#tabla90 tbody'),\n      '2000s': document.querySelector('#tabla00 tbody'),\n      '2010s': document.querySelector('#tabla10 tbody'),\n      '2020s': document.querySelector('#tabla20 tbody'),\n    };\n    for (const decada of decadeStats) {\n      const tabla = tablas[decada.label];\n  \n      if (tabla instanceof HTMLElement) {\n        decada.authors.slice(0, 20).forEach((autor: { researcher: any; numPublications: any; year: any; }) => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n  \n          tabla.appendChild(row);\n        });\n      }\n    }\n  }\n\n  generarGrafico3(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart==\"lineChart1\"){\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    if(idChart==\"lineChart2\"){\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    if(idChart==\"lineChart3\"){\n      this.lineChart3 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n\n\n   \n\n  }\n\n  statsGenero(datasets: any[]){\n    const datasetsPorGenero: { [genero: string]: { year: string; count: number }[] } = {};\n\n      datasets.forEach((data: { year: any; genero: any; }) => {\n        const { year, genero } = data;\n        \n        let genderKey = '';\n        \n        if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n          genderKey = 'Hombres';\n        } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n          genderKey = 'Mujeres';\n        } else{\n          genderKey = 'Desconocido';\n        }\n        \n        if (!datasetsPorGenero[genderKey]) {\n          datasetsPorGenero[genderKey] = [];\n        }\n        \n        const existingData = datasetsPorGenero[genderKey].find(d => d.year === year);\n        \n        if (existingData) {\n          existingData.count++;\n        } else {\n          datasetsPorGenero[genderKey].push({\n            year,\n            count: 1\n          });\n        }\n      });\n\n      // Crear un objeto para almacenar los datos ordenados\n      const datosOrdenados: { [anio: string]: { hombres: number; mujeres: number; total: number} } = {};\n      const hombres = datasetsPorGenero['Hombres'];\n      const mujeres = datasetsPorGenero['Mujeres'];\n\n      // Ordenar los datos de hombres\n      hombres.forEach(dato => {\n        const anio = dato.year;\n        const conteo = dato.count;\n\n        datosOrdenados[anio] = { hombres: conteo, mujeres: 0, total: conteo };\n      });\n\n      // Ordenar los datos de mujeres y combinarlos con los datos de hombres\n      mujeres.forEach(dato => {\n        const anio = dato.year;\n        const conteo = dato.count;\n\n        if (datosOrdenados[anio]) {\n          datosOrdenados[anio].mujeres = conteo;\n          datosOrdenados[anio].total += conteo;\n        } else {\n          datosOrdenados[anio] = { mujeres: conteo, hombres: 0, total: conteo };\n        }\n      });\n\n\n      // Obtener los años ordenados\n      const organizedYears = Object.keys(datosOrdenados).sort();\n\n\n      const conteosHombres = organizedYears.map(anio => Number((datosOrdenados[anio].hombres/(datosOrdenados[anio].total)).toFixed(4)));\n      const conteosMujeres = organizedYears.map(anio => Number((datosOrdenados[anio].mujeres/(datosOrdenados[anio].total)).toFixed(4)));\n\n      \n      this.generarGraficoCircular('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [conteosHombres, conteosMujeres]);\n      this.generarGraficoMultiple('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [conteosHombres, conteosMujeres]);\n  }\n\n  generarGraficoMultiple(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      borderColor: this.getRandomColor(index),\n    }));\n  \n    const chartConfig: ChartConfiguration<'line'> = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true,\n          },\n        },\n      },\n    };\n  \n    // Crear el gráfico\n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generarGraficoCircular(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const colores = ['#FF5733', '#3399FF'];\n\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colores[index],  // Cambia la opacidad a un valor más alto\n      borderColor: 'black',\n    }));\n  \n    const chartConfig: ChartConfiguration<'pie'> = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n      },\n    };\n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n\n  \n\n}\n\n  generarGraficoBarras(idChart: string, label: string, labels: any[], data: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }  \n\n  randomColor(){\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n\n  getRandomColor(index: number) {\n    let colors: Record<number, string> = {\n      0: \"rgba(75, 192, 192, 1)\",\n      1: \"rgba(192, 75, 75, 1)\",\n      2: \"rgba(98, 192, 75, 1)\", \n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n\n    return colors[index];\n  }\n\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', { responseType: 'text' }).subscribe(\n      (data: string) => {\n        this.commonNames = this.parseCommonNames(data);\n      },\n      (error: any) => {\n        console.error('Error al cargar los datos:', error);\n      }\n    );\n  }\n\n  parseCommonNames(data: string) {\n\n    const lines = data.split('\\n');\n    const dict: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n    let currentName = '';\n    let currentData: { frec_paises: { [key: string]: number }, genero: string } = {\n      frec_paises: {},\n      genero: ''\n    };\n  \n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = { frec_paises: {}, genero: '' };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n\n  async main(){\n    try {\n      this.selectedTitles = this.selectionService.getSelectedTitles();\n      this.conferenceOption = this.selectionService.getConferenceOption();\n      this.venueName = this.selectionService.getVenueName();\n\n      this.getPapers();\n      this.getCollaborations();\n      this.getAuthorsPapers();\n      this.getResearchersConference();\n      this.getSchools();\n      this.generarTablasDecadas2();\n\n      if(this.researchers.length == 0){\n        await this.waitResearcherNoEmpty();\n        this.obtenerDatosDemograficos();\n      } else{\n        this.obtenerDatosDemograficos();\n      }      \n\n      if(this.papersWithAuthors.length == 0){\n        await this.waitAuthorsWithPapersNoEmpty();\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }else{\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }\n      \n      if(this.singleAuthor.length == 0){\n        await this.waitSingleAuthorsNoEmpty();\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generarTablasDecadas(this.decadeStats)\n      }else{\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generarTablasDecadas(this.decadeStats)\n      }\n      this.statsProlificAuthors2(this.selectedYears);\n \n\n  } catch (error) {\n    console.error('Error al obtener los datos:', error);\n  }\n  }\n\n}","<div>\n  <h2>Statistics</h2>\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Authors by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart1\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Papers by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart2\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Density evolution over the years</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart3\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Percentage of single-author papers per year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChart1\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"especial\">Distributions of authors per paper and of papers per author</h3>\n  <div class=\"container-table\">\n    <div class=\"tabla\">\n      <table id=\"autoresTabla\">\n        <thead>\n          <tr>\n            <th>Author</th>\n            <th>Papers (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"tabla\">\n      <table id=\"papersTabla\">\n        <thead>\n          <tr>\n            <th>Papers</th>\n            <th>Author (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"especial\"> Percentage of Publications Men-Women / Year</h3>\n  <div class=\"flex-container2\">\n\n    <div class=\"graph-bars\">\n\n        <div class=\"canvas-container1\">\n          <div class=\"legend\">\n            <div class=\"hombres\"></div> Men\n            <div class=\"mujeres\"></div> Women\n          </div>\n          <canvas class=\"circular\" id=\"lineChart4\"></canvas>\n        </div>\n        \n    </div>\n\n    <div class=\"graph-bars2\">\n      <div class=\"canvas-container2\">\n        <canvas id=\"lineChart8\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3> Percentage of publications by Country / Year</h3>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\"> \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart5\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"especial\">Most frequent Bigrams and Trigrams</h3>\n  <div class=\"container-table\">\n    <div class=\"tabla\">\n        <table id=\"tablaBigramas\">\n          <thead>\n            <tr>\n              <th>Bigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"tabla\">\n        <table id=\"tablaTrigramas\">\n          <thead>\n            <tr>\n              <th>Trigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"especial\">Frequent terms from all titles of papers</h3>\n  <div class=\"conceptual\">\n    <angular-tag-cloud [config]=\"options\" [data]=\"cloudData\"></angular-tag-cloud>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"especial\">Most prolific authors according to their number of publications accumulated by decade</h3>\n  <div class=\"container-table2\">\n    <div class=\"tabla\">\n        <table id=\"tabla90\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (a) 1989-1999\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"tabla\">\n        <table id=\"tabla00\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (b) 1999-2009\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"tabla\">\n      <table id=\"tabla10\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2009-2019\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n  </div>\n  <div class=\"linev\"></div>\n  <div class=\"tabla\">\n      <table id=\"tabla20\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2019-2024\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <h3>Authors with their first and most recent year of publication</h3>\n  <div class=\"container-table2\">\n    <div class=\"tabla\">\n        <table id=\"degree\">\n          <thead>\n            <tr>\n              <th>Author</th>\n              <th>Degree</th>\n              <th>First <br> year</th>\n              <th>Recent <br> year</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <div class=\"container-table2\">\n    <div class=\"tabla\">\n      <table id=\"tablaInstitution\">\n        <thead>\n          <tr>\n            <th>Institution</th>\n            <th>Number of Authors</th>\n            <th>Country</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n\n\n\n  \n\n  \n  \n</div>\n\n\n\n\n\n \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}