{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { map, startWith } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nlet HomeComponent = class HomeComponent {\n  constructor(apiService, router, seleccionService, modalService) {\n    this.apiService = apiService;\n    this.router = router;\n    this.seleccionService = seleccionService;\n    this.modalService = modalService;\n    // Propiedades\n    this.info = 'Home class';\n    this.filtros = '';\n    this.filtrosBOX = '';\n    this.filtrosList = [];\n    this.sugerenciasVenues = [];\n    this.publicaciones = [];\n    this.resultadosFiltrados = [];\n    this.titulosFiltrados = [];\n    this.etiquetas = []; // Lista de etiquetas posibles para filtrar \n    this.seleccionarTodos = false;\n    this.selccionarDecadas = false;\n    this.selccionarDecadas2 = false;\n    this.selccionarDecadas3 = false;\n    this.selccionarDecadas4 = false;\n    this.conferenceOption = \"main\";\n    this.count = 0;\n    this.mostrarAnios = false;\n    this.mostrarDecadas = false;\n    this.selectedOption = '';\n    this.showNewTabContent = false;\n    this.showModal = false;\n    this.modalText = '';\n    this.showButtons = false;\n    this.showAppend = false;\n    this.control = new FormControl();\n  }\n  ngOnInit() {\n    this.filVenues = this.control.valueChanges.pipe(startWith(''), map(val => this.sugerenciasVenues));\n  }\n  buscarVenues(term) {\n    this.apiService.buscarVenues(term).subscribe({\n      next: response => {\n        this.sugerenciasVenues = response;\n      },\n      error: error => {\n        console.error('Error al obtener sugerencias de venues:', error);\n      }\n    });\n  }\n  _filter(val) {\n    const formatVal = val.toLocaleLowerCase();\n    return this.sugerenciasVenues.filter(sugerencia => sugerencia.toLocaleLowerCase().indexOf(formatVal) === 0);\n  }\n  completarTexto(sugerencia) {\n    this.filtrosBOX = sugerencia;\n  }\n  openModal(template) {\n    this.modalRef = this.modalService.show(template);\n  }\n  closeModal() {\n    this.modalRef?.hide();\n  }\n  append(sugerencia) {\n    if (sugerencia.trim() !== '') {\n      const conferencia = sugerencia.trim();\n      // Realiza la verificación específica para la conferencia agregada\n      this.apiService.obtenerNodosFiltradosConference([conferencia]).subscribe({\n        next: response => {\n          if (response.length !== 0) {\n            this.noResultsFoundConference = false;\n            // La conferencia se encontró en los resultados, agrega a la lista\n            if (!this.filtrosList.includes(conferencia)) {\n              this.filtrosList.push(conferencia);\n              const filtrosComoString = this.filtrosList.join(','); // Convierte la lista a cadena\n              this.filtros = filtrosComoString; // Actualiza el valor de filtros como una cadena\n            }\n          } else {\n            // La conferencia no se encontró en los resultados, muestra el mensaje de error\n            this.noResultsFoundConference = true;\n          }\n        },\n        error: error => {\n          console.error('Error al obtener los resultados filtrados:', error);\n        },\n        complete: () => {\n          this.filtrosBOX = \"\"; // Limpiar la entrada de texto\n          this.showAppend = true;\n        }\n      });\n    }\n  }\n  eliminarFiltro(filtro) {\n    const indice = this.filtrosList.indexOf(filtro);\n    if (indice !== -1) {\n      this.filtrosList.splice(indice, 1); // Elimina el filtro de la lista\n      const filtrosComoString = this.filtrosList.join(',');\n      this.filtros = filtrosComoString;\n    }\n  }\n  filter2() {\n    this.append(this.filtrosBOX);\n  }\n  execFunctionsYear() {\n    this.showButtons = true;\n    this.clear();\n    this.obtenerNodosFiltradosJournal();\n    this.obtenerNodosFiltradosConference();\n    this.toggleYears();\n  }\n  execFunctionsDecades() {\n    this.showButtons = true;\n    this.clear();\n    this.obtenerNodosFiltradosJournal();\n    this.obtenerNodosFiltradosConference();\n    this.toggleDecades();\n  }\n  toggleYears() {\n    this.mostrarAnios = !this.mostrarAnios;\n    if (this.mostrarDecadas == true) {\n      this.mostrarDecadas = false;\n    }\n  }\n  toggleDecades() {\n    this.mostrarDecadas = !this.mostrarDecadas;\n    if (this.mostrarAnios == true) {\n      this.mostrarAnios = false;\n    }\n  }\n  clear() {\n    this.titulosFiltrados = [];\n  }\n  clear2() {\n    this.titulosFiltrados = [];\n    this.showButtons = false;\n  }\n  handleSelection() {\n    // Lógica para manejar la opción seleccionada\n    if (this.conferenceOption === 'mainConference') {\n      this.conferenceOption = \"main\";\n    } else if (this.conferenceOption === 'mainAndWorkshops') {\n      this.conferenceOption = \"all\";\n    }\n    this.seleccionService.marcarOpcionConferencia(this.conferenceOption);\n  }\n  obtenerNodosFiltradosConference() {\n    this.apiService.obtenerNodosFiltradosConference(this.filtrosList).subscribe({\n      next: response => {\n        // this.resultadosFiltrados = response.map(item => JSON.stringify(item));\n        this.resultadosFiltrados = response.map(item => item);\n        if (this.titulosFiltrados.length < 1) {\n          this.titulosFiltrados = Object.values(response.reduce((obj, item) => {\n            const yearNode = item.properties;\n            obj[yearNode.name] = {\n              title: yearNode.name,\n              pr_objeto: item,\n              selected: false\n            };\n            return obj;\n          }, {}));\n          if (this.resultadosFiltrados.length === 0) {\n            this.noResultsFoundConference = true;\n          } else {\n            this.noResultsFoundConference = false;\n          }\n          console.log(this.noResultsFoundConference);\n        }\n      },\n      error: error => {\n        console.error('Error al obtener los resultados filtrados:', error);\n      }\n    });\n  }\n  obtenerNodosFiltradosJournal() {\n    this.apiService.obtenerNodosFiltradosJournal(this.filtros).subscribe({\n      next: response => {\n        // this.resultadosFiltrados = response.map(item => JSON.stringify(item));\n        this.resultadosFiltrados = response.map(item => item);\n        if (this.titulosFiltrados.length < 1) {\n          this.titulosFiltrados = Object.values(response.reduce((obj, item) => {\n            const yearNode = item.properties;\n            obj[yearNode.name] = {\n              title: yearNode.name,\n              pr_objeto: item,\n              selected: false\n            };\n            return obj;\n          }, {}));\n          if (this.resultadosFiltrados.length === 0) {\n            this.noResultsFoundJournal = true;\n          } else {\n            this.noResultsFoundJournal = false;\n          }\n          console.log(this.noResultsFoundJournal);\n        }\n      },\n      error: error => {\n        console.error('Error al obtener los resultados filtrados:', error);\n      }\n    });\n  }\n  hayTitulosSeleccionados() {\n    let seleccionados = false;\n    if (this.titulosFiltrados.some(titulo => titulo.selected)) {\n      seleccionados = true;\n    }\n    return seleccionados;\n  }\n  seleccionarTodosChanged() {\n    if (this.titulosFiltrados.length > 0) {\n      for (let titulo of this.titulosFiltrados) {\n        titulo.selected = this.seleccionarTodos;\n      }\n    }\n  }\n  seleccionarDecadas() {\n    for (let titulo of this.titulosFiltrados) {\n      if (titulo.title == \"1989\" || titulo.title == \"1990\" || titulo.title == \"1991\" || titulo.title == \"1992\" || titulo.title == \"1993\" || titulo.title == \"1994\" || titulo.title == \"1995\" || titulo.title == \"1996\" || titulo.title == \"1997\" || titulo.title == \"1998\" || titulo.title == \"1999\") {\n        titulo.selected = this.selccionarDecadas;\n      }\n    }\n  }\n  seleccionarDecadas2() {\n    for (let titulo of this.titulosFiltrados) {\n      if (titulo.title == \"2000\" || titulo.title == \"2001\" || titulo.title == \"2002\" || titulo.title == \"2003\" || titulo.title == \"2004\" || titulo.title == \"2005\" || titulo.title == \"2006\" || titulo.title == \"2007\" || titulo.title == \"2008\" || titulo.title == \"2009\") {\n        titulo.selected = this.selccionarDecadas2;\n      }\n    }\n  }\n  seleccionarDecadas3() {\n    for (let titulo of this.titulosFiltrados) {\n      if (titulo.title == \"2010\" || titulo.title == \"2011\" || titulo.title == \"2012\" || titulo.title == \"2013\" || titulo.title == \"2014\" || titulo.title == \"2015\" || titulo.title == \"2016\" || titulo.title == \"2017\" || titulo.title == \"2018\" || titulo.title == \"2019\") {\n        titulo.selected = this.selccionarDecadas3;\n      }\n    }\n  }\n  seleccionarDecadas4() {\n    for (let titulo of this.titulosFiltrados) {\n      if (titulo.title == \"2020\" || titulo.title == \"2021\" || titulo.title == \"2022\" || titulo.title == \"2023\" || titulo.title == \"2024\") {\n        titulo.selected = this.selccionarDecadas4;\n      }\n    }\n  }\n  tituloChanged() {\n    let todosSeleccionados = true;\n    for (let titulo of this.titulosFiltrados) {\n      if (!titulo.selected) {\n        todosSeleccionados = false;\n        break;\n      }\n    }\n    for (let titulo of this.titulosFiltrados) {\n      if (!titulo.selected) {\n        todosSeleccionados = false;\n        break;\n      }\n    }\n    this.seleccionarTodos = todosSeleccionados;\n  }\n  generarEstadisticas() {\n    // Filtra los títulos seleccionados\n    const titulosSeleccionados = this.titulosFiltrados.filter(titulo => titulo.selected).map(titulo => titulo.pr_objeto);\n    // Almacena los títulos seleccionados en el servicio de selección\n    this.seleccionService.agregarTitulos(titulosSeleccionados);\n    const filtrosSeparados = this.filtros.split(',').map(filter => filter.trim());\n    this.seleccionService.marcarNombreVenue(filtrosSeparados);\n    console.log(\"hgeSEFWWSwgWE::::::\" + this.filtros);\n    // Redirige a la página de estadísticas\n    this.router.navigateByUrl('/estadisticas');\n  }\n  generarconf() {\n    // Filtra los títulos seleccionados\n    const titulosSeleccionados = this.titulosFiltrados.filter(titulo => titulo.selected).map(titulo => titulo.pr_objeto);\n    // Almacena los títulos seleccionados en el servicio de selección\n    this.seleccionService.agregarTitulos(titulosSeleccionados);\n    const filtrosSeparados = this.filtros.split(',').map(filter => filter.trim());\n    this.seleccionService.marcarNombreVenue(filtrosSeparados);\n    console.log(\"hgeSEFWWSwgWE::::::\" + this.filtros);\n    // Redirige a la página de estadísticas\n    this.router.navigateByUrl('/config');\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"names":["Component","map","startWith","FormControl","HomeComponent","constructor","apiService","router","seleccionService","modalService","info","filtros","filtrosBOX","filtrosList","sugerenciasVenues","publicaciones","resultadosFiltrados","titulosFiltrados","etiquetas","seleccionarTodos","selccionarDecadas","selccionarDecadas2","selccionarDecadas3","selccionarDecadas4","conferenceOption","count","mostrarAnios","mostrarDecadas","selectedOption","showNewTabContent","showModal","modalText","showButtons","showAppend","control","ngOnInit","filVenues","valueChanges","pipe","val","buscarVenues","term","subscribe","next","response","error","console","_filter","formatVal","toLocaleLowerCase","filter","sugerencia","indexOf","completarTexto","openModal","template","modalRef","show","closeModal","hide","append","trim","conferencia","obtenerNodosFiltradosConference","length","noResultsFoundConference","includes","push","filtrosComoString","join","complete","eliminarFiltro","filtro","indice","splice","filter2","execFunctionsYear","clear","obtenerNodosFiltradosJournal","toggleYears","execFunctionsDecades","toggleDecades","clear2","handleSelection","marcarOpcionConferencia","item","Object","values","reduce","obj","yearNode","properties","name","title","pr_objeto","selected","log","noResultsFoundJournal","hayTitulosSeleccionados","seleccionados","some","titulo","seleccionarTodosChanged","seleccionarDecadas","seleccionarDecadas2","seleccionarDecadas3","seleccionarDecadas4","tituloChanged","todosSeleccionados","generarEstadisticas","titulosSeleccionados","agregarTitulos","filtrosSeparados","split","marcarNombreVenue","navigateByUrl","generarconf","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/home/home.component.ts"],"sourcesContent":["import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { ApiService } from '../api.service';\nimport { Observable, Subscription, map, startWith } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { SeleccionService } from '../seleccion.service';\nimport { FormControl } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { ModalModule } from 'ngx-bootstrap/modal';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  // Propiedades\n  info: string = 'Home class';\n  filtros: string = '';\n  filtrosBOX: string = '';\n  filtrosList: string[] = [];\n  sugerenciasVenues: string[] = [];\n\n  publicaciones: string[] = [];\n  resultadosFiltrados: string[] = [];\n  titulosFiltrados: { title: string, pr_objeto: any, selected: boolean }[] = [];\n  etiquetas: string[] = []; // Lista de etiquetas posibles para filtrar \n  seleccionarTodos = false;\n  selccionarDecadas = false;\n  selccionarDecadas2 = false;\n  selccionarDecadas3 = false;\n  selccionarDecadas4 = false;\n  conferenceOption: string = \"main\";\n  count: number = 0;\n  mostrarAnios: boolean = false;\n  mostrarDecadas: boolean = false;\n  selectedOption: string = '';\n  noResultsFoundConference: boolean | undefined;\n  noResultsFoundJournal: boolean | undefined;\n  showNewTabContent: boolean = false;\n  showModal: boolean = false;\n  modalText: string = '';\n  modalRef: BsModalRef | undefined;\n  showButtons = false;\n  showAppend = false;\n  filVenues: Observable<string[]> | undefined;\n  control = new FormControl();\n\n\n  private nodosSubscription: Subscription | undefined;\n  private informacionNodoSubscription: Subscription | undefined;\n\n  constructor(\n    private apiService: ApiService, \n    private router: Router,\n    private seleccionService: SeleccionService,\n    private modalService: BsModalService,\n  ) { }\n  \n  ngOnInit() {\n    this.filVenues = this.control.valueChanges.pipe(\n      startWith(''),\n      map(val => this.sugerenciasVenues)\n    )\n  }\n\n  buscarVenues(term: string): void {\n    this.apiService.buscarVenues(term).subscribe({\n      next: (response: string[]) => {\n        this.sugerenciasVenues = response;\n      },\n      error: (error: any) => {\n        console.error('Error al obtener sugerencias de venues:', error);\n      }\n    });\n  }\n  \n  private _filter(val: string): string[]{\n    const formatVal = val.toLocaleLowerCase();\n\n    return this.sugerenciasVenues.filter( sugerencia => sugerencia.toLocaleLowerCase().indexOf(formatVal)===0)\n  }\n\n  completarTexto(sugerencia: string) {\n    this.filtrosBOX = sugerencia;\n  }\n\n\n  openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template)\n  }\n\n  closeModal() {\n    this.modalRef?.hide();\n  }\n\n  append(sugerencia: string) {\n    if (sugerencia.trim() !== '') {\n      const conferencia = sugerencia.trim();\n      // Realiza la verificación específica para la conferencia agregada\n      this.apiService.obtenerNodosFiltradosConference([conferencia]).subscribe({\n        next: (response: any[]) => {\n          if (response.length !== 0) {\n            this.noResultsFoundConference = false;\n            // La conferencia se encontró en los resultados, agrega a la lista\n            if (!this.filtrosList.includes(conferencia)) {\n              this.filtrosList.push(conferencia);\n              const filtrosComoString = this.filtrosList.join(','); // Convierte la lista a cadena\n              this.filtros = filtrosComoString; // Actualiza el valor de filtros como una cadena\n            }\n          } else {\n            // La conferencia no se encontró en los resultados, muestra el mensaje de error\n            this.noResultsFoundConference = true;\n          }\n        },\n        error: (error: any) => {\n          console.error('Error al obtener los resultados filtrados:', error);\n        },\n        complete: () => {\n          this.filtrosBOX = \"\"; // Limpiar la entrada de texto\n          this.showAppend = true;\n        }\n      });\n    }\n  }\n\n  eliminarFiltro(filtro: string) {\n    const indice = this.filtrosList.indexOf(filtro);\n    if (indice !== -1) {\n      this.filtrosList.splice(indice, 1); // Elimina el filtro de la lista\n      const filtrosComoString = this.filtrosList.join(',');\n      this.filtros = filtrosComoString; \n    }\n  }\n\n\n  filter2(){\n    this.append(this.filtrosBOX)\n  }\n\n  execFunctionsYear(){\n    this.showButtons= true;\n    this.clear()\n    this.obtenerNodosFiltradosJournal();\n    this.obtenerNodosFiltradosConference();\n    this.toggleYears();\n  }\n\n  execFunctionsDecades(){\n    this.showButtons= true;\n    this.clear()\n    this.obtenerNodosFiltradosJournal();\n    this.obtenerNodosFiltradosConference();\n    this.toggleDecades();\n  }\n\n  toggleYears() {\n    this.mostrarAnios = !this.mostrarAnios;\n      if(this.mostrarDecadas == true){\n        this.mostrarDecadas = false;\n      }\n  }\n\n  toggleDecades() {\n    this.mostrarDecadas = !this.mostrarDecadas;\n      if(this.mostrarAnios == true){\n        this.mostrarAnios = false;\n      }\n  }\n\n  clear(){\n    this.titulosFiltrados = [];\n  }\n\n  clear2(){\n    this.titulosFiltrados = [];\n    this.showButtons= false;\n  }\n  \n  handleSelection() {\n    // Lógica para manejar la opción seleccionada\n    if (this.conferenceOption === 'mainConference') {\n      this.conferenceOption = \"main\";\n    } else if (this.conferenceOption === 'mainAndWorkshops') {\n      this.conferenceOption = \"all\";\n    }\n    this.seleccionService.marcarOpcionConferencia(this.conferenceOption);\n  }\n\n  obtenerNodosFiltradosConference() {\n    this.apiService.obtenerNodosFiltradosConference(this.filtrosList).subscribe({\n      next: (response: any[]) => {\n        // this.resultadosFiltrados = response.map(item => JSON.stringify(item));\n        this.resultadosFiltrados = response.map(item => item);\n        if(this.titulosFiltrados.length < 1){\n          this.titulosFiltrados = Object.values(response.reduce((obj, item) => {\n            const yearNode = item.properties;\n            obj[yearNode.name] = {\n              title: yearNode.name,\n              pr_objeto: item,\n              selected: false\n            };\n            return obj;\n          }, {}));\n          if (this.resultadosFiltrados.length === 0) {\n            this.noResultsFoundConference = true;\n          } else {\n            this.noResultsFoundConference = false;\n          }\n          console.log(this.noResultsFoundConference)\n        }\n      },\n      error: (error: any) => {\n        console.error('Error al obtener los resultados filtrados:', error);\n      }\n        \n    });\n  }\n\n  obtenerNodosFiltradosJournal() {\n    this.apiService.obtenerNodosFiltradosJournal(this.filtros).subscribe({\n      next: (response: any[]) => {\n        // this.resultadosFiltrados = response.map(item => JSON.stringify(item));\n        this.resultadosFiltrados = response.map(item => item);\n        \n        if(this.titulosFiltrados.length < 1){\n          this.titulosFiltrados = Object.values(response.reduce((obj, item) => {\n            const yearNode = item.properties;\n            obj[yearNode.name] = {\n              title: yearNode.name,\n              pr_objeto: item,\n              selected: false\n            };\n            return obj;\n          }, {}));\n          if (this.resultadosFiltrados.length === 0) {\n            this.noResultsFoundJournal = true;\n          } else {\n            this.noResultsFoundJournal = false;\n          }\n          console.log(this.noResultsFoundJournal)\n        }\n\n        \n      },\n      error: (error: any) => {\n        console.error('Error al obtener los resultados filtrados:', error);\n      }\n    });\n  }\n\n  hayTitulosSeleccionados(): boolean {\n    let seleccionados = false;\n    if (this.titulosFiltrados.some(titulo => titulo.selected)){\n      seleccionados = true;\n    }\n    return seleccionados;\n  }\n\n  seleccionarTodosChanged() {\n    if (this.titulosFiltrados.length > 0){\n      for (let titulo of this.titulosFiltrados) {\n        titulo.selected = this.seleccionarTodos;\n      }\n    }\n    \n  }\n\n  seleccionarDecadas() {\n    for (let titulo of this.titulosFiltrados) {\n      if (titulo.title == \"1989\" || titulo.title == \"1990\" ||titulo.title == \"1991\" ||titulo.title == \"1992\" ||\n      titulo.title == \"1993\" || titulo.title == \"1994\" ||titulo.title == \"1995\" ||titulo.title == \"1996\" ||\n      titulo.title == \"1997\" || titulo.title == \"1998\" || titulo.title == \"1999\") {\n        titulo.selected = this.selccionarDecadas;\n      } \n    }\n  }\n\n  seleccionarDecadas2() {\n  \n    for (let titulo of this.titulosFiltrados) {\n      if (titulo.title == \"2000\" || titulo.title == \"2001\" ||titulo.title == \"2002\" ||titulo.title == \"2003\" ||\n      titulo.title == \"2004\" || titulo.title == \"2005\" ||titulo.title == \"2006\" ||titulo.title == \"2007\" ||\n      titulo.title == \"2008\" || titulo.title == \"2009\") {\n        titulo.selected = this.selccionarDecadas2;\n      } \n    }\n  }\n\n  seleccionarDecadas3() {\n  \n    for (let titulo of this.titulosFiltrados) {\n      if (titulo.title == \"2010\" ||titulo.title == \"2011\" ||titulo.title == \"2012\" ||\n      titulo.title == \"2013\" || titulo.title == \"2014\" ||titulo.title == \"2015\" ||titulo.title == \"2016\" ||\n      titulo.title == \"2017\" || titulo.title == \"2018\" || titulo.title == \"2019\") {\n        titulo.selected = this.selccionarDecadas3;\n      } \n    }\n  }\n\n  seleccionarDecadas4() {\n  \n    for (let titulo of this.titulosFiltrados) {\n      if (titulo.title == \"2020\" ||titulo.title == \"2021\" ||titulo.title == \"2022\" ||\n      titulo.title == \"2023\" || titulo.title == \"2024\"){\n        titulo.selected = this.selccionarDecadas4;\n      } \n    }\n  }\n\n  tituloChanged() {\n    let todosSeleccionados = true;\n    for (let titulo of this.titulosFiltrados) {\n      if (!titulo.selected) {\n        todosSeleccionados = false;\n        break;\n      }\n    }\n    for (let titulo of this.titulosFiltrados) {\n      if (!titulo.selected) {\n        todosSeleccionados = false;\n        break;\n      }\n    }\n    \n    this.seleccionarTodos = todosSeleccionados;\n  }\n\n\n  generarEstadisticas() {\n    // Filtra los títulos seleccionados\n    const titulosSeleccionados = this.titulosFiltrados\n    .filter(titulo => titulo.selected).map(titulo => titulo.pr_objeto);\n    \n    // Almacena los títulos seleccionados en el servicio de selección\n    this.seleccionService.agregarTitulos(titulosSeleccionados);\n    const filtrosSeparados = this.filtros.split(',').map(filter => filter.trim());\n    this.seleccionService.marcarNombreVenue(filtrosSeparados);\n    console.log(\"hgeSEFWWSwgWE::::::\"+this.filtros)\n\n    // Redirige a la página de estadísticas\n    this.router.navigateByUrl('/estadisticas');\n  }\n\n  generarconf() {\n    // Filtra los títulos seleccionados\n    const titulosSeleccionados = this.titulosFiltrados\n    .filter(titulo => titulo.selected).map(titulo => titulo.pr_objeto);\n    \n    // Almacena los títulos seleccionados en el servicio de selección\n    this.seleccionService.agregarTitulos(titulosSeleccionados);\n    const filtrosSeparados = this.filtros.split(',').map(filter => filter.trim());\n    this.seleccionService.marcarNombreVenue(filtrosSeparados);\n    console.log(\"hgeSEFWWSwgWE::::::\"+this.filtros)\n\n    // Redirige a la página de estadísticas\n    this.router.navigateByUrl('/config');\n  }\n\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}