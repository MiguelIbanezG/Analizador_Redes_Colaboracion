{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class HomeService {\n  constructor() {\n    this.communities = [];\n    this.currentConferences = [];\n  }\n  get Communities() {\n    return this.communities;\n  }\n  set Communities(communities) {\n    this.communities = communities;\n  }\n  get CurrentConferences() {\n    return this.currentConferences;\n  }\n  set CurrentConferences(currentConferences) {\n    this.currentConferences = currentConferences;\n  }\n  static #_ = this.ɵfac = function HomeService_Factory(t) {\n    return new (t || HomeService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HomeService,\n    factory: HomeService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HomeService","constructor","communities","currentConferences","Communities","CurrentConferences","_","_2","factory","ɵfac","providedIn"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/services/home.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeService {\n\n  private communities: { name: string, filtersList: string[], selected: boolean  }[] = [];\n  private currentConferences: string[] = [];\n\n  get Communities() {\n    return this.communities;\n  }\n\n  set Communities( communities: { name: string, filtersList: string[], selected: boolean  }[] ) {\n     this.communities = communities;\n  }\n\n  get CurrentConferences() {\n    return this.currentConferences;\n  }\n\n  set CurrentConferences( currentConferences: string[]) {\n     this.currentConferences = currentConferences;\n  }\n  \n\n\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,WAAW;EAHxBC,YAAA;IAKU,KAAAC,WAAW,GAAkE,EAAE;IAC/E,KAAAC,kBAAkB,GAAa,EAAE;;EAEzC,IAAIC,WAAWA,CAAA;IACb,OAAO,IAAI,CAACF,WAAW;EACzB;EAEA,IAAIE,WAAWA,CAAEF,WAA0E;IACxF,IAAI,CAACA,WAAW,GAAGA,WAAW;EACjC;EAEA,IAAIG,kBAAkBA,CAAA;IACpB,OAAO,IAAI,CAACF,kBAAkB;EAChC;EAEA,IAAIE,kBAAkBA,CAAEF,kBAA4B;IACjD,IAAI,CAACA,kBAAkB,GAAGA,kBAAkB;EAC/C;EAAC,QAAAG,CAAA,G;qBAnBUN,WAAW;EAAA;EAAA,QAAAO,EAAA,G;WAAXP,WAAW;IAAAQ,OAAA,EAAXR,WAAW,CAAAS,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}