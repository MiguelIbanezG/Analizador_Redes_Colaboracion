{"ast":null,"code":"import { DataSet } from 'vis';\nimport * as i0 from \"@angular/core\";\nexport class AppNetworkInitService {\n  getNodes() {\n    const items = Array.from({\n      length: 5\n    }, (x, i) => ++i).map(value => ({\n      id: value,\n      label: `Node ${value}`\n    }));\n    const nodes = new DataSet(items);\n    return nodes;\n  }\n  getEdges() {\n    const edges = new DataSet([{\n      from: 1,\n      to: 3\n    }, {\n      from: 1,\n      to: 2\n    }, {\n      from: 2,\n      to: 4\n    }]);\n    return edges;\n  }\n  static #_ = this.ɵfac = function AppNetworkInitService_Factory(t) {\n    return new (t || AppNetworkInitService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppNetworkInitService,\n    factory: AppNetworkInitService.ɵfac\n  });\n}","map":{"version":3,"names":["DataSet","AppNetworkInitService","getNodes","items","Array","from","length","x","i","map","value","id","label","nodes","getEdges","edges","to","_","_2","factory","ɵfac"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/services/network.init.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Network, DataSet, Options, Data, IdType, Edge } from 'vis';\nimport { Node } from '../models/network.model';\n@Injectable()\nexport class AppNetworkInitService {\n  getNodes(): DataSet<Node> {\n    const items: Node[] = Array.from(\n      { length: 5 },\n      (x: number, i: number) => ++i\n    ).map((value: number) => ({ id: value, label: `Node ${value}` }));\n    const nodes: DataSet<Node> = new DataSet(items);\n\n    return nodes;\n  }\n\n  getEdges(): DataSet<Edge> {\n    const edges: DataSet<Edge> = new DataSet([\n      {\n        from: 1,\n        to: 3,\n      },\n      {\n        from: 1,\n        to: 2,\n      },\n      {\n        from: 2,\n        to: 4,\n      },\n\n    ]);\n    return edges;\n  }\n}\n"],"mappings":"AACA,SAAkBA,OAAO,QAAqC,KAAK;;AAGnE,OAAM,MAAOC,qBAAqB;EAChCC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAWC,KAAK,CAACC,IAAI,CAC9B;MAAEC,MAAM,EAAE;IAAC,CAAE,EACb,CAACC,CAAS,EAAEC,CAAS,KAAK,EAAEA,CAAC,CAC9B,CAACC,GAAG,CAAEC,KAAa,KAAM;MAAEC,EAAE,EAAED,KAAK;MAAEE,KAAK,EAAE,QAAQF,KAAK;IAAE,CAAE,CAAC,CAAC;IACjE,MAAMG,KAAK,GAAkB,IAAIb,OAAO,CAACG,KAAK,CAAC;IAE/C,OAAOU,KAAK;EACd;EAEAC,QAAQA,CAAA;IACN,MAAMC,KAAK,GAAkB,IAAIf,OAAO,CAAC,CACvC;MACEK,IAAI,EAAE,CAAC;MACPW,EAAE,EAAE;KACL,EACD;MACEX,IAAI,EAAE,CAAC;MACPW,EAAE,EAAE;KACL,EACD;MACEX,IAAI,EAAE,CAAC;MACPW,EAAE,EAAE;KACL,CAEF,CAAC;IACF,OAAOD,KAAK;EACd;EAAC,QAAAE,CAAA,G;qBA5BUhB,qBAAqB;EAAA;EAAA,QAAAiB,EAAA,G;WAArBjB,qBAAqB;IAAAkB,OAAA,EAArBlB,qBAAqB,CAAAmB;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}