{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nimport { singular } from 'pluralize';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../api.service\";\nimport * as i2 from \"../selection.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"angular-tag-cloud-module\";\nconst _c0 = [\"chartCanvas\"];\nChart.register(...registerables);\nexport class StatisticsComponent {\n  constructor(apiService, selectionService, http) {\n    this.apiService = apiService;\n    this.selectionService = selectionService;\n    this.http = http;\n    this.selectedTitles = [];\n    this.selectedYears = [];\n    this.conferenceOption = \"\";\n    this.venueName = [];\n    this.papers = [];\n    this.collaborations = [];\n    this.connectedComponents = [];\n    this.singleAuthor = [];\n    this.statistics = [];\n    this.researchers = [];\n    this.researchers2 = [];\n    this.papersWithAuthors = [];\n    this.decadeStats = [];\n    this.commonNames = {};\n    this.options = {\n      // if width is between 0 and 1 it will be set to the width of the upper element multiplied by the value\n      width: 500,\n      // if height is between 0 and 1 it will be set to the height of the upper element multiplied by the value\n      height: 200,\n      overflow: false,\n      realignOnResize: false,\n      strict: false,\n      step: 2\n    };\n    this.cloudData = [];\n  }\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n  ngAfterViewInit() {\n    // Este método se ejecutará después de que Angular haya inicializado la vista\n    // Perfe para realizar cualquier manipulación adicional del DOM relacionada con el gráfico\n    // como ajustes de estilo, cambios dinámicos en los datos, etc.\n  }\n  waitResearcherNoEmpty() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (!_this.researchers || _this.researchers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getSchools() {\n    this.apiService.getSchools().subscribe({\n      next: response => {\n        this.researchers2 = response;\n        const table = document.querySelector('#tableInstitution tbody');\n        if (table instanceof HTMLElement) {\n          this.researchers2.forEach(({\n            School,\n            NumberOfAuthors,\n            Country\n          }) => {\n            const row = document.createElement('tr');\n            row.innerHTML = `\n            <td>${School}</td><td>${NumberOfAuthors}</td><td style=\"padding-left: 100px\">${Country}</td>`;\n            table.appendChild(row);\n          });\n        }\n      },\n      error: error => {\n        console.error('Error in getSchools:', error);\n      }\n    });\n  }\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles).subscribe({\n      next: response => {\n        this.researchers = response;\n        this.statsResearchers();\n        this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n      },\n      error: error => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n    if (this.researchers.length < 1) {\n      this.apiService.getResearchersJournals(this.selectedTitles).subscribe({\n        next: response => {\n          this.researchers = response;\n          this.statsResearchers();\n          this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n        },\n        error: error => {\n          console.error('Error in getResearchersJournals:', error);\n        }\n      });\n    }\n  }\n  combineAndShowData(researchersConference, researchersJournals) {\n    if (this.lineChart) {\n      this.lineChart.destroy();\n    }\n    this.generateChart3('lineChart1', 'Number of authors', researchersConference, researchersJournals);\n  }\n  getPapers() {\n    this.apiService.getPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: response => {\n        this.papers = response;\n        this.statsPapers();\n        this.generateChart3('lineChart2', 'Number of papers', this.statistics[1].years, this.statistics[1].numPapers);\n      },\n      error: error => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: response => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: error => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n  getConnectedComponents() {\n    this.apiService.getConnectedComponents(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        console.log(response);\n        console.log(this.connectedComponents);\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConnectedComponentsByvenue() {\n    this.apiService.getConnectedComponentsByvenue(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        console.log(response);\n        console.log(this.connectedComponents);\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  waitAuthorsWithPapersNoEmpty() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this2.papersWithAuthors || _this2.papersWithAuthors.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitSingleAuthorsNoEmpty() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this3.singleAuthor || _this3.singleAuthor.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getAuthorsPapers() {\n    var _this4 = this;\n    this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          _this4.singleAuthor = response;\n          _this4.statsSingleAuthor();\n          _this4.generateBarChart('barChart1', 'Single Author Papers', _this4.statistics[4].years, _this4.statistics[4].porcentajes);\n        });\n        return function next(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      error: error => {\n        console.error('Error in getAuthorsPapers:', error);\n      }\n    });\n  }\n  /**Function to obtain the distributions of both authors by papers and papers by authors\n   *\n   */\n  getDistributions() {\n    const labels = ['1', '2', '3', '4', '5 o más'];\n    // This represents the number of authors that each paper has.\n    const authorsByPaper = [1, 2, 3, 4].map(numAuthors => this.papersWithAuthors.filter(paper => paper.numAuthors === numAuthors).length);\n    authorsByPaper[4] = this.papersWithAuthors.filter(paper => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapers, 0);\n    // This represents the number of published papers that each author has.\n    const papersByAuthor = [1, 2, 3, 4].map(numPubs => this.singleAuthor.filter(paper => paper.numPublications === numPubs).length);\n    papersByAuthor[4] = this.singleAuthor.filter(paper => paper.numPublications >= 5).length;\n    const allAuthors = this.singleAuthor.length;\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n  getDemographicData() {\n    const datasets = this.researchers.map(researcher => {\n      let name = researcher.researcher.properties.name.split(' ')[0];\n      if (name.includes(\"-\")) {\n        name = name.split('-')[0];\n      }\n      const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      const datasetByYear = years.map(year => {\n        const info = this.commonNames[name];\n        const genero = info ? info.genero : 'Unknown';\n        const frecuencias = info ? info.frec_paises : {};\n        return {\n          year,\n          name,\n          genero,\n          frecuencias\n        };\n      });\n      return datasetByYear;\n    }).flat();\n    this.statsGender(datasets);\n    this.statsGeography(datasets);\n  }\n  generateNGrams(titles, n) {\n    const ngrams = [];\n    titles.forEach(title => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  countFrequencies(ngrams) {\n    const frequencies = new Map();\n    ngrams.forEach(ngram => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n  clearTitle(title, stopwords) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    return newTitle;\n  }\n  getTopN(frequencies, n) {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n  getTopicAnalysis() {\n    // We require natural to tokenize and remove stopwords, and calculate frequencies\n    const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n    const cleanTitles = this.papersWithAuthors.map(paper => {\n      const ipName = this.clearTitle(paper.ipName, stopwords);\n      const year = parseInt(paper.year);\n      return {\n        ipName,\n        year\n      };\n    });\n    const bigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 2);\n    const trigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 3);\n    const bigramFrequencies = this.countFrequencies(bigrams);\n    const trigramFrequencies = this.countFrequencies(trigrams);\n    const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n    const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n    const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const table1 = document.querySelector('#tableBigramas tbody');\n    const table2 = document.querySelector('#tableTrigramas tbody');\n    if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n      top20BigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table1.appendChild(row);\n      });\n      top20TrigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table2.appendChild(row);\n      });\n    }\n    const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n    combinedData.sort((a, b) => b.count - a.count);\n    const maxFrecuencia = combinedData[0].count;\n    const minWeight = 0;\n    const maxWeight = 20;\n    const wordCloudData = combinedData.map((item, index) => ({\n      text: item.ngram,\n      weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n      color: this.randomColor()\n    }));\n    this.cloudData = wordCloudData;\n  }\n  generateTablesDecades() {\n    const table = document.querySelector('#tableInstitution tbody');\n    if (table instanceof HTMLElement) {\n      this.researchers2.forEach(({\n        School,\n        NumberOfAuthors,\n        Country\n      }) => {\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${School}</td><td>${NumberOfAuthors}</td><td>${Country}</td>`;\n        table.appendChild(row);\n      });\n    }\n  }\n  calculateWeight(frec, maxFrec, minWeight, maxWeight) {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n  /**\n   * ############################################\n   */\n  statsResearchers() {\n    const years = this.selectedTitles.map(titulo => titulo.properties.name);\n    this.selectedYears = years;\n    const numResearchersPorAnio = years.map(anio => this.researchers.filter(researcher => researcher.years.includes(anio)).length);\n    this.statistics[0] = {\n      years: years,\n      numResearchers: numResearchersPorAnio\n    };\n  }\n  statsPapers() {\n    const years = this.papers.map(paper => paper.year);\n    const numPapers = this.papers.map(paper => paper.numPapers);\n    this.statistics[1] = {\n      years: years,\n      numPapers: numPapers\n    };\n  }\n  statsColaboraciones() {\n    const colabsXtotal = this.papers.map(paper => {\n      const colab = this.collaborations.find(c => c.year === paper.year);\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapers: paper.numPapers\n      };\n    });\n    const density = colabsXtotal.map(dato => {\n      const {\n        year,\n        numColabs,\n        numPapers\n      } = dato;\n      const density = numColabs / numPapers;\n      return {\n        density,\n        year\n      };\n    });\n    this.statistics[3] = {\n      years: density.map(dato => dato.year),\n      densidades: density.map(dato => dato.density)\n    };\n  }\n  statsConnectedComponents() {\n    const years = this.connectedComponents.map(item => item.year);\n    const connectedComponents = this.connectedComponents.map(item => item.connectedComponents);\n    this.statistics[5] = {\n      years: years,\n      connectedComponents: connectedComponents\n      // Puedes agregar otras propiedades si es necesario\n    };\n  }\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap = new Map();\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName\n        });\n      }\n      venueDataMap.get(venueName)?.years.push(item.year);\n      venueDataMap.get(venueName)?.connectedComponents.push(item.connectedComponents);\n    });\n    // Agregar un índice a cada objeto dentro del Map\n    const venueDataArray = Array.from(venueDataMap.values()).map((value, index) => ({\n      ...value,\n      index: index\n    }));\n    // Actualizar el objeto statistics[6]\n    this.statistics[6] = venueDataArray;\n    console.log(\"ssssssss\", this.statistics[6]);\n  }\n  statsSingleAuthor() {\n    const papersWithAuthors = [];\n    // Map all the researchers, to create papersWithAuthors, which is an array that has the name of a publication\n    // and the authors who have contributed to it.\n    this.singleAuthor.forEach(author => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n          papersWithAuthors.push({\n            ipName,\n            numAuthors: 1,\n            authorNames: [author.researcher],\n            year: author.year\n          });\n        }\n      });\n    });\n    this.papersWithAuthors = papersWithAuthors;\n    // We get all the entries whose author is one, for the statistics\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = numPapersWithSingleAuthor / numPapers * 100;\n      return {\n        year,\n        percentage\n      };\n    });\n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n  }\n  statsGeography(datasets) {\n    const mappingDate = {};\n    const datasetFiltered = datasets.filter(object => Object.keys(object.frecuencias).length > 0);\n    // Obtener todas las fechas únicas\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n    // Iterar sobre las fechas\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n      // Crear objeto de mapeo para la fecha actual\n      mappingDate[date] = {};\n      for (const object of objectDate) {\n        let countryHighest = '';\n        let highestFrequency = -1;\n        for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if (!(countryHighest in mappingDate[date])) {\n          mappingDate[date][countryHighest] = 1;\n        } else {\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n    // We normalize values according to their total\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country] / total).toFixed(4));\n      }\n    }\n    const years = Object.keys(mappingDate); // Get the keys of the years\n    const countries = Object.keys(mappingDate[years[0]]); // Get country names\n    const datasetsLabels = countries; // Labels of the data sets will be the names of the countries \n    // Create the data matrix for the countries\n    const datasetsData = countries.map(country => years.map(year => mappingDate[year][country]));\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n  }\n  filterAuthorsByDecade(authors, startYear, endYear) {\n    const filteredAuthors = [];\n    // Browse the original authors\n    authors.forEach(author => {\n      // Check if the author is within the specified decade\n      const authorYears = author.year.split(\",\").map(Number).filter(year => year >= startYear && year <= endYear);\n      if (authorYears.length > 0) {\n        // Search if there is already a merged author with the same name and decade\n        const existingAuthor = filteredAuthors.find(filteredAuthor => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Merge the existing author's entries with the current author's entries\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Add the current author to the list of filtered authors\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n    return filteredAuthors;\n  }\n  statsProlificAuthors(selectedYears) {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n    // Generate the decades within the selected year range\n    const decades = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }\n    // Sort authors by number of publications in each decade\n    decades.forEach(decade => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20) {\n        decade.authors = decade.authors.slice(0, 20);\n      }\n    });\n    // Return the decades with the authors ordered\n    return decades;\n  }\n  statsProlificAuthors2(selectedYears) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n    const tables = {\n      'degree': document.querySelector('#degree tbody')\n    };\n    for (const author of topAuthors) {\n      const table = tables['degree'];\n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n        table.appendChild(row);\n      }\n    }\n  }\n  generateTablesDecades2(decadeStats) {\n    const tables = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody')\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach(autor => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n          table.appendChild(row);\n        });\n      }\n    }\n  }\n  generateChart3(idChart, label, labels, data) {\n    if (idChart == \"lineChart1\") {\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart2\" || idChart == \"lineChart11\" || idChart == \"lineChart3\") {\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart4(idChart, label, venueDataMap) {\n    const datasets = venueDataMap.map(venue => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        fill: false,\n        borderColor: this.getRandomColor(venue.index),\n        borderWidth: 1\n      };\n    });\n    const allYears = Array.from(new Set([].concat(...datasets.map(dataset => dataset.years))));\n    allYears.sort();\n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets.map(dataset => {\n          return {\n            label: dataset.label,\n            data: allYears.map(year => {\n              const index = dataset.years.indexOf(year);\n              return index !== -1 ? dataset.data[index] : null;\n            }),\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          };\n        })\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    });\n  }\n  statsGender(datasets) {\n    const datasetsByGenre = {};\n    datasets.forEach(data => {\n      const {\n        year,\n        genero\n      } = data;\n      let genderKey = '';\n      if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n        genderKey = 'Men';\n      } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n        genderKey = 'Women';\n      } else {\n        genderKey = 'Unknown';\n      }\n      if (!datasetsByGenre[genderKey]) {\n        datasetsByGenre[genderKey] = [];\n      }\n      const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n      if (existingData) {\n        existingData.count++;\n      } else {\n        datasetsByGenre[genderKey].push({\n          year,\n          count: 1\n        });\n      }\n    });\n    // Create an object to store the ordered data\n    const sortedData = {};\n    const men = datasetsByGenre['Men'];\n    const women = datasetsByGenre['Women'];\n    // Sort men's data\n    men.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      sortedData[year] = {\n        hombres: count,\n        mujeres: 0,\n        total: count\n      };\n    });\n    // Sort the women's data and combine it with the men's data\n    women.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      if (sortedData[year]) {\n        sortedData[year].mujeres = count;\n        sortedData[year].total += count;\n      } else {\n        sortedData[year] = {\n          mujeres: count,\n          hombres: 0,\n          total: count\n        };\n      }\n    });\n    // Get the years sorted\n    const organizedYears = Object.keys(sortedData).sort();\n    const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres / sortedData[anio].total).toFixed(4)));\n    const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres / sortedData[anio].total).toFixed(4)));\n    this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n    this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n  generateMultipleGraph(chartId, labels, datasetsLabels, datasetsData) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      borderColor: this.getRandomColor(index)\n    }));\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateCircularChart(chartId, labels, datasetsLabels, datasetsData) {\n    const colors = ['#FF5733', '#3399FF'];\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],\n      borderColor: 'black'\n    }));\n    const chartConfig = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateBarChart(idChart, label, labels, data) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          backgroundColor: 'rgb(0, 22, 68)',\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  randomColor() {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n  getRandomColor(index) {\n    let colors = {\n      0: \"rgba(75, 192, 192, 1)\",\n      1: \"rgba(192, 75, 75, 1)\",\n      2: \"rgba(98, 192, 75, 1)\",\n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n    return colors[index];\n  }\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', {\n      responseType: 'text'\n    }).subscribe(data => {\n      this.commonNames = this.parseCommonNames(data);\n    }, error => {\n      console.error('Error al cargar los datos:', error);\n    });\n  }\n  parseCommonNames(data) {\n    const lines = data.split('\\n');\n    const dict = {};\n    let currentName = '';\n    let currentData = {\n      frec_paises: {},\n      genero: ''\n    };\n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = {\n          frec_paises: {},\n          genero: ''\n        };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n  main() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this5.selectedTitles = _this5.selectionService.getSelectedTitles();\n        _this5.conferenceOption = _this5.selectionService.getConferenceOption();\n        _this5.venueName = _this5.selectionService.getVenueName();\n        _this5.getPapers();\n        _this5.getCollaborations();\n        _this5.getAuthorsPapers();\n        _this5.getResearchersConference();\n        _this5.getSchools();\n        _this5.generateTablesDecades();\n        if (_this5.researchers.length == 0) {\n          yield _this5.waitResearcherNoEmpty();\n          _this5.getDemographicData();\n        } else {\n          _this5.getDemographicData();\n        }\n        if (_this5.papersWithAuthors.length == 0) {\n          yield _this5.waitAuthorsWithPapersNoEmpty();\n          _this5.getTopicAnalysis();\n          _this5.getDistributions();\n        } else {\n          _this5.getTopicAnalysis();\n          _this5.getDistributions();\n        }\n        if (_this5.singleAuthor.length == 0) {\n          yield _this5.waitSingleAuthorsNoEmpty();\n          _this5.decadeStats = _this5.statsProlificAuthors(_this5.selectedYears);\n          _this5.generateTablesDecades2(_this5.decadeStats);\n        } else {\n          _this5.decadeStats = _this5.statsProlificAuthors(_this5.selectedYears);\n          _this5.generateTablesDecades2(_this5.decadeStats);\n        }\n        _this5.statsProlificAuthors2(_this5.selectedYears);\n        _this5.getConnectedComponents();\n        _this5.getConnectedComponentsByvenue();\n      } catch (error) {\n        console.error('Error in getData with:', error);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function StatisticsComponent_Factory(t) {\n    return new (t || StatisticsComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.SelectionService), i0.ɵɵdirectiveInject(i3.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatisticsComponent,\n    selectors: [[\"app-statistics\"]],\n    viewQuery: function StatisticsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n      }\n    },\n    decls: 220,\n    vars: 2,\n    consts: [[1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [\"id\", \"lineChart1\"], [\"id\", \"lineChart2\"], [1, \"line\"], [\"id\", \"lineChart3\"], [\"id\", \"barChart1\"], [1, \"special\"], [1, \"container-table\"], [1, \"table\"], [\"id\", \"authorsTable\"], [1, \"linev\"], [\"id\", \"papersTable\"], [1, \"flex-container2\"], [1, \"graph-bars\"], [1, \"canvas-container1\"], [1, \"legend\"], [1, \"men\"], [1, \"women\"], [\"id\", \"lineChart4\", 1, \"circular\"], [1, \"graph-bars2\"], [1, \"canvas-container2\"], [\"id\", \"lineChart8\"], [\"id\", \"lineChart5\"], [\"id\", \"tableBigramas\"], [\"id\", \"tableTrigramas\"], [1, \"conceptual\"], [3, \"config\", \"data\"], [1, \"container-table2\"], [\"id\", \"table90\"], [\"colspan\", \"2\"], [\"id\", \"table00\"], [\"id\", \"table10\", 1, \"centered-table\"], [\"id\", \"table20\", 1, \"centered-table\"], [1, \"line3\"], [\"id\", \"degree\"], [\"id\", \"lineChart11\"], [\"id\", \"lineChart12\"], [\"id\", \"tableInstitution\"]],\n    template: function StatisticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"h3\");\n        i0.ɵɵtext(6, \"Authors by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelement(8, \"canvas\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"h3\");\n        i0.ɵɵtext(11, \"Papers by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2);\n        i0.ɵɵelement(13, \"canvas\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"hr\", 5);\n        i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"h3\");\n        i0.ɵɵtext(18, \"Density evolution over the years\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵelement(20, \"canvas\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 1)(22, \"h3\");\n        i0.ɵɵtext(23, \"Percentage of single-author papers per year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2);\n        i0.ɵɵelement(25, \"canvas\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(26, \"hr\", 5);\n        i0.ɵɵelementStart(27, \"h3\", 8);\n        i0.ɵɵtext(28, \"Distributions of authors per paper and of papers per author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 9)(30, \"div\", 10)(31, \"table\", 11)(32, \"thead\")(33, \"tr\")(34, \"th\");\n        i0.ɵɵtext(35, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"th\");\n        i0.ɵɵtext(37, \"Papers (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(38, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(39, \"div\", 12);\n        i0.ɵɵelementStart(40, \"div\", 10)(41, \"table\", 13)(42, \"thead\")(43, \"tr\")(44, \"th\");\n        i0.ɵɵtext(45, \"Papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"th\");\n        i0.ɵɵtext(47, \"Author (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(48, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(49, \"hr\", 5);\n        i0.ɵɵelementStart(50, \"h3\", 8);\n        i0.ɵɵtext(51, \" Percentage of Publications Men-Women / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 14)(53, \"div\", 15)(54, \"div\", 16)(55, \"div\", 17);\n        i0.ɵɵelement(56, \"div\", 18);\n        i0.ɵɵtext(57, \" Men \");\n        i0.ɵɵelement(58, \"div\", 19);\n        i0.ɵɵtext(59, \" Women \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"canvas\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(61, \"div\", 21)(62, \"div\", 22);\n        i0.ɵɵelement(63, \"canvas\", 23);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(64, \"hr\", 5);\n        i0.ɵɵelementStart(65, \"h3\");\n        i0.ɵɵtext(66, \" Percentage of publications by Country / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"div\", 0)(68, \"div\", 1)(69, \"div\", 2);\n        i0.ɵɵelement(70, \"canvas\", 24);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(71, \"hr\", 5);\n        i0.ɵɵelementStart(72, \"h3\", 8);\n        i0.ɵɵtext(73, \"Most frequent Bigrams and Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"div\", 9)(75, \"div\", 10)(76, \"table\", 25)(77, \"thead\")(78, \"tr\")(79, \"th\");\n        i0.ɵɵtext(80, \"Bigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"th\");\n        i0.ɵɵtext(82, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"th\");\n        i0.ɵɵtext(84, \"First \");\n        i0.ɵɵelement(85, \"br\");\n        i0.ɵɵtext(86, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"th\");\n        i0.ɵɵtext(88, \"Recent \");\n        i0.ɵɵelement(89, \"br\");\n        i0.ɵɵtext(90, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(91, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(92, \"div\", 12);\n        i0.ɵɵelementStart(93, \"div\", 10)(94, \"table\", 26)(95, \"thead\")(96, \"tr\")(97, \"th\");\n        i0.ɵɵtext(98, \"Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(99, \"th\");\n        i0.ɵɵtext(100, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(101, \"th\");\n        i0.ɵɵtext(102, \"First \");\n        i0.ɵɵelement(103, \"br\");\n        i0.ɵɵtext(104, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"th\");\n        i0.ɵɵtext(106, \"Recent \");\n        i0.ɵɵelement(107, \"br\");\n        i0.ɵɵtext(108, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(109, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(110, \"hr\", 5);\n        i0.ɵɵelementStart(111, \"h3\", 8);\n        i0.ɵɵtext(112, \"Frequent terms from all titles of papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(113, \"div\", 27);\n        i0.ɵɵelement(114, \"angular-tag-cloud\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(115, \"hr\", 5);\n        i0.ɵɵelementStart(116, \"h3\", 8);\n        i0.ɵɵtext(117, \"Most prolific authors according to their number of publications accumulated by decade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"div\", 29)(119, \"div\", 10)(120, \"table\", 30)(121, \"thead\")(122, \"tr\")(123, \"th\", 31);\n        i0.ɵɵtext(124, \" (a) 1989-1999 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(125, \"hr\");\n        i0.ɵɵelementStart(126, \"tr\")(127, \"th\");\n        i0.ɵɵtext(128, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(129, \"th\");\n        i0.ɵɵtext(130, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(131, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(132, \"div\", 12);\n        i0.ɵɵelementStart(133, \"div\", 10)(134, \"table\", 32)(135, \"thead\")(136, \"tr\")(137, \"th\", 31);\n        i0.ɵɵtext(138, \" (b) 1999-2009 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(139, \"hr\");\n        i0.ɵɵelementStart(140, \"tr\")(141, \"th\");\n        i0.ɵɵtext(142, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(143, \"th\");\n        i0.ɵɵtext(144, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(145, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(146, \"div\", 12);\n        i0.ɵɵelementStart(147, \"div\", 10)(148, \"table\", 33)(149, \"thead\")(150, \"tr\")(151, \"th\", 31);\n        i0.ɵɵtext(152, \" (a) 2009-2019 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(153, \"hr\");\n        i0.ɵɵelementStart(154, \"tr\")(155, \"th\");\n        i0.ɵɵtext(156, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(157, \"th\");\n        i0.ɵɵtext(158, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(159, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(160, \"div\", 12);\n        i0.ɵɵelementStart(161, \"div\", 10)(162, \"table\", 34)(163, \"thead\")(164, \"tr\")(165, \"th\", 31);\n        i0.ɵɵtext(166, \" (a) 2019-2024 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(167, \"hr\");\n        i0.ɵɵelementStart(168, \"tr\")(169, \"th\");\n        i0.ɵɵtext(170, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(171, \"th\");\n        i0.ɵɵtext(172, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(173, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(174, \"hr\", 35);\n        i0.ɵɵelementStart(175, \"h3\");\n        i0.ɵɵtext(176, \"Authors with their first and most recent year of publication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(177, \"div\", 29)(178, \"div\", 10)(179, \"table\", 36)(180, \"thead\")(181, \"tr\")(182, \"th\");\n        i0.ɵɵtext(183, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(184, \"th\");\n        i0.ɵɵtext(185, \"Degree\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(186, \"th\");\n        i0.ɵɵtext(187, \"First \");\n        i0.ɵɵelement(188, \"br\");\n        i0.ɵɵtext(189, \" year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(190, \"th\");\n        i0.ɵɵtext(191, \"Recent \");\n        i0.ɵɵelement(192, \"br\");\n        i0.ɵɵtext(193, \" year\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(194, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(195, \"hr\", 35);\n        i0.ɵɵelementStart(196, \"div\", 0)(197, \"div\", 1)(198, \"h3\");\n        i0.ɵɵtext(199, \"All Connected Components by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(200, \"div\", 2);\n        i0.ɵɵelement(201, \"canvas\", 37);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(202, \"div\", 1)(203, \"h3\");\n        i0.ɵɵtext(204, \" Conference Connected Components by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(205, \"div\", 2);\n        i0.ɵɵelement(206, \"canvas\", 38);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(207, \"hr\", 35);\n        i0.ɵɵelementStart(208, \"div\", 29)(209, \"div\", 10)(210, \"table\", 39)(211, \"thead\")(212, \"tr\")(213, \"th\");\n        i0.ɵɵtext(214, \"Institution\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(215, \"th\");\n        i0.ɵɵtext(216, \"Number of Authors\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(217, \"th\");\n        i0.ɵɵtext(218, \"Country\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(219, \"tbody\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(114);\n        i0.ɵɵproperty(\"config\", ctx.options)(\"data\", ctx.cloudData);\n      }\n    },\n    dependencies: [i4.TagCloudComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 30px;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 20px;\\n  margin-bottom: 10px;\\n}\\n\\n.flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-container2[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.graph-bars[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.graph-bars2[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container1[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 91%;\\n}\\n\\n.canvas-container2[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 96%;\\n}\\n\\n.legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  font-size: 18px;\\n  margin-bottom: 20px;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 95%;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 100%; \\n\\n  height: auto;\\n  display: block;\\n}\\n\\n.line3[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  background-color: rgb(0, 22, 68);\\n}\\n\\n.container-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n  overflow: auto;\\n}\\n\\n.container-table2[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  display: flex;\\n  margin-right: 100px;\\n}\\n\\n.linev[_ngcontent-%COMP%] {\\n  border-right: 1px solid rgb(0, 22, 68);\\n  margin-right: 45px;\\n  margin-left: 20px;\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  vertical-align: middle;\\n  text-align: center;\\n  vertical-align: center;\\n  font-size: 20px;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  min-width: 40px;\\n  min-height: 1px;\\n  margin-right: 5px;\\n}\\n\\n.special[_ngcontent-%COMP%] {\\n  margin-bottom: 40px;\\n}\\n\\n#tableInstitution[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n  padding-left: 120px; \\n\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(2), #degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n  padding-left: 60px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(4) {\\n  padding-left: 90px;\\n}\\n\\n.men[_ngcontent-%COMP%] {\\n  background-color: rgb(51, 153, 255);\\n}\\n\\n.women[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 87, 51);\\n  margin-left: 20PX;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  .legend[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    font-size: 10px;\\n    margin-bottom: 20px;\\n  }\\n  .container-table[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .container-table2[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .table[_ngcontent-%COMP%] {\\n    border-right: none;\\n    padding-right: 0;\\n    padding-bottom: 20px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n}\\n.conceptual[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 200px;\\n}\\n\\n.aparte[_ngcontent-%COMP%] {\\n  margin-top: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXN0YWRpc3RpY2FzL3N0YXRpc3RpY3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBSWhCO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0FBRkY7O0FBS0E7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUZGOztBQUtBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FBRkY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFGRjs7QUFLQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUZGOztBQUtBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBRkY7O0FBS0E7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBRkY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUFGRjs7QUFNQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUhGOztBQU1BO0VBQ0UsZ0NBQUE7RUFDQSxhQUFBO0VBQ0EsVUFBQTtBQUhGOztBQU1BO0VBQ0UsZUFBQSxFQUFBLGlDQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFIRjs7QUFNQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7QUFIRjs7QUFNQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQ0FBQTtBQUhGOztBQU1BO0VBQ0UsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7QUFIRjs7QUFNQTtFQUNFLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBSEY7O0FBTUE7RUFDRSxzQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFIRjs7QUFPQTtFQUNFLGtCQUFBO0FBSkY7O0FBUUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtBQUxGOztBQVFBO0VBQ0UsZUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQUxGOztBQVFBO0VBQ0UsbUJBQUE7QUFMRjs7QUFRQTtFQUNFLG1CQUFBLEVBQUEsa0RBQUE7QUFMRjs7QUFRQTs7RUFFRSxrQkFBQTtBQUxGOztBQU9BO0VBQ0Usa0JBQUE7QUFKRjs7QUFPQTtFQUNFLG1DQUFBO0FBSkY7O0FBT0E7RUFDRSxrQ0FBQTtFQUNBLGlCQUFBO0FBSkY7O0FBUUE7RUFFRTtJQUNFLGFBQUE7RUFORjtFQVNBO0lBQ0UsYUFBQTtJQUNBLHVCQUFBO0lBQ0EsZUFBQTtJQUNBLG1CQUFBO0VBUEY7RUFTQTtJQUNFLHNCQUFBO0VBUEY7RUFTQTtJQUNFLHNCQUFBO0VBUEY7RUFTQTtJQUNFLGtCQUFBO0lBQ0EsZ0JBQUE7SUFDQSxvQkFBQTtFQVBGO0VBU0E7SUFDRSxpQkFBQTtFQVBGO0VBU0E7SUFDRSxpQkFBQTtFQVBGO0FBQ0Y7QUFXQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQVRGOztBQWNBO0VBQ0UsaUJBQUE7QUFYRiIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXJ7XG5cbn1cblxuaDJ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAzMHB4O1xufVxuXG5oMyB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uZmxleC1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5mbGV4LWNvbnRhaW5lcjIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5ncmFwaC1iYXJze1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4uZ3JhcGgtYmFyczJ7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5jYW52YXMtY29udGFpbmVyMSB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgcGFkZGluZzogMjBweDtcbiAgd2lkdGg6IDkxJTtcbn1cblxuLmNhbnZhcy1jb250YWluZXIyIHtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiKDAsIDIyLCA2OCk7IFxuICBwYWRkaW5nOiAyMHB4O1xuICB3aWR0aDogOTYlO1xufVxuXG4ubGVnZW5ke1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxOHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG5cbi5mbGV4LWl0ZW0ge1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4uY2FudmFzLWNvbnRhaW5lciB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgcGFkZGluZzogMjBweDtcbiAgd2lkdGg6IDk1JTtcbn1cblxuY2FudmFzIHtcbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiBIYWNlIGxhcyBncsODwqFmaWNhcyByZXNwb25zaXZlICovXG4gIGhlaWdodDogYXV0bzsgXG4gIGRpc3BsYXk6IGJsb2NrOyBcbn1cblxuLmxpbmUze1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG4ubGluZXtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDIyLCA2OCk7XG59XG5cbi5jb250YWluZXItdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IFxuICBkaXNwbGF5OiBmbGV4O1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLmNvbnRhaW5lci10YWJsZTIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1yaWdodDogMTAwcHg7XG59XG5cbi5saW5ldntcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiKDAsIDIyLCA2OCk7IFxuICBtYXJnaW4tcmlnaHQ6IDQ1cHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG5cbi50YWJsZXtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuXG59XG5cbnRkLCB0aCB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG5kaXYge1xuICBtaW4td2lkdGg6IDQwcHg7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbi5zcGVjaWFse1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuXG4jdGFibGVJbnN0aXR1dGlvbiB0aDpudGgtY2hpbGQoMyl7XG4gIHBhZGRpbmctbGVmdDogMTIwcHg7IC8qIEFqdXN0YSBlbCB2YWxvciBkZSBww4PCrXhlbGVzIHNlZ8ODwrpuIGxvIG5lY2VzaXRlcyAqL1xufVxuXG4jZGVncmVlIHRoOm50aC1jaGlsZCgyKSxcbiNkZWdyZWUgdGg6bnRoLWNoaWxkKDMpe1xuICBwYWRkaW5nLWxlZnQ6IDYwcHg7XG59XG4jZGVncmVlIHRoOm50aC1jaGlsZCg0KSB7XG4gIHBhZGRpbmctbGVmdDogOTBweDtcbn1cblxuLm1lbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig1MSwgMTUzLCAyNTUpO1xuICBcbn1cbi53b21lbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDg3LCA1MSk7XG4gIG1hcmdpbi1sZWZ0OiAyMFBYO1xufVxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG5cbiAgdGQsIHRoIHtcbiAgICBwYWRkaW5nOiAxMHB4OyBcbiAgfVxuXG4gIC5sZWdlbmR7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuICAuY29udGFpbmVyLXRhYmxlIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBcbiAgfVxuICAuY29udGFpbmVyLXRhYmxlMiB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgXG4gIH1cbiAgLnRhYmxlIHtcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7IFxuICAgIHBhZGRpbmctcmlnaHQ6IDA7IFxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICB9XG4gICN0YWJsZUluc3RpdHV0aW9uIHRoOm50aC1jaGlsZCgzKXtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDsgXG4gIH1cbiAgI3RhYmxlSW5zdGl0dXRpb24gdGQ6bnRoLWNoaWxkKDMpe1xuICAgIHBhZGRpbmctbGVmdDogMHB4O1xuICB9XG4gIFxufVxuXG4uY29uY2VwdHVhbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyBcbiAgaGVpZ2h0OiAyMDBweDsgXG59XG5cblxuXG4uYXBhcnRle1xuICBtYXJnaW4tdG9wOiA1MDBweDtcbn1cblxuXG5cblxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","singular","register","StatisticsComponent","constructor","apiService","selectionService","http","selectedTitles","selectedYears","conferenceOption","venueName","papers","collaborations","connectedComponents","singleAuthor","statistics","researchers","researchers2","papersWithAuthors","decadeStats","commonNames","options","width","height","overflow","realignOnResize","strict","step","cloudData","ngOnInit","loadCommonNames","main","ngAfterViewInit","waitResearcherNoEmpty","_this","_asyncToGenerator","length","Promise","resolve","setTimeout","getSchools","subscribe","next","response","table","document","querySelector","HTMLElement","forEach","School","NumberOfAuthors","Country","row","createElement","innerHTML","appendChild","error","console","getResearchersConference","statsResearchers","combineAndShowData","years","numResearchers","getResearchersJournals","researchersConference","researchersJournals","lineChart","destroy","generateChart3","getPapers","statsPapers","numPapers","getCollaborations","statsColaboraciones","densidades","getConnectedComponents","log","statsConnectedComponents","getConnectedComponentsByvenue","statsConnectedComponentsByvenue","generateChart4","waitAuthorsWithPapersNoEmpty","_this2","waitSingleAuthorsNoEmpty","_this3","getAuthorsPapers","_this4","_ref","statsSingleAuthor","generateBarChart","porcentajes","_x","apply","arguments","getDistributions","labels","authorsByPaper","map","numAuthors","filter","paper","allPapers","reduce","all","papersByAuthor","numPubs","numPublications","allAuthors","authorsTable","papersTable","amount","index","percentage","toFixed","worth","toString","getDemographicData","datasets","researcher","name","properties","split","includes","Array","isArray","datasetByYear","year","info","genero","frecuencias","frec_paises","flat","statsGender","statsGeography","generateNGrams","titles","n","ngrams","title","words","toLowerCase","i","push","slice","join","countFrequencies","frequencies","Map","ngram","count","get","set","clearTitle","stopwords","word","replace","wordsNoRepeat","singularWords","filteredWords","newTitle","getTopN","sortedFrequencies","entries","sort","a","b","getTopicAnalysis","cleanTitles","ipName","parseInt","bigrams","trigrams","bigramFrequencies","trigramFrequencies","top20Bigrams","top20Trigrams","top20BigramsWithYears","top20TrigramsWithYears","table1","table2","minYear","Math","min","maxYear","max","combinedData","maxFrecuencia","minWeight","maxWeight","wordCloudData","item","text","weight","calculateWeight","color","randomColor","generateTablesDecades","frec","maxFrec","normWeight","round","titulo","numResearchersPorAnio","anio","colabsXtotal","colab","find","c","numColabs","density","dato","venueDataMap","has","venueDataArray","from","values","value","author","ipNames","paperIndex","findIndex","authorNames","papersWithOneAuthor","porcentajeByYear","numPapersWithSingleAuthor","mappingDate","datasetFiltered","object","Object","keys","uniqueDates","Set","date","objectDate","countryHighest","highestFrequency","country","total","Number","countries","datasetsLabels","datasetsData","generateMultipleGraph","filterAuthorsByDecade","authors","startYear","endYear","filteredAuthors","authorYears","existingAuthor","filteredAuthor","statsProlificAuthors","startDecade","floor","endDecade","decades","decade","decadeLabel","decadeStartYear","decadeEndYear","decadeAuthors","label","statsProlificAuthors2","topAuthors","tables","yearsArray","generateTablesDecades2","autor","idChart","data","type","fill","borderColor","borderWidth","plugins","legend","font","size","family","scales","y","display","lineChart2","venue","getRandomColor","allYears","concat","dataset","indexOf","datasetsByGenre","genderKey","existingData","d","sortedData","men","women","hombres","mujeres","organizedYears","countMen","countWoman","generateCircularChart","chartId","backgroundColor","chartConfig","ctx","getElementById","colors","barChart","beginAtZero","r","random","g","responseType","parseCommonNames","lines","dict","currentName","currentData","linea","startsWith","trim","frec_paisesStr","substring","lastIndexOf","JSON","parse","_this5","getSelectedTitles","getConferenceOption","getVenueName","_","i0","ɵɵdirectiveInject","i1","ApiService","i2","SelectionService","i3","HttpClient","_2","selectors","viewQuery","StatisticsComponent_Query","rf","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { SelectionService } from '../selection.service';\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport { HttpClient } from '@angular/common/http';\nimport { CloudData, CloudOptions } from 'angular-tag-cloud-module';\nimport { singular } from 'pluralize';\nimport { ChartConfiguration, ChartData, ChartOptions } from 'chart.js';\n\ninterface Author {\n  ipNames: string[];\n  numPublications: number;\n  researcher: string;\n  year: string;\n}\n\ninterface DecadeStats {\n  label: string;\n  startYear: number;\n  endYear: number;\n  authors: Author[];\n}\n\n@Component({\n  selector: 'app-statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss'],\n})\n\nexport class StatisticsComponent implements OnInit, AfterViewInit {\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef;\n\n  selectedTitles: any[] = [];\n  selectedYears: any[] = [];\n  conferenceOption: string = \"\";\n  venueName: any[] = [];\n  papers: any[] = [];\n  collaborations: any[] = [];\n  connectedComponents: any[] = [];\n  singleAuthor: any[] = [];\n  statistics: any[] = [];\n  lineChart!: Chart;\n  lineChart2!: Chart;\n  barChart!: Chart;\n  researchers: any[] = [];\n  researchers2: any[] = [];\n  papersWithAuthors: any[] = [];\n  decadeStats: any[] = [];\n  commonNames: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n  options: CloudOptions = {\n    // if width is between 0 and 1 it will be set to the width of the upper element multiplied by the value\n    width: 500,\n    // if height is between 0 and 1 it will be set to the height of the upper element multiplied by the value\n    height: 200,\n    overflow: false,\n    realignOnResize: false,\n    strict: false,\n    step: 2,\n  };\n  cloudData: CloudData[] = []\n\n  constructor(\n    private apiService: ApiService,\n    private selectionService: SelectionService,\n    private http: HttpClient\n  ) {}\n\n\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n\n  ngAfterViewInit() {\n    // Este método se ejecutará después de que Angular haya inicializado la vista\n    // Perfe para realizar cualquier manipulación adicional del DOM relacionada con el gráfico\n    // como ajustes de estilo, cambios dinámicos en los datos, etc.\n  }\n\n  async waitResearcherNoEmpty() {\n    while (!this.researchers || this.researchers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getSchools() {\n    this.apiService.getSchools().subscribe({\n      next: (response: any[]) => {\n        this.researchers2 = response;\n        const table = document.querySelector('#tableInstitution tbody');\n        if (table instanceof HTMLElement) {\n          this.researchers2.forEach(({ School, NumberOfAuthors, Country }) => {\n            const row = document.createElement('tr');\n            row.innerHTML = `\n            <td>${School}</td><td>${NumberOfAuthors}</td><td style=\"padding-left: 100px\">${Country}</td>`;\n      \n            table.appendChild(row);\n          });\n        }\n      },\n      error: (error: any) => {\n        console.error('Error in getSchools:', error);\n      }\n    });\n  }\n\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles).subscribe({\n      next: (response: any) => {\n        this.researchers = response;\n        this.statsResearchers();\n        this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n      },\n      error: (error: any) => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n    if(this.researchers.length < 1){\n      this.apiService.getResearchersJournals(this.selectedTitles).subscribe({\n        next: (response: any) => {\n          this.researchers = response;\n          this.statsResearchers();\n          this.combineAndShowData(this.statistics[0].years, this.statistics[0].numResearchers);\n        },\n        error: (error: any) => {\n          console.error('Error in getResearchersJournals:', error);\n        }\n      });\n    }\n    \n  }\n\n  combineAndShowData(researchersConference: any[], researchersJournals: any[]) {\n    \n    if(this.lineChart){\n      this.lineChart.destroy();\n    }\n  \n    this.generateChart3('lineChart1', 'Number of authors', researchersConference, researchersJournals);\n\n  }\n\n  getPapers() {\n    this.apiService.getPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: (response: any) => {\n        \n        this.papers = response;\n        this.statsPapers();\n        this.generateChart3('lineChart2', 'Number of papers', this.statistics[1].years, this.statistics[1].numPapers);\n      },\n      error: (error: any) => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: (response: any) => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: (error: any) => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n\n  getConnectedComponents(){\n    this.apiService.getConnectedComponents(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        console.log(response);\n        console.log(this.connectedComponents);\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConnectedComponentsByvenue(){\n    this.apiService.getConnectedComponentsByvenue(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        console.log(response);\n        console.log(this.connectedComponents);\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n\n  async waitAuthorsWithPapersNoEmpty(){\n    while (!this.papersWithAuthors || this.papersWithAuthors.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitSingleAuthorsNoEmpty(){\n    while (!this.singleAuthor || this.singleAuthor.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getAuthorsPapers() {\n      this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName)\n        .subscribe({\n          next: async (response: any) => {\n            this.singleAuthor = response;\n            this.statsSingleAuthor();\n            this.generateBarChart('barChart1', 'Single Author Papers', this.statistics[4].years, this.statistics[4].porcentajes);          \n          },\n          error: (error: any) => {\n            console.error('Error in getAuthorsPapers:', error);\n          }\n        });\n  }\n\n  /**Function to obtain the distributions of both authors by papers and papers by authors\n   * \n   */\n  getDistributions(){\n    const labels: string[] = ['1', '2', '3', '4', '5 o más'];\n\n    // This represents the number of authors that each paper has.\n    const authorsByPaper: number[] = [1, 2, 3, 4].map((numAuthors) =>\n    this.papersWithAuthors.filter((paper) => paper.numAuthors === numAuthors).length\n    );\n    authorsByPaper[4] = this.papersWithAuthors.filter((paper) => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapers, 0);\n\n    // This represents the number of published papers that each author has.\n    const papersByAuthor: number[] = [1, 2, 3, 4].map((numPubs) =>\n    this.singleAuthor.filter((paper) => paper.numPublications === numPubs).length\n    );\n    papersByAuthor[4] = this.singleAuthor.filter((paper) => paper.numPublications >= 5).length\n    const allAuthors = this.singleAuthor.length;\n\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n    \n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n\n  getDemographicData(){\n      const datasets = this.researchers.map(researcher => {\n        let name = researcher.researcher.properties.name.split(' ')[0];\n        if(name.includes(\"-\")){\n          name = name.split('-')[0];\n        }\n        const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      \n        const datasetByYear = years.map((year: any) => {\n          const info = this.commonNames[name];\n          const genero = info ? info.genero : 'Unknown';\n          const frecuencias = info ? info.frec_paises : {};\n      \n          return {\n            year,\n            name,\n            genero,\n            frecuencias\n          };\n        });\n        return datasetByYear;\n      }).flat(); \n\n      this.statsGender(datasets);\n      this.statsGeography(datasets);\n  }\n\n  generateNGrams(titles: string[], n: number): string[] {\n    const ngrams: string[] = [];\n    titles.forEach((title) => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  \n  countFrequencies(ngrams: string[]): Map<string, number> {\n    const frequencies = new Map<string, number>();\n    ngrams.forEach((ngram) => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n\n  clearTitle(title: string, stopwords: string[]) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    \n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n  \n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    \n    return newTitle;\n  }\n\n  getTopN(frequencies: Map<string, number>, n: number): [string, number][] {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n\n  getTopicAnalysis(){\n\n      // We require natural to tokenize and remove stopwords, and calculate frequencies\n      const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n\n      const cleanTitles = this.papersWithAuthors.map(paper => {\n        const ipName = this.clearTitle(paper.ipName, stopwords);\n        const year = parseInt(paper.year);\n        return { ipName, year };\n      });\n\n      const bigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 2);\n      const trigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 3);\n\n      const bigramFrequencies = this.countFrequencies(bigrams);\n      const trigramFrequencies = this.countFrequencies(trigrams);\n\n      const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n      const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n\n    \n      const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n    \n      const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n\n      const table1 = document.querySelector('#tableBigramas tbody');\n      const table2 = document.querySelector('#tableTrigramas tbody');\n    \n      if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n        top20BigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table1.appendChild(row);\n        });\n      \n        top20TrigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table2.appendChild(row);\n        });\n      }\n\n      const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n      \n      combinedData.sort((a, b) => b.count - a.count);\n\n      const maxFrecuencia = combinedData[0].count;\n      const minWeight = 0;\n      const maxWeight = 20;\n\n\n      const wordCloudData = combinedData.map((item, index) => ({\n        text: item.ngram,\n        weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n        color: this.randomColor()\n      }));\n\n      this.cloudData = wordCloudData;\n     \n  }\n\n  generateTablesDecades() {\n    const table = document.querySelector('#tableInstitution tbody');\n    if (table instanceof HTMLElement) {\n      this.researchers2.forEach(({ School, NumberOfAuthors, Country }) => {\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${School}</td><td>${NumberOfAuthors}</td><td>${Country}</td>`;\n  \n        table.appendChild(row);\n      });\n    }\n  }\n  \n  calculateWeight(frec: number, maxFrec: number, minWeight: number, maxWeight: number): number {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n\n  /**\n   * ############################################\n   */\n\n  statsResearchers() {\n    const years = this.selectedTitles.map(titulo => titulo.properties.name);\n    this.selectedYears = years;\n\n    const numResearchersPorAnio = years.map(anio =>\n      this.researchers.filter(researcher => researcher.years.includes(anio)).length\n    );\n    this.statistics[0] = {\n      years: years,\n      numResearchers: numResearchersPorAnio\n    };\n  }\n\n  statsPapers() {\n    const years = this.papers.map(paper => paper.year); \n    const numPapers = this.papers.map(paper => paper.numPapers); \n\n    this.statistics[1] = {\n      years: years,\n      numPapers: numPapers\n    };\n  }  \n\n  statsColaboraciones(){    \n    const colabsXtotal = this.papers.map(paper => {\n      const colab = this.collaborations.find(c => c.year === paper.year);\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapers: paper.numPapers\n      };\n    });\n\n    const density = colabsXtotal.map(dato => {\n      const { year, numColabs, numPapers } = dato;\n      const density = numColabs / numPapers;\n      return { density, year };\n    });\n\n    this.statistics[3] = {\n      years: density.map(dato => dato.year),\n      densidades: density.map(dato => dato.density)\n    };\n  }\n\n  statsConnectedComponents() {\n    const years = this.connectedComponents.map(item => item.year);\n    const connectedComponents = this.connectedComponents.map(item => item.connectedComponents);\n  \n    this.statistics[5] = {\n      years: years,\n      connectedComponents: connectedComponents\n      // Puedes agregar otras propiedades si es necesario\n    };\n  }\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap: Map<string, { years: any[], connectedComponents: any[], venueName: string } | undefined> = new Map();\n  \n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n  \n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName\n        });\n      }\n  \n      venueDataMap.get(venueName)?.years.push(item.year);\n      venueDataMap.get(venueName)?.connectedComponents.push(item.connectedComponents);\n    });\n  \n    // Agregar un índice a cada objeto dentro del Map\n    const venueDataArray = Array.from(venueDataMap.values()).map((value, index) => ({\n      ...value,\n      index: index\n    }));\n  \n    // Actualizar el objeto statistics[6]\n    this.statistics[6] = venueDataArray;\n    console.log(\"ssssssss\", this.statistics[6]);\n  }\n  \n\n  statsSingleAuthor() {\n    \n    const papersWithAuthors: { ipName: string, numAuthors: number, authorNames: string[], year: string }[] = [];\n\n    // Map all the researchers, to create papersWithAuthors, which is an array that has the name of a publication\n    // and the authors who have contributed to it.\n    this.singleAuthor.forEach((author: { ipNames: string[], researcher: string, year: string }) => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n            papersWithAuthors.push({\n              ipName,\n              numAuthors: 1,\n              authorNames: [author.researcher],\n              year: author.year\n            });\n          }\n        });\n    });\n\n    this.papersWithAuthors = papersWithAuthors;\n\n    // We get all the entries whose author is one, for the statistics\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = (numPapersWithSingleAuthor / numPapers) * 100;\n    \n      return { year, percentage };\n    });\n    \n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n  }  \n\n  statsGeography(datasets: any[]){\n    const mappingDate: {[date: string]: {[country: string]: number}} = {};\n    const datasetFiltered = datasets.filter((object: any) => Object.keys(object.frecuencias).length > 0);\n    \n    // Obtener todas las fechas únicas\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n\n    // Iterar sobre las fechas\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n\n      // Crear objeto de mapeo para la fecha actual\n      mappingDate[date] = {};\n  \n    for (const object of objectDate) {\n      let countryHighest = '';\n      let highestFrequency = -1;\n\n      for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if(!(countryHighest in mappingDate[date])){\n          mappingDate[date][countryHighest] = 1;\n        }else{\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n\n    // We normalize values according to their total\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country]/total).toFixed(4));\n      }\n    }\n\n    const years = Object.keys(mappingDate); // Get the keys of the years\n    const countries = Object.keys(mappingDate[years[0]]); // Get country names\n    const datasetsLabels = countries; // Labels of the data sets will be the names of the countries \n\n    // Create the data matrix for the countries\n    const datasetsData = countries.map((country) =>\n      years.map((year) => mappingDate[year][country])\n    );\n\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n    \n  }\n\n  filterAuthorsByDecade(authors: Author[], startYear: number, endYear: number): Author[] {\n    const filteredAuthors: Author[] = [];\n  \n    // Browse the original authors\n    authors.forEach((author) => {\n      // Check if the author is within the specified decade\n      const authorYears = author.year.split(\",\").map(Number).filter((year) => year >= startYear && year <= endYear);\n\n      if (authorYears.length > 0) {\n        // Search if there is already a merged author with the same name and decade\n        const existingAuthor = filteredAuthors.find((filteredAuthor) => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Merge the existing author's entries with the current author's entries\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Add the current author to the list of filtered authors\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n\n    return filteredAuthors;\n  }\n\n  statsProlificAuthors(selectedYears: number[]): DecadeStats[] {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n  \n    // Generate the decades within the selected year range\n    const decades: DecadeStats[] = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n  \n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }  \n    // Sort authors by number of publications in each decade\n    decades.forEach((decade) => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20){\n        decade.authors = decade.authors.slice(0, 20); \n      } \n    });\n  \n    // Return the decades with the authors ordered\n    return decades;\n  }\n\n  statsProlificAuthors2(selectedYears: number[]) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n  \n    const tables = {\n      'degree': document.querySelector('#degree tbody'),\n    };\n  \n    for (const author of topAuthors) {\n      const table = tables['degree'];\n  \n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n\n  \n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n  \n        table.appendChild(row);\n      }\n    }\n\n  }\n\n  generateTablesDecades2(decadeStats: any[]){\n    const tables: { [key: string]: HTMLElement | null } = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody'),\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n  \n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach((autor: { researcher: any; numPublications: any; year: any; }) => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n  \n          table.appendChild(row);\n        });\n      }\n    }\n  }\n\n  generateChart3(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart==\"lineChart1\"){\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    if(idChart==\"lineChart2\" || idChart==\"lineChart11\" || idChart==\"lineChart3\"){\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    \n   \n  }\n\n  generateChart4(idChart: string, label: string, venueDataMap: any) {\n    const datasets = venueDataMap.map((venue: any) => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,  // Agregar años para cada lugar\n        fill: false,\n        borderColor: this.getRandomColor(venue.index), // Usar el índice\n        borderWidth: 1\n      };\n    });\n  \n    const allYears = Array.from(new Set([].concat(...datasets.map((dataset: any) => dataset.years))));\n    allYears.sort();\n  \n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets.map((dataset: any) => {\n          return {\n            label: dataset.label,\n            data: allYears.map(year => {\n              const index = dataset.years.indexOf(year);\n              return index !== -1 ? dataset.data[index] : null;\n            }),\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          };\n        })\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        },\n      }\n    });\n  }\n  \n  \n\n  statsGender(datasets: any[]){\n    const datasetsByGenre: { [genero: string]: { year: string; count: number }[] } = {};\n\n      datasets.forEach((data: { year: any; genero: any; }) => {\n        const { year, genero } = data;\n        \n        let genderKey = '';\n        \n        if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n          genderKey = 'Men';\n        } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n          genderKey = 'Women';\n        } else{\n          genderKey = 'Unknown';\n        }\n        \n        if (!datasetsByGenre[genderKey]) {\n          datasetsByGenre[genderKey] = [];\n        }\n        \n        const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n        \n        if (existingData) {\n          existingData.count++;\n        } else {\n          datasetsByGenre[genderKey].push({\n            year,\n            count: 1\n          });\n        }\n      });\n\n      // Create an object to store the ordered data\n      const sortedData: { [anio: string]: { hombres: number; mujeres: number; total: number} } = {};\n      const men = datasetsByGenre['Men'];\n      const women = datasetsByGenre['Women'];\n\n      // Sort men's data\n      men.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        sortedData[year] = { hombres: count, mujeres: 0, total: count };\n      });\n\n      // Sort the women's data and combine it with the men's data\n      women.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        if (sortedData[year]) {\n          sortedData[year].mujeres = count;\n          sortedData[year].total += count;\n        } else {\n          sortedData[year] = { mujeres: count, hombres: 0, total: count };\n        }\n      });\n\n\n      // Get the years sorted\n      const organizedYears = Object.keys(sortedData).sort();\n\n\n      const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres/(sortedData[anio].total)).toFixed(4)));\n      const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres/(sortedData[anio].total)).toFixed(4)));\n\n      \n      this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n      this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n\n  generateMultipleGraph(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      borderColor: this.getRandomColor(index),\n    }));\n  \n    const chartConfig: ChartConfiguration<'line'> = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true,\n          },\n        },\n      },\n    };\n  \n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generateCircularChart(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const colors = ['#FF5733', '#3399FF'];\n\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],  // Cambia la opacidad a un valor más alto\n      borderColor: 'black',\n    }));\n  \n    const chartConfig: ChartConfiguration<'pie'> = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n      },\n    };\n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }  \n\n  randomColor(){\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n\n  getRandomColor(index: number) {\n    let colors: Record<number, string> = {\n      0: \"rgba(75, 192, 192, 1)\",\n      1: \"rgba(192, 75, 75, 1)\",\n      2: \"rgba(98, 192, 75, 1)\", \n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n\n    return colors[index];\n  }\n\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', { responseType: 'text' }).subscribe(\n      (data: string) => {\n        this.commonNames = this.parseCommonNames(data);\n      },\n      (error: any) => {\n        console.error('Error al cargar los datos:', error);\n      }\n    );\n  }\n\n  parseCommonNames(data: string) {\n\n    const lines = data.split('\\n');\n    const dict: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n    let currentName = '';\n    let currentData: { frec_paises: { [key: string]: number }, genero: string } = {\n      frec_paises: {},\n      genero: ''\n    };\n  \n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = { frec_paises: {}, genero: '' };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n\n  async main(){\n    try {\n      this.selectedTitles = this.selectionService.getSelectedTitles();\n      this.conferenceOption = this.selectionService.getConferenceOption();\n      this.venueName = this.selectionService.getVenueName();\n\n      this.getPapers();\n      this.getCollaborations();\n      this.getAuthorsPapers();\n      this.getResearchersConference();\n      this.getSchools();\n      this.generateTablesDecades();\n      \n\n      if(this.researchers.length == 0){\n        await this.waitResearcherNoEmpty();\n        this.getDemographicData();\n      } else{\n        this.getDemographicData();\n      }      \n\n      if(this.papersWithAuthors.length == 0){\n        await this.waitAuthorsWithPapersNoEmpty();\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }else{\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }\n      \n      if(this.singleAuthor.length == 0){\n        await this.waitSingleAuthorsNoEmpty();\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }else{\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }\n      this.statsProlificAuthors2(this.selectedYears);\n \n      this.getConnectedComponents();\n      this.getConnectedComponentsByvenue();\n  } catch (error) {\n    console.error('Error in getData with:', error);\n  }\n  }\n\n}","<div>\n  <h2>Statistics</h2>\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Authors by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart1\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Papers by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart2\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Density evolution over the years</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart3\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Percentage of single-author papers per year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChart1\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Distributions of authors per paper and of papers per author</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n      <table id=\"authorsTable\">\n        <thead>\n          <tr>\n            <th>Author</th>\n            <th>Papers (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"papersTable\">\n        <thead>\n          <tr>\n            <th>Papers</th>\n            <th>Author (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\"> Percentage of Publications Men-Women / Year</h3>\n  <div class=\"flex-container2\">\n\n    <div class=\"graph-bars\">\n\n        <div class=\"canvas-container1\">\n          <div class=\"legend\">\n            <div class=\"men\"></div> Men\n            <div class=\"women\"></div> Women\n          </div>\n          <canvas class=\"circular\" id=\"lineChart4\"></canvas>\n        </div>\n        \n    </div>\n\n    <div class=\"graph-bars2\">\n      <div class=\"canvas-container2\">\n        <canvas id=\"lineChart8\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3> Percentage of publications by Country / Year</h3>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\"> \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart5\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most frequent Bigrams and Trigrams</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n        <table id=\"tableBigramas\">\n          <thead>\n            <tr>\n              <th>Bigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"tableTrigramas\">\n          <thead>\n            <tr>\n              <th>Trigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Frequent terms from all titles of papers</h3>\n  <div class=\"conceptual\">\n    <angular-tag-cloud [config]=\"options\" [data]=\"cloudData\"></angular-tag-cloud>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most prolific authors according to their number of publications accumulated by decade</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"table90\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (a) 1989-1999\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"table00\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (b) 1999-2009\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"table10\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2009-2019\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n  </div>\n  <div class=\"linev\"></div>\n  <div class=\"table\">\n      <table id=\"table20\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2019-2024\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <h3>Authors with their first and most recent year of publication</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"degree\">\n          <thead>\n            <tr>\n              <th>Author</th>\n              <th>Degree</th>\n              <th>First <br> year</th>\n              <th>Recent <br> year</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  \n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>All Connected Components by year</h3>\n  \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart11\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3> Conference Connected Components by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart12\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line3\">\n\n  <div class=\"container-table2\">\n    <div class=\"table\">\n      <table id=\"tableInstitution\">\n        <thead>\n          <tr>\n            <th>Institution</th>\n            <th>Number of Authors</th>\n            <th>Country</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n\n\n\n  \n\n  \n  \n</div>\n\n\n\n\n\n \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}