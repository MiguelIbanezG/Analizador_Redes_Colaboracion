{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"../services/info.service\";\nChart.register(...registerables);\nexport class InfoComponent {\n  constructor(apiService, infoService) {\n    this.apiService = apiService;\n    this.infoService = infoService;\n    this.combinedData = [];\n    this.allPublications = 0;\n    this.publicationsCombined = [];\n    this.authorsCombined = [];\n    this.conferencesCombined = [];\n    this.allAuthors = 0;\n    this.allConferences = 0;\n  }\n  ngOnInit() {\n    this.main();\n  }\n  createInfo() {\n    //Publications by Year\n    const Publicationsyears = this.infoService.PublicationsByYear.map(item => item.yearName);\n    this.generateBarChart('barChart1', 'Publications by Year', Publicationsyears, this.infoService.PublicationsCombined);\n    //Authors by Year\n    const Authorsyears = this.infoService.AuthorsByYear.map(item => item.yearName);\n    this.generateBarChart('barChart2', 'Authors by Year', Authorsyears, this.infoService.PublicationsCombined);\n    //Conferences by Year\n    const Conferencesyears = this.infoService.ConferencesByYear.map(item => item.yearName);\n    this.generateBarChart('barChart1', 'Conferences by Year', Conferencesyears, this.infoService.ConferencesCombineds);\n    this.allAuthors = this.infoService.AllAuthors;\n    this.allPublications = this.infoService.AllPublications;\n    this.allConferences = this.infoService.AllConferences;\n  }\n  combineData() {\n    // Creamos un conjunto para almacenar los años únicos\n    const uniqueYears = new Set();\n    // Agregamos los años de cada consulta al conjunto\n    this.infoService.PublicationsByYear.forEach(item => uniqueYears.add(item.yearName));\n    this.infoService.AuthorsByYear.forEach(item => uniqueYears.add(item.yearName));\n    this.infoService.ConferencesByYear.forEach(item => uniqueYears.add(item.yearName));\n    // Convertimos el conjunto a un arreglo de años únicos\n    const years = Array.from(uniqueYears);\n    // Iteramos sobre los años únicos y llenamos los datos combinados\n    years.forEach(year => {\n      const combinedItem = {\n        yearName: year,\n        allConferences: 0,\n        allAuthors: 0,\n        allPublications: 0\n      };\n      // Buscamos y asignamos los valores correspondientes para cada año\n      const publicationsData = this.infoService.PublicationsByYear.find(item => item.yearName === year);\n      if (publicationsData) {\n        combinedItem.allPublications = publicationsData.allPublications;\n      }\n      const authorsData = this.infoService.AuthorsByYear.find(item => item.yearName === year);\n      if (authorsData) {\n        combinedItem.allAuthors = authorsData.allAuthors;\n      }\n      const conferencesData = this.infoService.ConferencesByYear.find(item => item.yearName === year);\n      if (conferencesData) {\n        combinedItem.allConferences = conferencesData.allConferences;\n      }\n      this.combinedData.push(combinedItem);\n    });\n  }\n  generateBarChart(idChart, label, labels, data) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          backgroundColor: 'rgb(0, 22, 68)',\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  generateBarChartTriple(idChart, label, labels, authorsData, conferencesData, publicationsData) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Authors',\n          data: authorsData,\n          backgroundColor: 'rgba(255, 99, 132, 1)',\n          borderColor: 'rgb(255, 99, 132)',\n          borderWidth: 1\n        }, {\n          label: 'Conferences',\n          data: conferencesData,\n          backgroundColor: 'rgba(54, 162, 235, 1)',\n          borderColor: 'rgb(54, 162, 235)',\n          borderWidth: 1\n        }, {\n          label: 'Publications',\n          data: publicationsData,\n          backgroundColor: 'rgba(255, 206, 86, 1)',\n          borderColor: 'rgb(255, 206, 86)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          },\n          x: {\n            stacked: true\n          }\n        }\n      }\n    });\n  }\n  waitForData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (_this.infoService.PublicationsByYear.length < 1 || _this.infoService.ConferencesByYear.length < 1 || _this.infoService.AuthorsByYear.length < 1) {\n        // Espera 1 segundo antes de verificar de nuevo\n        yield new Promise(resolve => setTimeout(resolve, 1000));\n      }\n    })();\n  }\n  main() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        yield _this2.waitForData();\n        yield _this2.combineData();\n        _this2.generateBarChartTriple('tripleBarChart', 'Triple Bar Chart', _this2.combinedData.map(item => item.yearName), _this2.combinedData.map(item => item.allAuthors), _this2.combinedData.map(item => item.allConferences), _this2.combinedData.map(item => item.allPublications));\n      } catch (error) {\n        console.error('Error in getData:', error);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function InfoComponent_Factory(t) {\n    return new (t || InfoComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.InfoService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InfoComponent,\n    selectors: [[\"info-config\"]],\n    decls: 32,\n    vars: 3,\n    consts: [[1, \"allNumbers\"], [1, \"click-element\"], [1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [\"id\", \"barChart1\"], [\"id\", \"barChart2\"], [\"id\", \"barChart3\"], [\"id\", \"tripleBarChart\"]],\n    template: function InfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\")(2, \"li\", 1);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"li\", 1);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"li\", 1);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"div\", 3)(10, \"h3\");\n        i0.ɵɵtext(11, \"Number of Publications by Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 4);\n        i0.ɵɵelement(13, \"canvas\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(14, \"div\", 2)(15, \"div\", 3)(16, \"h3\");\n        i0.ɵɵtext(17, \"Number of Authors by Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 4);\n        i0.ɵɵelement(19, \"canvas\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"div\", 2)(21, \"div\", 3)(22, \"h3\");\n        i0.ɵɵtext(23, \"Number of Conferences by Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 4);\n        i0.ɵɵelement(25, \"canvas\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(26, \"div\", 2)(27, \"div\", 3)(28, \"h3\");\n        i0.ɵɵtext(29, \"Number of Conferences, Authors and Publications by Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 4);\n        i0.ɵɵelement(31, \"canvas\", 8);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"# of Publications: \", ctx.allPublications, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"# of Authors: \", ctx.allAuthors, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"# of Conferences: \", ctx.allConferences, \"\");\n      }\n    },\n    styles: [\"@charset \\\"UTF-8\\\";\\n.flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 95%;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 100%; \\n\\n  height: auto;\\n  display: block;\\n}\\n\\n.allNumbers[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n}\\n\\n.click-element[_ngcontent-%COMP%] {\\n  cursor: pointer;\\n  margin-bottom: 5px;\\n}\\n\\n.click-element[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.05);\\n  transition: transform 0.3s ease;\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvaW5mby9pbmZvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUFoQjtFQUNJLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtBQUVKOztBQUNBO0VBQ0ksYUFBQTtFQUNBLG1CQUFBO0FBRUo7O0FBQ0E7RUFDSSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBRUo7O0FBQ0E7RUFDSSxlQUFBLEVBQUEsaUNBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQUVKOztBQUNBO0VBQ0ksZUFBQTtBQUVKOztBQUdBO0VBQ0ksZUFBQTtFQUNBLGtCQUFBO0FBQUo7O0FBR0U7RUFDRSxzQkFBQTtFQUNBLCtCQUFBO0VBQ0EsaUJBQUE7QUFBSiIsInNvdXJjZXNDb250ZW50IjpbIi5mbGV4LWNvbnRhaW5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uZmxleC1pdGVtIHtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5jYW52YXMtY29udGFpbmVyIHtcbiAgICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gICAgcGFkZGluZzogMjBweDtcbiAgICB3aWR0aDogOTUlO1xufVxuICBcbmNhbnZhcyB7XG4gICAgbWF4LXdpZHRoOiAxMDAlOyAvKiBIYWNlIGxhcyBncsODwqFmaWNhcyByZXNwb25zaXZlICovXG4gICAgaGVpZ2h0OiBhdXRvOyBcbiAgICBkaXNwbGF5OiBibG9jazsgXG59XG5cbi5hbGxOdW1iZXJze1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgICBcblxufVxuXG4uY2xpY2stZWxlbWVudCB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgfVxuICBcbiAgLmNsaWNrLWVsZW1lbnQ6aG92ZXIge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgfVxuICAiXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","register","InfoComponent","constructor","apiService","infoService","combinedData","allPublications","publicationsCombined","authorsCombined","conferencesCombined","allAuthors","allConferences","ngOnInit","main","createInfo","Publicationsyears","PublicationsByYear","map","item","yearName","generateBarChart","PublicationsCombined","Authorsyears","AuthorsByYear","Conferencesyears","ConferencesByYear","ConferencesCombineds","AllAuthors","AllPublications","AllConferences","combineData","uniqueYears","Set","forEach","add","years","Array","from","year","combinedItem","publicationsData","find","authorsData","conferencesData","push","idChart","label","labels","data","barChart","type","datasets","backgroundColor","borderColor","borderWidth","options","plugins","legend","color","font","size","family","scales","y","beginAtZero","generateBarChartTriple","x","stacked","waitForData","_this","_asyncToGenerator","length","Promise","resolve","setTimeout","_this2","error","console","_","i0","ɵɵdirectiveInject","i1","ApiService","i2","InfoService","_2","selectors","decls","vars","consts","template","InfoComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/info/info.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/info/info.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { Chart, registerables } from 'chart.js';\nimport { InfoService } from '../services/info.service';\nChart.register(...registerables);\n\n\n@Component({\n  selector: 'info-config',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit{\n  \n \n  combinedData: { yearName: string, allConferences: number, allAuthors: number, allPublications: number}[] = [];\n  allPublications = 0;\n  publicationsCombined: number[] = [];\n  authorsCombined: number[] = [];\n  conferencesCombined: number[] = [];\n  allAuthors = 0;\n  allConferences = 0;\n  barChart!: Chart;\n  \n\n  constructor(\n    private apiService: ApiService,\n    private infoService: InfoService\n  ) {}\n\n\n  ngOnInit() {\n    this.main();\n  }\n\n  createInfo(){\n\n    //Publications by Year\n    const Publicationsyears = this.infoService.PublicationsByYear.map(item => item.yearName);\n    this.generateBarChart('barChart1', 'Publications by Year', Publicationsyears, this.infoService.PublicationsCombined);\n    //Authors by Year\n    const Authorsyears = this.infoService.AuthorsByYear.map(item => item.yearName);\n    this.generateBarChart('barChart2', 'Authors by Year', Authorsyears, this.infoService.PublicationsCombined);\n    //Conferences by Year\n    const Conferencesyears = this.infoService.ConferencesByYear.map(item => item.yearName);\n    this.generateBarChart('barChart1', 'Conferences by Year', Conferencesyears, this.infoService.ConferencesCombineds);\n\n    this.allAuthors = this.infoService.AllAuthors\n    this.allPublications = this.infoService.AllPublications\n    this.allConferences = this.infoService.AllConferences\n  }\n\n \n\n  combineData() {\n    // Creamos un conjunto para almacenar los años únicos\n    const uniqueYears = new Set<string>();\n\n    // Agregamos los años de cada consulta al conjunto\n    this.infoService.PublicationsByYear.forEach(item => uniqueYears.add(item.yearName));\n    this.infoService.AuthorsByYear.forEach(item => uniqueYears.add(item.yearName));\n    this.infoService.ConferencesByYear.forEach(item => uniqueYears.add(item.yearName));\n\n    // Convertimos el conjunto a un arreglo de años únicos\n    const years = Array.from(uniqueYears);\n\n    // Iteramos sobre los años únicos y llenamos los datos combinados\n    years.forEach(year => {\n        const combinedItem = {\n            yearName: year,\n            allConferences: 0,\n            allAuthors: 0,\n            allPublications: 0\n        };\n\n        // Buscamos y asignamos los valores correspondientes para cada año\n        const publicationsData = this.infoService.PublicationsByYear.find(item => item.yearName === year);\n        if (publicationsData) {\n            combinedItem.allPublications = publicationsData.allPublications;\n        }\n\n        const authorsData = this.infoService.AuthorsByYear.find(item => item.yearName === year);\n        if (authorsData) {\n            combinedItem.allAuthors = authorsData.allAuthors;\n        }\n\n        const conferencesData = this.infoService.ConferencesByYear.find(item => item.yearName === year);\n        if (conferencesData) {\n            combinedItem.allConferences = conferencesData.allConferences;\n        }\n\n        this.combinedData.push(combinedItem);\n\n    });\n}\n\n\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n\n  generateBarChartTriple(idChart: string, label: string, labels: any[], authorsData: any[], conferencesData: any[], publicationsData: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Authors',\n            data: authorsData,\n            backgroundColor: 'rgba(255, 99, 132, 1)', // Color rojo transparente\n            borderColor: 'rgb(255, 99, 132)',\n            borderWidth: 1\n          },\n          {\n            label: 'Conferences',\n            data: conferencesData,\n            backgroundColor: 'rgba(54, 162, 235, 1)', // Color azul transparente\n            borderColor: 'rgb(54, 162, 235)',\n            borderWidth: 1\n          },\n          {\n            label: 'Publications',\n            data: publicationsData,\n            backgroundColor: 'rgba(255, 206, 86, 1)', // Color amarillo transparente\n            borderColor: 'rgb(255, 206, 86)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          },\n          x:{\n            stacked: true\n          }\n        }\n      }\n    });\n  }\n\n  async waitForData() {\n    while (this.infoService.PublicationsByYear.length < 1 || this.infoService.ConferencesByYear.length < 1 || this.infoService.AuthorsByYear.length < 1) {\n        // Espera 1 segundo antes de verificar de nuevo\n        await new Promise(resolve => setTimeout(resolve, 1000));\n    }\n  } \n\n  async main(){\n    try {\n        await this.waitForData();\n\n        await this.combineData();\n\n            this.generateBarChartTriple(\n              'tripleBarChart',\n              'Triple Bar Chart',\n              this.combinedData.map(item => item.yearName),\n              this.combinedData.map(item => item.allAuthors),\n              this.combinedData.map(item => item.allConferences),\n              this.combinedData.map(item => item.allPublications)\n        );\n\n  } catch (error) {\n    console.error('Error in getData:', error);\n  }\n\n  }\n \n}\n\n","<div class=\"allNumbers\">\n    <ul>\n        <li class=\"click-element\" ># of Publications: {{allPublications}}</li>\n        <li class=\"click-element\"># of Authors: {{allAuthors}}</li>\n        <li class=\"click-element\"># of Conferences: {{allConferences}}</li>\n      </ul>\n</div>\n\n<div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Number of Publications by Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChart1\"></canvas>\n      </div>\n    </div>\n   \n</div>\n<div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n        <h3>Number of Authors by Year</h3>\n  \n        <div class=\"canvas-container\">\n          <canvas id=\"barChart2\"></canvas>\n        </div>\n    </div>\n \n</div>\n\n<div class=\"flex-container\" >\n\n\n    <div class=\"flex-item\">\n        <h3>Number of Conferences by Year</h3>\n  \n        <div class=\"canvas-container\">\n          <canvas id=\"barChart3\"></canvas>\n        </div>\n    </div>\n \n   \n</div>\n\n<div class=\"flex-container\" >\n\n\n    <div class=\"flex-item\">\n        <h3>Number of Conferences, Authors and Publications by Year</h3>\n  \n        <div class=\"canvas-container\">\n          <canvas id=\"tripleBarChart\"></canvas>\n        </div>\n    </div>\n \n   \n</div>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}