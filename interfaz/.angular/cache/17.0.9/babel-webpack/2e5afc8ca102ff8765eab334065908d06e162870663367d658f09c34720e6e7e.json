{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AppNetworkService {\n  getNetworkOptions() {\n    return {\n      autoResize: true,\n      height: \"500px\",\n      width: \"100%\",\n      physics: {\n        enabled: true\n      },\n      layout: {\n        randomSeed: undefined,\n        improvedLayout: true,\n        hierarchical: {\n          enabled: true,\n          levelSeparation: 170,\n          direction: \"UD\",\n          sortMethod: \"directed\",\n          nodeSpacing: 100\n        }\n      },\n      nodes: {\n        scaling: {\n          min: 150,\n          max: 160,\n          label: {\n            enabled: false,\n            min: 14,\n            max: 30,\n            maxVisible: 40,\n            drawThreshold: 5\n          },\n          customScalingFunction: (min, max, total, value) => {\n            if (max === min) {\n              return 0.5;\n            } else {\n              let scale = 1 / (max - min);\n              return Math.max(0, (value - min) * scale);\n            }\n          }\n        },\n        size: 10,\n        //color: \"#F06292\",\n        // color: \"#fff\",\n        font: {\n          size: 20,\n          color: \"#ffffff\"\n        }\n      }\n    };\n  }\n  static #_ = this.ɵfac = function AppNetworkService_Factory(t) {\n    return new (t || AppNetworkService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppNetworkService,\n    factory: AppNetworkService.ɵfac\n  });\n}","map":{"version":3,"names":["AppNetworkService","getNetworkOptions","autoResize","height","width","physics","enabled","layout","randomSeed","undefined","improvedLayout","hierarchical","levelSeparation","direction","sortMethod","nodeSpacing","nodes","scaling","min","max","label","maxVisible","drawThreshold","customScalingFunction","total","value","scale","Math","size","font","color","_","_2","factory","ɵfac"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/services/network.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Options, DataSet } from \"vis\";\n\n@Injectable()\nexport class AppNetworkService {\n  public getNetworkOptions(): Options {\n    return {\n      autoResize: true,\n      height: \"500px\",\n      width: \"100%\",\n      physics: { enabled: true },\n      layout: {\n        randomSeed: undefined,\n        improvedLayout: true,\n        hierarchical: {\n          enabled: true,\n          levelSeparation: 170,\n          direction: \"UD\", // UD, DU, LR, RL\n          sortMethod: \"directed\", // hubsize, directed\n          nodeSpacing: 100\n        }\n      },\n      nodes: {\n        scaling: {\n          min: 150,\n          max: 160,\n          label: {\n            enabled: false,\n            min: 14,\n            max: 30,\n            maxVisible: 40,\n            drawThreshold: 5\n          },\n          customScalingFunction: (\n            min: number,\n            max: number,\n            total: number,\n            value: number\n          ) => {\n            if (max === min) {\n              return 0.5;\n            } else {\n              let scale = 1 / (max - min);\n              return Math.max(0, (value - min) * scale);\n            }\n          }\n        },\n        size: 10,\n        //color: \"#F06292\",\n        // color: \"#fff\",\n\n        font: {\n          size: 20,\n          color: \"#ffffff\"\n        }\n      }\n    };\n  }\n}\n"],"mappings":";AAIA,OAAM,MAAOA,iBAAiB;EACrBC,iBAAiBA,CAAA;IACtB,OAAO;MACLC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,OAAO;MACfC,KAAK,EAAE,MAAM;MACbC,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE;MAC1BC,MAAM,EAAE;QACNC,UAAU,EAAEC,SAAS;QACrBC,cAAc,EAAE,IAAI;QACpBC,YAAY,EAAE;UACZL,OAAO,EAAE,IAAI;UACbM,eAAe,EAAE,GAAG;UACpBC,SAAS,EAAE,IAAI;UACfC,UAAU,EAAE,UAAU;UACtBC,WAAW,EAAE;;OAEhB;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE;UACPC,GAAG,EAAE,GAAG;UACRC,GAAG,EAAE,GAAG;UACRC,KAAK,EAAE;YACLd,OAAO,EAAE,KAAK;YACdY,GAAG,EAAE,EAAE;YACPC,GAAG,EAAE,EAAE;YACPE,UAAU,EAAE,EAAE;YACdC,aAAa,EAAE;WAChB;UACDC,qBAAqB,EAAEA,CACrBL,GAAW,EACXC,GAAW,EACXK,KAAa,EACbC,KAAa,KACX;YACF,IAAIN,GAAG,KAAKD,GAAG,EAAE;cACf,OAAO,GAAG;aACX,MAAM;cACL,IAAIQ,KAAK,GAAG,CAAC,IAAIP,GAAG,GAAGD,GAAG,CAAC;cAC3B,OAAOS,IAAI,CAACR,GAAG,CAAC,CAAC,EAAE,CAACM,KAAK,GAAGP,GAAG,IAAIQ,KAAK,CAAC;;UAE7C;SACD;QACDE,IAAI,EAAE,EAAE;QACR;QACA;QAEAC,IAAI,EAAE;UACJD,IAAI,EAAE,EAAE;UACRE,KAAK,EAAE;;;KAGZ;EACH;EAAC,QAAAC,CAAA,G;qBArDU/B,iBAAiB;EAAA;EAAA,QAAAgC,EAAA,G;WAAjBhC,iBAAiB;IAAAiC,OAAA,EAAjBjC,iBAAiB,CAAAkC;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}