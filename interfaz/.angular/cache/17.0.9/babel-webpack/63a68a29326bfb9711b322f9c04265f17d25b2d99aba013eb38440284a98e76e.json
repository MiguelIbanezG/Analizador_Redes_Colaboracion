{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nimport { singular } from 'pluralize';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"../services/stadistics.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../services/spinner.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"angular-tag-cloud-module\";\nimport * as i7 from \"../spinner/spinner.component\";\nconst _c0 = [\"chartCanvas\"];\nfunction StatisticsComponent_div_214_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵelement(1, \"app-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nChart.register(...registerables);\nexport class StatisticsComponent {\n  constructor(apiService, stadisticsService, http, spinnerService) {\n    this.apiService = apiService;\n    this.stadisticsService = stadisticsService;\n    this.http = http;\n    this.spinnerService = spinnerService;\n    this.selectedTitles = [];\n    this.selectedYears = [];\n    this.conferenceOption = \"\";\n    this.venueName = [];\n    this.papers = [];\n    this.collaborations = [];\n    this.connectedComponents = [];\n    this.singleAuthor = [];\n    this.statistics = [];\n    this.statsAuthors = [];\n    this.statsPaper = [];\n    this.decadeStats = [];\n    this.researchers = [];\n    this.papersWithAuthors = [];\n    this.loadingTable1 = true;\n    this.loadingTable2 = true;\n    this.conferenceName = [];\n    this.commonNames = {};\n    this.options = {\n      width: 500,\n      height: 200,\n      overflow: false,\n      realignOnResize: false,\n      strict: false,\n      step: 2\n    };\n    this.cloudData = [];\n  }\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n  waitResearcherNoEmpty() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (!_this.researchers || _this.researchers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.researchers = response;\n        this.statsResearchers();\n        this.generateChart('lineChart1', 'Number of authors', this.statsAuthors);\n      },\n      error: error => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n  }\n  getPapers() {\n    this.apiService.getPapers(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.papers = response;\n        this.statsPapers();\n        this.generateChart('lineChart2', 'Number of papers', this.statsPaper);\n      },\n      error: error => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: response => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: error => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n  getConnectedComponents() {\n    this.apiService.getConnectedComponents(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConnectedComponentsByvenue() {\n    this.apiService.getConnectedComponentsByvenue(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n        this.generateChart4('lineChart13', 'Number of Connected Components', this.statistics[7]);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConferencebyProceeding() {\n    this.apiService.getConferencebyProceeding(this.selectedTitles, this.venueName).subscribe({\n      next: response => {\n        this.stadisticsService.conferencesNames = [];\n        this.stadisticsService.years = [];\n        this.stadisticsService.inprocedings = [];\n        response.forEach(({\n          title,\n          year,\n          numberOfInProceedings\n        }) => {\n          this.stadisticsService.conferencesNames.push(title);\n          this.stadisticsService.years.push(year);\n          this.stadisticsService.inprocedings.push(numberOfInProceedings);\n        });\n        this.loadingTable1 = false;\n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n      },\n      error: error => {\n        console.error('Error in getConferencebyProceeding:', error);\n      }\n    });\n  }\n  generateTablesProceeding(venueTitles, years, numberOfInProceedings) {\n    const table = document.querySelector('#tableProceeding tbody');\n    if (table instanceof HTMLElement) {\n      table.innerHTML = ''; // Limpiar tabla existente antes de agregar nuevas filas\n      venueTitles.forEach((venueTitle, index) => {\n        // Divide el título en partes usando la coma como delimitador\n        const parts = venueTitle.split(',');\n        if (parts.length == 6) {\n          parts[4] = parts[4].replace(\"Proceedings\", \"\");\n          const date = parts[4].split('.');\n          // Construye el objeto que contiene los datos para la tabla\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[2] + ',' + parts[3],\n            date: date.slice(0).join(' ')\n          };\n          // Crea una fila para la tabla y agrega los datos\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          // Agrega la fila a la tabla\n          table.appendChild(row);\n        }\n        if (parts.length == 5) {\n          parts[3] = parts[3].replace(\"Proceedings\", \"\").trim();\n          const date = parts[3].split('.');\n          const hasNumber = /\\d/.test(date[0]);\n          if (hasNumber) {\n            if (parts[1].includes(\"Florence\")) {\n              const rowData = {\n                name: parts[0],\n                location: parts[1].trim() + ',' + parts[2],\n                date: date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            } else {\n              // Construye el objeto que contiene los datos para la tabla\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2],\n                date: date[0]\n              };\n              // Crea una fila para la tabla y agrega los datos\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              // Agrega la fila a la tabla\n              table.appendChild(row);\n            }\n          } else {\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4]\n            };\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n          }\n        }\n        if (parts.length == 7) {\n          parts[5] = parts[5].replace(\"Proceedings\", \"\");\n          const date = parts[5].split('.');\n          if (parts[2].length > 15) {\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[3] + ', ' + parts[4],\n              date: date[0]\n            };\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            table.appendChild(row);\n          } else {\n            const isValidFormat = /^[a-zA-Z]+\\s+\\d{1,2}(-\\d{1,2}|\\d{1,2}[a-zA-Z]+\\s+\\d{1,2})$/.test(date[0].trim());\n            if (isValidFormat) {\n              if (parts[2].includes(\"ER\")) {\n                const rowData = {\n                  name: parts[0] + ',' + parts[1].trim() + '-' + parts[2],\n                  location: parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              } else {\n                const rowData = {\n                  name: parts[0] + '-' + parts[1].trim(),\n                  location: parts[2] + ', ' + parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              }\n            } else {\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2] + ', ' + parts[3],\n                date: parts[4] + ', ' + date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            }\n          }\n        }\n      });\n    }\n  }\n  waitAuthorsWithPapersNoEmpty() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this2.papersWithAuthors || _this2.papersWithAuthors.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitSingleAuthorsNoEmpty() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this3.singleAuthor || _this3.singleAuthor.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  getAuthorsPapers() {\n    var _this4 = this;\n    this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          _this4.singleAuthor = response;\n          _this4.statsSingleAuthor();\n          _this4.generateBarChart('barChart1', 'Single Author Papers', _this4.statistics[4].years, _this4.statistics[4].porcentajes);\n        });\n        return function next(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      error: error => {\n        console.error('Error in getAuthorsPapers:', error);\n      }\n    });\n  }\n  /**Function to obtain the distributions of both authors by papers and papers by authors*/\n  getDistributions() {\n    const labels = ['1', '2', '3', '4', '5 o más'];\n    // This represents the number of authors that each paper has.\n    const authorsByPaper = [1, 2, 3, 4].map(numAuthors => this.papersWithAuthors.filter(paper => paper.numAuthors === numAuthors).length);\n    authorsByPaper[4] = this.papersWithAuthors.filter(paper => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapers, 0);\n    // This represents the number of published papers that each author has.\n    const papersByAuthor = [1, 2, 3, 4].map(numPubs => this.singleAuthor.filter(paper => paper.numPublications === numPubs).length);\n    papersByAuthor[4] = this.singleAuthor.filter(paper => paper.numPublications >= 5).length;\n    const allAuthors = this.singleAuthor.length;\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n  getDemographicData() {\n    const datasets = this.researchers.map(researcher => {\n      let name = researcher.researcher.properties.name.split(' ')[0];\n      if (name.includes(\"-\")) {\n        name = name.split('-')[0];\n      }\n      const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      const datasetByYear = years.map(year => {\n        const info = this.commonNames[name];\n        const genero = info ? info.genero : 'Unknown';\n        const frecuencias = info ? info.frec_paises : {};\n        return {\n          year,\n          name,\n          genero,\n          frecuencias\n        };\n      });\n      return datasetByYear;\n    }).flat();\n    this.statsGender(datasets);\n    this.statsGeography(datasets);\n  }\n  generateNGrams(titles, n) {\n    const ngrams = [];\n    titles.forEach(title => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  countFrequencies(ngrams) {\n    const frequencies = new Map();\n    ngrams.forEach(ngram => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n  clearTitle(title, stopwords) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    return newTitle;\n  }\n  getTopN(frequencies, n) {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n  getTopicAnalysis() {\n    // We require natural to tokenize and remove stopwords, and calculate frequencies\n    const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n    const cleanTitles = this.papersWithAuthors.map(paper => {\n      const ipName = this.clearTitle(paper.ipName, stopwords);\n      const year = parseInt(paper.year);\n      return {\n        ipName,\n        year\n      };\n    });\n    const bigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 2);\n    const trigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 3);\n    const bigramFrequencies = this.countFrequencies(bigrams);\n    const trigramFrequencies = this.countFrequencies(trigrams);\n    const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n    const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n    const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const table1 = document.querySelector('#tableBigramas tbody');\n    const table2 = document.querySelector('#tableTrigramas tbody');\n    if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n      top20BigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table1.appendChild(row);\n      });\n      top20TrigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table2.appendChild(row);\n      });\n    }\n    const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n    combinedData.sort((a, b) => b.count - a.count);\n    const maxFrecuencia = combinedData[0].count;\n    const minWeight = 0;\n    const maxWeight = 20;\n    const wordCloudData = combinedData.map((item, index) => ({\n      text: item.ngram,\n      weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n      color: this.randomColor()\n    }));\n    this.cloudData = wordCloudData;\n  }\n  calculateWeight(frec, maxFrec, minWeight, maxWeight) {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n  /**\n   * ############################################\n   */\n  statsResearchers() {\n    const names = new Set(this.researchers.map(researcher => researcher.name));\n    this.statsAuthors = Array.from(names).map(name => {\n      const years = this.selectedTitles.map(titulo => titulo.properties.name);\n      const numResearchersPorAnio = years.map(anio => this.researchers.reduce((total, researcher) => {\n        if (researcher.name === name && researcher.years.includes(anio)) {\n          return total + 1;\n        }\n        return total;\n      }, 0));\n      return {\n        name: name,\n        years: years,\n        numResearchers: numResearchersPorAnio\n      };\n    });\n  }\n  statsPapers() {\n    const names = new Set(this.papers.map(paper => paper.name));\n    this.statsPaper = Array.from(names).map(name => {\n      const years = this.papers.map(paper => paper.year);\n      const numPapersPorAnio = years.map(year => this.papers.reduce((total, paper) => {\n        if (paper.name === name && paper.year === year) {\n          return total + paper.numPapers;\n        }\n        return total;\n      }, 0));\n      console.log(names);\n      return {\n        name: name,\n        years: years,\n        numResearchers: numPapersPorAnio\n      };\n    });\n    console.log(this.statsPaper);\n  }\n  statsColaboraciones() {\n    const colabsXtotal = this.papers.map(paper => {\n      const colab = this.collaborations.find(c => c.year === paper.year);\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapers: paper.numPapers\n      };\n    });\n    const density = colabsXtotal.map(dato => {\n      const {\n        year,\n        numColabs,\n        numPapers\n      } = dato;\n      const density = numColabs / numPapers;\n      return {\n        density,\n        year\n      };\n    });\n    this.statistics[3] = {\n      years: density.map(dato => dato.year),\n      densidades: density.map(dato => dato.density)\n    };\n  }\n  statsConnectedComponents() {\n    // Copiar los datos originales para no afectar el orden original\n    const copiedData = [...this.connectedComponents];\n    // Ordenar los datos por año\n    copiedData.sort((a, b) => a.year - b.year);\n    // Extraer los años y componentes conectados ordenados\n    const years = copiedData.map(item => item.year);\n    const connectedComponents = copiedData.map(item => item.connectedComponents);\n    this.statistics[5] = {\n      years: years,\n      connectedComponents: connectedComponents\n      // Puedes agregar otras propiedades si es necesario\n    };\n  }\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap = new Map();\n    const venueDataMapRelative = new Map();\n    let currentIndex = 0;\n    let currentIndex2 = 0;\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n          index: currentIndex\n        });\n        currentIndex++;\n      }\n      const venueData = venueDataMap.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        venueData.connectedComponents.push(item.connectedComponents);\n      }\n    });\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMapRelative.has(venueName)) {\n        venueDataMapRelative.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n          index: currentIndex2\n        });\n        currentIndex2++;\n      }\n      const venueData = venueDataMapRelative.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        let adjustedComponents = item.connectedComponents;\n        while (adjustedComponents > 1) {\n          adjustedComponents /= 10;\n        }\n        venueData.connectedComponents.push(adjustedComponents);\n      }\n    });\n    this.statistics[6] = Array.from(venueDataMap.values());\n    this.statistics[7] = Array.from(venueDataMapRelative.values());\n  }\n  statsSingleAuthor() {\n    const papersWithAuthors = [];\n    // Map all the researchers, to create papersWithAuthors, which is an array that has the name of a publication\n    // and the authors who have contributed to it.\n    this.singleAuthor.forEach(author => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n          papersWithAuthors.push({\n            ipName,\n            numAuthors: 1,\n            authorNames: [author.researcher],\n            year: author.year\n          });\n        }\n      });\n    });\n    this.papersWithAuthors = papersWithAuthors;\n    // We get all the entries whose author is one, for the statistics\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = numPapersWithSingleAuthor / numPapers * 100;\n      return {\n        year,\n        percentage\n      };\n    });\n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n  }\n  statsGeography(datasets) {\n    const mappingDate = {};\n    const datasetFiltered = datasets.filter(object => Object.keys(object.frecuencias).length > 0);\n    // Obtener todas las fechas únicas\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n    // Iterar sobre las fechas\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n      // Crear objeto de mapeo para la fecha actual\n      mappingDate[date] = {};\n      for (const object of objectDate) {\n        let countryHighest = '';\n        let highestFrequency = -1;\n        for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if (!(countryHighest in mappingDate[date])) {\n          mappingDate[date][countryHighest] = 1;\n        } else {\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n    // We normalize values according to their total\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country] / total).toFixed(4));\n      }\n    }\n    const years = Object.keys(mappingDate); // Get the keys of the years\n    const countries = Object.keys(mappingDate[years[0]]); // Get country names\n    const datasetsLabels = countries; // Labels of the data sets will be the names of the countries \n    // Create the data matrix for the countries\n    const datasetsData = countries.map(country => years.map(year => mappingDate[year][country]));\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n  }\n  filterAuthorsByDecade(authors, startYear, endYear) {\n    const filteredAuthors = [];\n    // Browse the original authors\n    authors.forEach(author => {\n      // Check if the author is within the specified decade\n      const authorYears = author.year.split(\",\").map(Number).filter(year => year >= startYear && year <= endYear);\n      if (authorYears.length > 0) {\n        // Search if there is already a merged author with the same name and decade\n        const existingAuthor = filteredAuthors.find(filteredAuthor => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Merge the existing author's entries with the current author's entries\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Add the current author to the list of filtered authors\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n    return filteredAuthors;\n  }\n  statsProlificAuthors(selectedYears) {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n    // Generate the decades within the selected year range\n    const decades = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }\n    // Sort authors by number of publications in each decade\n    decades.forEach(decade => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20) {\n        decade.authors = decade.authors.slice(0, 20);\n      }\n    });\n    // Return the decades with the authors ordered\n    return decades;\n  }\n  statsProlificAuthors2(selectedYears) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n    const tables = {\n      'degree': document.querySelector('#degree tbody')\n    };\n    for (const author of topAuthors) {\n      const table = tables['degree'];\n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n        table.appendChild(row);\n      }\n    }\n  }\n  generateTablesDecades2(decadeStats) {\n    const tables = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody')\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach(autor => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n          table.appendChild(row);\n        });\n      }\n    }\n  }\n  generateChart(idChart, label, data) {\n    const datasets = data.map((entry, index) => ({\n      label: entry.name,\n      data: entry.numResearchers,\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: data[0].years,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    });\n  }\n  generateChart3(idChart, label, labels, data) {\n    if (idChart == \"lineChart2\" || idChart == \"lineChart11\" || idChart == \"lineChart3\") {\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart4(idChart, label, venueDataMap) {\n    const datasets = venueDataMap.map(venue => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        backgroundColor: 'rgba(0, 0, 0, 0.1)',\n        borderColor: this.getRandomColor(venue.index)\n      };\n    });\n    const allYears = Array.from(new Set([].concat(...datasets.map(dataset => dataset.years))));\n    allYears.sort();\n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets.map(dataset => {\n          return {\n            label: dataset.label,\n            data: allYears.map(year => {\n              const index = dataset.years.indexOf(year);\n              return index !== -1 ? dataset.data[index] : null;\n            }),\n            backgroundColor: 'rgba(0, 0, 0, 0.1)',\n            borderColor: dataset.borderColor\n          };\n        })\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    });\n  }\n  statsGender(datasets) {\n    const datasetsByGenre = {};\n    datasets.forEach(data => {\n      const {\n        year,\n        genero\n      } = data;\n      let genderKey = '';\n      if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n        genderKey = 'Men';\n      } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n        genderKey = 'Women';\n      } else {\n        genderKey = 'Unknown';\n      }\n      if (!datasetsByGenre[genderKey]) {\n        datasetsByGenre[genderKey] = [];\n      }\n      const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n      if (existingData) {\n        existingData.count++;\n      } else {\n        datasetsByGenre[genderKey].push({\n          year,\n          count: 1\n        });\n      }\n    });\n    // Create an object to store the ordered data\n    const sortedData = {};\n    const men = datasetsByGenre['Men'];\n    const women = datasetsByGenre['Women'];\n    // Sort men's data\n    men.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      sortedData[year] = {\n        hombres: count,\n        mujeres: 0,\n        total: count\n      };\n    });\n    // Sort the women's data and combine it with the men's data\n    women.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      if (sortedData[year]) {\n        sortedData[year].mujeres = count;\n        sortedData[year].total += count;\n      } else {\n        sortedData[year] = {\n          mujeres: count,\n          hombres: 0,\n          total: count\n        };\n      }\n    });\n    // Get the years sorted\n    const organizedYears = Object.keys(sortedData).sort();\n    const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres / sortedData[anio].total).toFixed(4)));\n    const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres / sortedData[anio].total).toFixed(4)));\n    this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n    this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n  generateMultipleGraph(chartId, labels, datasetsLabels, datasetsData) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      borderColor: this.getRandomColor(index)\n    }));\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateCircularChart(chartId, labels, datasetsLabels, datasetsData) {\n    const colors = ['#FF5733', '#3399FF'];\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],\n      borderColor: 'black'\n    }));\n    const chartConfig = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateBarChart(idChart, label, labels, data) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          backgroundColor: 'rgb(0, 22, 68)',\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  randomColor() {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n  getRandomColor(index) {\n    let colors = {\n      0: \"rgba(75, 192, 192, 1)\",\n      1: \"rgba(192, 75, 75, 1)\",\n      2: \"rgba(98, 192, 75, 1)\",\n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n    return colors[index];\n  }\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', {\n      responseType: 'text'\n    }).subscribe(data => {\n      this.commonNames = this.parseCommonNames(data);\n    }, error => {\n      console.error('Error al cargar los datos:', error);\n    });\n  }\n  parseCommonNames(data) {\n    const lines = data.split('\\n');\n    const dict = {};\n    let currentName = '';\n    let currentData = {\n      frec_paises: {},\n      genero: ''\n    };\n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = {\n          frec_paises: {},\n          genero: ''\n        };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n  main() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this5.selectedTitles = _this5.stadisticsService.getSelectedTitles();\n        _this5.conferenceOption = _this5.stadisticsService.getConferenceOption();\n        _this5.venueName = _this5.stadisticsService.getVenueName();\n        if (_this5.stadisticsService.venueNameConfirm != _this5.stadisticsService.getVenueName()) {\n          _this5.getConferencebyProceeding();\n        } else {\n          _this5.generateTablesProceeding(_this5.stadisticsService.conferencesNames, _this5.stadisticsService.years, _this5.stadisticsService.inprocedings);\n        }\n        _this5.getPapers();\n        _this5.getAuthorsPapers();\n        _this5.getResearchersConference();\n        _this5.getConferencebyProceeding();\n        if (_this5.researchers.length == 0) {\n          yield _this5.waitResearcherNoEmpty();\n          _this5.getDemographicData();\n          _this5.getCollaborations();\n        } else {\n          _this5.getDemographicData();\n          _this5.getCollaborations();\n        }\n        if (_this5.papersWithAuthors.length == 0) {\n          yield _this5.waitAuthorsWithPapersNoEmpty();\n          _this5.getTopicAnalysis();\n          _this5.getDistributions();\n        } else {\n          _this5.getTopicAnalysis();\n          _this5.getDistributions();\n        }\n        if (_this5.singleAuthor.length == 0) {\n          yield _this5.waitSingleAuthorsNoEmpty();\n          _this5.decadeStats = _this5.statsProlificAuthors(_this5.selectedYears);\n          _this5.generateTablesDecades2(_this5.decadeStats);\n        } else {\n          _this5.decadeStats = _this5.statsProlificAuthors(_this5.selectedYears);\n          _this5.generateTablesDecades2(_this5.decadeStats);\n        }\n        _this5.statsProlificAuthors2(_this5.selectedYears);\n        _this5.getConnectedComponents();\n        _this5.getConnectedComponentsByvenue();\n        while (_this5.stadisticsService.conferencesNames.length < 1) {\n          _this5.loadingTable1 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n          _this5.spinnerService.show();\n        }\n        _this5.loadingTable1 = false;\n        _this5.stadisticsService.venueNameConfirm = _this5.stadisticsService.getVenueName();\n      } catch (error) {\n        console.error('Error in getData with:', error);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function StatisticsComponent_Factory(t) {\n    return new (t || StatisticsComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.StadisticsService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.SpinnerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatisticsComponent,\n    selectors: [[\"istics\"]],\n    viewQuery: function StatisticsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n      }\n    },\n    decls: 233,\n    vars: 3,\n    consts: [[1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [\"id\", \"lineChart1\"], [\"id\", \"lineChart2\"], [1, \"line\"], [\"id\", \"lineChart3\"], [\"id\", \"barChart1\"], [1, \"special\"], [1, \"container-table\"], [1, \"table\"], [\"id\", \"authorsTable\"], [1, \"linev\"], [\"id\", \"papersTable\"], [1, \"flex-container2\"], [1, \"graph-bars\"], [1, \"canvas-container1\"], [1, \"legend\"], [1, \"men\"], [1, \"women\"], [\"id\", \"lineChart4\", 1, \"circular\"], [1, \"graph-bars2\"], [1, \"canvas-container2\"], [\"id\", \"lineChart8\"], [\"id\", \"lineChart5\"], [\"id\", \"tableBigramas\"], [\"id\", \"tableTrigramas\"], [1, \"conceptual\"], [3, \"config\", \"data\"], [1, \"container-table2\"], [\"id\", \"table90\"], [\"colspan\", \"2\"], [\"id\", \"table00\"], [\"id\", \"table10\", 1, \"centered-table\"], [\"id\", \"table20\", 1, \"centered-table\"], [1, \"line3\"], [\"id\", \"degree\"], [\"id\", \"tableProceeding\"], [\"class\", \"overlay\", 4, \"ngIf\"], [\"id\", \"lineChart11\"], [\"id\", \"lineChart12\"], [\"id\", \"lineChart13\"], [1, \"overlay\"]],\n    template: function StatisticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"h3\");\n        i0.ɵɵtext(6, \"Authors by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelement(8, \"canvas\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"h3\");\n        i0.ɵɵtext(11, \"Papers by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2);\n        i0.ɵɵelement(13, \"canvas\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"hr\", 5);\n        i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"h3\");\n        i0.ɵɵtext(18, \"Density evolution over the years\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵelement(20, \"canvas\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 1)(22, \"h3\");\n        i0.ɵɵtext(23, \"Percentage of single-author papers per year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2);\n        i0.ɵɵelement(25, \"canvas\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(26, \"hr\", 5);\n        i0.ɵɵelementStart(27, \"h3\", 8);\n        i0.ɵɵtext(28, \"Distributions of authors per paper and of papers per author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 9)(30, \"div\", 10)(31, \"table\", 11)(32, \"thead\")(33, \"tr\")(34, \"th\");\n        i0.ɵɵtext(35, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"th\");\n        i0.ɵɵtext(37, \"Papers (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(38, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(39, \"div\", 12);\n        i0.ɵɵelementStart(40, \"div\", 10)(41, \"table\", 13)(42, \"thead\")(43, \"tr\")(44, \"th\");\n        i0.ɵɵtext(45, \"Papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"th\");\n        i0.ɵɵtext(47, \"Author (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(48, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(49, \"hr\", 5);\n        i0.ɵɵelementStart(50, \"h3\", 8);\n        i0.ɵɵtext(51, \" Percentage of Publications Men-Women / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 14)(53, \"div\", 15)(54, \"div\", 16)(55, \"div\", 17);\n        i0.ɵɵelement(56, \"div\", 18);\n        i0.ɵɵtext(57, \" Men \");\n        i0.ɵɵelement(58, \"div\", 19);\n        i0.ɵɵtext(59, \" Women \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"canvas\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(61, \"div\", 21)(62, \"div\", 22);\n        i0.ɵɵelement(63, \"canvas\", 23);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(64, \"hr\", 5);\n        i0.ɵɵelementStart(65, \"h3\");\n        i0.ɵɵtext(66, \" Percentage of publications by Country / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"div\", 0)(68, \"div\", 1)(69, \"div\", 2);\n        i0.ɵɵelement(70, \"canvas\", 24);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(71, \"hr\", 5);\n        i0.ɵɵelementStart(72, \"h3\", 8);\n        i0.ɵɵtext(73, \"Most frequent Bigrams and Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"div\", 9)(75, \"div\", 10)(76, \"table\", 25)(77, \"thead\")(78, \"tr\")(79, \"th\");\n        i0.ɵɵtext(80, \"Bigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"th\");\n        i0.ɵɵtext(82, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"th\");\n        i0.ɵɵtext(84, \"First \");\n        i0.ɵɵelement(85, \"br\");\n        i0.ɵɵtext(86, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"th\");\n        i0.ɵɵtext(88, \"Recent \");\n        i0.ɵɵelement(89, \"br\");\n        i0.ɵɵtext(90, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(91, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(92, \"div\", 12);\n        i0.ɵɵelementStart(93, \"div\", 10)(94, \"table\", 26)(95, \"thead\")(96, \"tr\")(97, \"th\");\n        i0.ɵɵtext(98, \"Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(99, \"th\");\n        i0.ɵɵtext(100, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(101, \"th\");\n        i0.ɵɵtext(102, \"First \");\n        i0.ɵɵelement(103, \"br\");\n        i0.ɵɵtext(104, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"th\");\n        i0.ɵɵtext(106, \"Recent \");\n        i0.ɵɵelement(107, \"br\");\n        i0.ɵɵtext(108, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(109, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(110, \"hr\", 5);\n        i0.ɵɵelementStart(111, \"h3\", 8);\n        i0.ɵɵtext(112, \"Frequent terms from all titles of papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(113, \"div\", 27);\n        i0.ɵɵelement(114, \"angular-tag-cloud\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(115, \"hr\", 5);\n        i0.ɵɵelementStart(116, \"h3\", 8);\n        i0.ɵɵtext(117, \"Most prolific authors according to their number of publications accumulated by decade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"div\", 29)(119, \"div\", 10)(120, \"table\", 30)(121, \"thead\")(122, \"tr\")(123, \"th\", 31);\n        i0.ɵɵtext(124, \" (a) 1989-1999 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(125, \"hr\");\n        i0.ɵɵelementStart(126, \"tr\")(127, \"th\");\n        i0.ɵɵtext(128, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(129, \"th\");\n        i0.ɵɵtext(130, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(131, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(132, \"div\", 12);\n        i0.ɵɵelementStart(133, \"div\", 10)(134, \"table\", 32)(135, \"thead\")(136, \"tr\")(137, \"th\", 31);\n        i0.ɵɵtext(138, \" (b) 1999-2009 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(139, \"hr\");\n        i0.ɵɵelementStart(140, \"tr\")(141, \"th\");\n        i0.ɵɵtext(142, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(143, \"th\");\n        i0.ɵɵtext(144, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(145, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(146, \"div\", 12);\n        i0.ɵɵelementStart(147, \"div\", 10)(148, \"table\", 33)(149, \"thead\")(150, \"tr\")(151, \"th\", 31);\n        i0.ɵɵtext(152, \" (a) 2009-2019 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(153, \"hr\");\n        i0.ɵɵelementStart(154, \"tr\")(155, \"th\");\n        i0.ɵɵtext(156, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(157, \"th\");\n        i0.ɵɵtext(158, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(159, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(160, \"div\", 12);\n        i0.ɵɵelementStart(161, \"div\", 10)(162, \"table\", 34)(163, \"thead\")(164, \"tr\")(165, \"th\", 31);\n        i0.ɵɵtext(166, \" (a) 2019-2024 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(167, \"hr\");\n        i0.ɵɵelementStart(168, \"tr\")(169, \"th\");\n        i0.ɵɵtext(170, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(171, \"th\");\n        i0.ɵɵtext(172, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(173, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(174, \"hr\", 35);\n        i0.ɵɵelementStart(175, \"h3\");\n        i0.ɵɵtext(176, \"Authors with their first and most recent year of publication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(177, \"div\", 29)(178, \"div\", 10)(179, \"table\", 36)(180, \"thead\")(181, \"tr\")(182, \"th\");\n        i0.ɵɵtext(183, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(184, \"th\");\n        i0.ɵɵtext(185, \"Degree\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(186, \"th\");\n        i0.ɵɵtext(187, \"First \");\n        i0.ɵɵelement(188, \"br\");\n        i0.ɵɵtext(189, \" year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(190, \"th\");\n        i0.ɵɵtext(191, \"Recent \");\n        i0.ɵɵelement(192, \"br\");\n        i0.ɵɵtext(193, \" year\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(194, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(195, \"hr\", 35);\n        i0.ɵɵelementStart(196, \"h3\");\n        i0.ɵɵtext(197, \"Proceeding by Conference\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(198, \"div\", 29)(199, \"div\", 10)(200, \"table\", 37)(201, \"thead\")(202, \"tr\")(203, \"th\");\n        i0.ɵɵtext(204, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(205, \"th\");\n        i0.ɵɵtext(206, \"Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(207, \"th\");\n        i0.ɵɵtext(208, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(209, \"th\");\n        i0.ɵɵtext(210, \"Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(211, \"th\");\n        i0.ɵɵtext(212, \"numberOfInProceedings\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(213, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(214, StatisticsComponent_div_214_Template, 2, 0, \"div\", 38);\n        i0.ɵɵelement(215, \"hr\", 35);\n        i0.ɵɵelementStart(216, \"div\", 0)(217, \"div\", 1)(218, \"h3\");\n        i0.ɵɵtext(219, \"All Connected Components by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(220, \"div\", 2);\n        i0.ɵɵelement(221, \"canvas\", 39);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(222, \"div\", 1)(223, \"h3\");\n        i0.ɵɵtext(224, \"Connected components for each Conference by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(225, \"div\", 2);\n        i0.ɵɵelement(226, \"canvas\", 40);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(227, \"h3\");\n        i0.ɵɵtext(228, \"Relative size of components connected by conference\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(229, \"div\", 0)(230, \"div\", 1)(231, \"div\", 2);\n        i0.ɵɵelement(232, \"canvas\", 41);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(114);\n        i0.ɵɵproperty(\"config\", ctx.options)(\"data\", ctx.cloudData);\n        i0.ɵɵadvance(100);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingTable1);\n      }\n    },\n    dependencies: [i5.NgIf, i6.TagCloudComponent, i7.SpinnerComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 40px;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 25px;\\n  margin-bottom: 10px;\\n}\\n\\n.flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-container2[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.graph-bars[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.graph-bars2[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container1[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 91%;\\n}\\n\\n.canvas-container2[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 96%;\\n}\\n\\n.legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  font-size: 18px;\\n  margin-bottom: 20px;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 95%;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 100%; \\n\\n  height: auto;\\n  display: block;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  background-color: rgb(0, 22, 68);\\n}\\n\\n.container-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n  overflow: auto;\\n}\\n\\n.container-table2[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  display: flex;\\n  margin-right: 100px;\\n}\\n\\n.linev[_ngcontent-%COMP%] {\\n  border-right: 1px solid rgb(0, 22, 68);\\n  margin-right: 45px;\\n  margin-left: 20px;\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  vertical-align: middle;\\n  text-align: center;\\n  vertical-align: center;\\n  font-size: 20px;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  min-width: 40px;\\n  min-height: 1px;\\n  margin-right: 5px;\\n}\\n\\n.special[_ngcontent-%COMP%] {\\n  margin-bottom: 40px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(2), #degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n  padding-left: 60px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(4) {\\n  padding-left: 90px;\\n}\\n\\n.men[_ngcontent-%COMP%] {\\n  background-color: rgb(51, 153, 255);\\n}\\n\\n.women[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 87, 51);\\n  margin-left: 20PX;\\n}\\n\\n.line3[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  .legend[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    font-size: 10px;\\n    margin-bottom: 20px;\\n  }\\n  .container-table[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .container-table2[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .table[_ngcontent-%COMP%] {\\n    border-right: none;\\n    padding-right: 0;\\n    padding-bottom: 20px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n}\\n.conceptual[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 200px;\\n}\\n\\n.overlay[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 10px;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 10;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXN0YWRpc3RpY2FzL3N0YXRpc3RpY3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQ2hCO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFHQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUFGOztBQUdBO0VBQ0UsZ0NBQUE7RUFDQSxhQUFBO0VBQ0EsVUFBQTtBQUFGOztBQUdBO0VBQ0UsZUFBQSxFQUFBLGlDQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQ0FBQTtBQUFGOztBQUdBO0VBQ0UsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBQUY7O0FBR0E7RUFDRSxzQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFJQTtFQUNFLGtCQUFBO0FBREY7O0FBSUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtBQURGOztBQUlBO0VBQ0UsZUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQURGOztBQUlBO0VBQ0UsbUJBQUE7QUFERjs7QUFJQTs7RUFFRSxrQkFBQTtBQURGOztBQUdBO0VBQ0Usa0JBQUE7QUFBRjs7QUFHQTtFQUNFLG1DQUFBO0FBQUY7O0FBR0E7RUFDRSxrQ0FBQTtFQUNBLGlCQUFBO0FBQUY7O0FBR0E7RUFDRSxnQkFBQTtFQUNBLG1CQUFBO0FBQUY7O0FBSUE7RUFFRTtJQUNFLGFBQUE7RUFGRjtFQUtBO0lBQ0UsYUFBQTtJQUNBLHVCQUFBO0lBQ0EsZUFBQTtJQUNBLG1CQUFBO0VBSEY7RUFLQTtJQUNFLHNCQUFBO0VBSEY7RUFLQTtJQUNFLHNCQUFBO0VBSEY7RUFLQTtJQUNFLGtCQUFBO0lBQ0EsZ0JBQUE7SUFDQSxvQkFBQTtFQUhGO0VBS0E7SUFDRSxpQkFBQTtFQUhGO0VBS0E7SUFDRSxpQkFBQTtFQUhGO0FBQ0Y7QUFPQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQUxGOztBQU9BO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBSkYiLCJzb3VyY2VzQ29udGVudCI6WyJcbmgye1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogNDBweDtcbn1cblxuaDMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMjVweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmZsZXgtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uZmxleC1jb250YWluZXIyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uZ3JhcGgtYmFyc3tcbiAgcGFkZGluZzogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLmdyYXBoLWJhcnMye1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4uY2FudmFzLWNvbnRhaW5lcjEge1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiA5MSU7XG59XG5cbi5jYW52YXMtY29udGFpbmVyMiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgcGFkZGluZzogMjBweDtcbiAgd2lkdGg6IDk2JTtcbn1cblxuLmxlZ2VuZHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuXG4uZmxleC1pdGVtIHtcbiAgcGFkZGluZzogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLmNhbnZhcy1jb250YWluZXIge1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiA5NSU7XG59XG5cbmNhbnZhcyB7XG4gIG1heC13aWR0aDogMTAwJTsgLyogSGFjZSBsYXMgZ3LDg8KhZmljYXMgcmVzcG9uc2l2ZSAqL1xuICBoZWlnaHQ6IGF1dG87IFxuICBkaXNwbGF5OiBibG9jazsgXG59XG5cbi5saW5le1xuICBtYXJnaW4tdG9wOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMjIsIDY4KTtcbn1cblxuLmNvbnRhaW5lci10YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uY29udGFpbmVyLXRhYmxlMiB7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luLXJpZ2h0OiAxMDBweDtcbn1cblxuLmxpbmV2e1xuICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIG1hcmdpbi1yaWdodDogNDVweDtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG59XG5cblxuLnRhYmxle1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbnRkLCB0aCB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdmVydGljYWwtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAyMHB4O1xufVxuXG5kaXYge1xuICBtaW4td2lkdGg6IDQwcHg7XG4gIG1pbi1oZWlnaHQ6IDFweDtcbiAgbWFyZ2luLXJpZ2h0OiA1cHg7XG59XG5cbi5zcGVjaWFse1xuICBtYXJnaW4tYm90dG9tOiA0MHB4O1xufVxuXG4jZGVncmVlIHRoOm50aC1jaGlsZCgyKSxcbiNkZWdyZWUgdGg6bnRoLWNoaWxkKDMpe1xuICBwYWRkaW5nLWxlZnQ6IDYwcHg7XG59XG4jZGVncmVlIHRoOm50aC1jaGlsZCg0KSB7XG4gIHBhZGRpbmctbGVmdDogOTBweDtcbn1cblxuLm1lbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYig1MSwgMTUzLCAyNTUpO1xuICBcbn1cbi53b21lbiB7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyNTUsIDg3LCA1MSk7XG4gIG1hcmdpbi1sZWZ0OiAyMFBYO1xufVxuXG4ubGluZTN7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG5cblxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcblxuICB0ZCwgdGgge1xuICAgIHBhZGRpbmc6IDEwcHg7IFxuICB9XG5cbiAgLmxlZ2VuZHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGZvbnQtc2l6ZTogMTBweDtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIC5jb250YWluZXItdGFibGUge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IFxuICB9XG4gIC5jb250YWluZXItdGFibGUyIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBcbiAgfVxuICAudGFibGUge1xuICAgIGJvcmRlci1yaWdodDogbm9uZTsgXG4gICAgcGFkZGluZy1yaWdodDogMDsgXG4gICAgcGFkZGluZy1ib3R0b206IDIwcHg7XG4gIH1cbiAgI3RhYmxlSW5zdGl0dXRpb24gdGg6bnRoLWNoaWxkKDMpe1xuICAgIHBhZGRpbmctbGVmdDogMHB4OyBcbiAgfVxuICAjdGFibGVJbnN0aXR1dGlvbiB0ZDpudGgtY2hpbGQoMyl7XG4gICAgcGFkZGluZy1sZWZ0OiAwcHg7XG4gIH1cbiAgXG59XG5cbi5jb25jZXB0dWFsIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IFxuICBoZWlnaHQ6IDIwMHB4OyBcbn1cbi5vdmVybGF5IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDEwcHg7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDEwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","singular","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","register","StatisticsComponent","constructor","apiService","stadisticsService","http","spinnerService","selectedTitles","selectedYears","conferenceOption","venueName","papers","collaborations","connectedComponents","singleAuthor","statistics","statsAuthors","statsPaper","decadeStats","researchers","papersWithAuthors","loadingTable1","loadingTable2","conferenceName","commonNames","options","width","height","overflow","realignOnResize","strict","step","cloudData","ngOnInit","loadCommonNames","main","waitResearcherNoEmpty","_this","_asyncToGenerator","length","Promise","resolve","setTimeout","getResearchersConference","subscribe","next","response","statsResearchers","generateChart","error","console","getPapers","statsPapers","getCollaborations","statsColaboraciones","generateChart3","years","densidades","getConnectedComponents","statsConnectedComponents","getConnectedComponentsByvenue","statsConnectedComponentsByvenue","generateChart4","getConferencebyProceeding","conferencesNames","inprocedings","forEach","title","year","numberOfInProceedings","push","generateTablesProceeding","venueTitles","table","document","querySelector","HTMLElement","innerHTML","venueTitle","index","parts","split","replace","date","rowData","name","trim","location","slice","join","row","createElement","appendChild","hasNumber","test","includes","isValidFormat","waitAuthorsWithPapersNoEmpty","_this2","waitSingleAuthorsNoEmpty","_this3","getAuthorsPapers","_this4","_ref","statsSingleAuthor","generateBarChart","porcentajes","_x","apply","arguments","getDistributions","labels","authorsByPaper","map","numAuthors","filter","paper","allPapers","reduce","all","numPapers","papersByAuthor","numPubs","numPublications","allAuthors","authorsTable","papersTable","amount","percentage","toFixed","worth","toString","getDemographicData","datasets","researcher","properties","Array","isArray","datasetByYear","info","genero","frecuencias","frec_paises","flat","statsGender","statsGeography","generateNGrams","titles","n","ngrams","words","toLowerCase","i","countFrequencies","frequencies","Map","ngram","count","get","set","clearTitle","stopwords","word","wordsNoRepeat","singularWords","filteredWords","newTitle","getTopN","sortedFrequencies","entries","sort","a","b","getTopicAnalysis","cleanTitles","ipName","parseInt","bigrams","trigrams","bigramFrequencies","trigramFrequencies","top20Bigrams","top20Trigrams","top20BigramsWithYears","top20TrigramsWithYears","table1","table2","minYear","Math","min","maxYear","max","combinedData","maxFrecuencia","minWeight","maxWeight","wordCloudData","item","text","weight","calculateWeight","color","randomColor","frec","maxFrec","normWeight","round","names","Set","from","titulo","numResearchersPorAnio","anio","total","numResearchers","numPapersPorAnio","log","colabsXtotal","colab","find","c","numColabs","density","dato","copiedData","venueDataMap","venueDataMapRelative","currentIndex","currentIndex2","has","venueData","adjustedComponents","values","author","ipNames","paperIndex","findIndex","authorNames","papersWithOneAuthor","porcentajeByYear","numPapersWithSingleAuthor","mappingDate","datasetFiltered","object","Object","keys","uniqueDates","objectDate","countryHighest","highestFrequency","country","Number","countries","datasetsLabels","datasetsData","generateMultipleGraph","filterAuthorsByDecade","authors","startYear","endYear","filteredAuthors","authorYears","existingAuthor","filteredAuthor","statsProlificAuthors","startDecade","floor","endDecade","decades","decade","decadeLabel","decadeStartYear","decadeEndYear","decadeAuthors","label","statsProlificAuthors2","topAuthors","tables","yearsArray","generateTablesDecades2","autor","idChart","data","entry","fill","borderColor","getRandomColor","borderWidth","lineChart","type","plugins","legend","font","size","family","scales","y","display","lineChart2","venue","backgroundColor","allYears","concat","dataset","indexOf","datasetsByGenre","genderKey","existingData","d","sortedData","men","women","hombres","mujeres","organizedYears","countMen","countWoman","generateCircularChart","chartId","chartConfig","ctx","getElementById","colors","barChart","beginAtZero","r","random","g","responseType","parseCommonNames","lines","dict","currentName","currentData","linea","startsWith","frec_paisesStr","substring","lastIndexOf","JSON","parse","_this5","getSelectedTitles","getConferenceOption","getVenueName","venueNameConfirm","show","_","ɵɵdirectiveInject","i1","ApiService","i2","StadisticsService","i3","HttpClient","i4","SpinnerService","_2","selectors","viewQuery","StatisticsComponent_Query","rf","ɵɵtext","ɵɵtemplate","StatisticsComponent_div_214_Template","ɵɵadvance","ɵɵproperty"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/statistics.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { StadisticsService } from '../services/stadistics.service';\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport { HttpClient } from '@angular/common/http';\nimport { CloudData, CloudOptions } from 'angular-tag-cloud-module';\nimport { singular } from 'pluralize';\nimport { ChartConfiguration, ChartData, ChartOptions } from 'chart.js';\nimport { SpinnerService } from '../services/spinner.service';\n\ninterface Author {\n  ipNames: string[];\n  numPublications: number;\n  researcher: string;\n  year: string;\n}\n\ninterface DecadeStats {\n  label: string;\n  startYear: number;\n  endYear: number;\n  authors: Author[];\n}\n\n@Component({\n  selector: 'istics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss'],\n})\n\nexport class StatisticsComponent implements OnInit {\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef;\n\n  selectedTitles: any[] = [];\n  selectedYears: any[] = [];\n  conferenceOption: string = \"\";\n  venueName: any[] = [];\n  papers: any[] = [];\n  collaborations: any[] = [];\n  connectedComponents: any[] = [];\n  singleAuthor: any[] = [];\n  statistics: any[] = [];\n  statsAuthors: any[] = []\n  statsPaper: any[] = []\n  lineChart!: Chart;\n  lineChart2!: Chart;\n  barChart!: Chart;\n  decadeStats: any[] = [];\n  researchers: any[] = [];\n  papersWithAuthors: any[] = [];\n  loadingTable1 = true;\n  loadingTable2 = true;\n  conferenceName: string[] = [];\n  commonNames: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n  options: CloudOptions = {\n    width: 500,\n    height: 200,\n    overflow: false,\n    realignOnResize: false,\n    strict: false,\n    step: 2,\n  };\n  cloudData: CloudData[] = []\n\n  constructor(\n    private apiService: ApiService,\n    private stadisticsService: StadisticsService,\n    private http: HttpClient,\n    private spinnerService: SpinnerService,\n  ) {}\n\n\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n\n  async waitResearcherNoEmpty() {\n    while (!this.researchers || this.researchers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n\n\n\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.researchers = response;\n        this.statsResearchers();\n        this.generateChart('lineChart1', 'Number of authors', this.statsAuthors);\n      },\n      error: (error: any) => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n  }\n\n  getPapers() {\n    this.apiService.getPapers(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.papers = response;\n        this.statsPapers();\n        this.generateChart('lineChart2', 'Number of papers', this.statsPaper);\n      },\n      error: (error: any) => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n\n  getCollaborations() {\n    this.apiService.getCollaborations(this.selectedTitles, this.conferenceOption, this.venueName).subscribe({\n      next: (response: any) => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: (error: any) => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n\n  getConnectedComponents(){\n    this.apiService.getConnectedComponents(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConnectedComponentsByvenue(){\n    this.apiService.getConnectedComponentsByvenue(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n        this.generateChart4('lineChart13', 'Number of Connected Components', this.statistics[7]);\n        \n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConferencebyProceeding(){\n    this.apiService.getConferencebyProceeding(this.selectedTitles, this.venueName).subscribe({\n      next: (response: any) => {\n        this.stadisticsService.conferencesNames = [];\n        this.stadisticsService.years = [];\n        this.stadisticsService.inprocedings = [];\n      \n        response.forEach(({ title, year, numberOfInProceedings }: { title: string, year: string, numberOfInProceedings: number}) => {\n          this.stadisticsService.conferencesNames.push(title);\n          this.stadisticsService.years.push(year);\n          this.stadisticsService.inprocedings.push(numberOfInProceedings);\n        });\n        this.loadingTable1 = false;\n      \n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n     \n      },\n      error: (error: any) => {\n        console.error('Error in getConferencebyProceeding:', error);\n      }\n    });\n  }\n\n  \n  generateTablesProceeding(venueTitles: string[], years: string[], numberOfInProceedings: number[]) {\n    const table = document.querySelector('#tableProceeding tbody');\n    if (table instanceof HTMLElement) {\n      table.innerHTML = ''; // Limpiar tabla existente antes de agregar nuevas filas\n  \n      venueTitles.forEach((venueTitle, index) => {\n        // Divide el título en partes usando la coma como delimitador\n        const parts = venueTitle.split(',');\n\n        if( parts.length== 6){\n            \n          parts[4]= parts[4].replace(\"Proceedings\",\"\");\n          const date = parts[4].split('.')\n          \n\n          // Construye el objeto que contiene los datos para la tabla\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[2] + ',' + parts[3],\n            date: date.slice(0).join(' ')\n          };\n\n          // Crea una fila para la tabla y agrega los datos\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          \n\n          // Agrega la fila a la tabla\n          table.appendChild(row);\n        }\n\n\n        if(parts.length== 5){\n          \n            \n          parts[3] = parts[3].replace(\"Proceedings\",\"\").trim();\n          const date = parts[3].split('.')\n          const hasNumber = /\\d/.test(date[0]);\n\n          if(hasNumber){\n\n            if(parts[1].includes(\"Florence\")){\n \n              const rowData = {\n                name: parts[0],\n                location: parts[1].trim() + ',' + parts[2],\n                date: date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            }else{\n\n              // Construye el objeto que contiene los datos para la tabla\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2],\n                date: date[0]\n              };\n              // Crea una fila para la tabla y agrega los datos\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              // Agrega la fila a la tabla\n              table.appendChild(row);\n            }\n\n          }else{\n\n            // Construye el objeto que contiene los datos para la tabla\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4] \n            };\n\n            // Crea una fila para la tabla y agrega los datos\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            // Agrega la fila a la tabla\n            table.appendChild(row);\n          }\n\n        }\n\n\n        if( parts.length== 7){\n            \n          parts[5]= parts[5].replace(\"Proceedings\",\"\");\n          const date = parts[5].split('.')\n\n          if(parts[2].length > 15){\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[3] + ', ' + parts[4],\n            date: date[0]\n          };\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          table.appendChild(row);\n          }else{\n\n            const isValidFormat = /^[a-zA-Z]+\\s+\\d{1,2}(-\\d{1,2}|\\d{1,2}[a-zA-Z]+\\s+\\d{1,2})$/.test(date[0].trim());\n\n            if(isValidFormat){\n\n              if(parts[2].includes(\"ER\")){\n \n                const rowData = {\n                  name: parts[0] + ',' + parts[1].trim() + '-' +  parts[2] ,\n                  location: parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              }else{\n\n                const rowData = {\n                  name: parts[0] + '-' + parts[1].trim(),\n                  location: parts[2]+ ', ' + parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n    \n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n\n              }\n\n            }else{\n                            \n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4] + ', ' + date[0]\n            };\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            table.appendChild(row);\n            }\n  \n          }       \n        }  \n      });\n    }\n  }\n  \n  \n  async waitAuthorsWithPapersNoEmpty(){\n    while (!this.papersWithAuthors || this.papersWithAuthors.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitSingleAuthorsNoEmpty(){\n    while (!this.singleAuthor || this.singleAuthor.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  getAuthorsPapers() {\n      this.apiService.getAuthorsPapers(this.selectedTitles, this.conferenceOption, this.venueName)\n        .subscribe({\n          next: async (response: any) => {\n            this.singleAuthor = response;\n            this.statsSingleAuthor();\n            this.generateBarChart('barChart1', 'Single Author Papers', this.statistics[4].years, this.statistics[4].porcentajes);          \n          },\n          error: (error: any) => {\n            console.error('Error in getAuthorsPapers:', error);\n          }\n        });\n  }\n\n  /**Function to obtain the distributions of both authors by papers and papers by authors*/\n  getDistributions(){\n    const labels: string[] = ['1', '2', '3', '4', '5 o más'];\n\n    // This represents the number of authors that each paper has.\n    const authorsByPaper: number[] = [1, 2, 3, 4].map((numAuthors) =>\n    this.papersWithAuthors.filter((paper) => paper.numAuthors === numAuthors).length\n    );\n    authorsByPaper[4] = this.papersWithAuthors.filter((paper) => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapers, 0);\n\n    // This represents the number of published papers that each author has.\n    const papersByAuthor: number[] = [1, 2, 3, 4].map((numPubs) =>\n    this.singleAuthor.filter((paper) => paper.numPublications === numPubs).length\n    );\n    papersByAuthor[4] = this.singleAuthor.filter((paper) => paper.numPublications >= 5).length\n    const allAuthors = this.singleAuthor.length;\n\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n    \n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n\n  getDemographicData(){\n      const datasets = this.researchers.map(researcher => {\n        let name = researcher.researcher.properties.name.split(' ')[0];\n        if(name.includes(\"-\")){\n          name = name.split('-')[0];\n        }\n        const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      \n        const datasetByYear = years.map((year: any) => {\n          const info = this.commonNames[name];\n          const genero = info ? info.genero : 'Unknown';\n          const frecuencias = info ? info.frec_paises : {};\n      \n          return {\n            year,\n            name,\n            genero,\n            frecuencias\n          };\n        });\n        return datasetByYear;\n      }).flat(); \n\n      this.statsGender(datasets);\n      this.statsGeography(datasets);\n  }\n\n  generateNGrams(titles: string[], n: number): string[] {\n    const ngrams: string[] = [];\n    titles.forEach((title) => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  \n  countFrequencies(ngrams: string[]): Map<string, number> {\n    const frequencies = new Map<string, number>();\n    ngrams.forEach((ngram) => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n\n  clearTitle(title: string, stopwords: string[]) {\n    // Separate the title into words\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n\n    // We eliminate repetitions of letters and plurals to improve frequency\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    \n    // Filter words to remove stopwords\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n  \n    // Join the filtered words into a new title\n    const newTitle = filteredWords.join(' ');\n    \n    return newTitle;\n  }\n\n  getTopN(frequencies: Map<string, number>, n: number): [string, number][] {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n\n  getTopicAnalysis(){\n\n      // We require natural to tokenize and remove stopwords, and calculate frequencies\n      const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n\n      const cleanTitles = this.papersWithAuthors.map(paper => {\n        const ipName = this.clearTitle(paper.ipName, stopwords);\n        const year = parseInt(paper.year);\n        return { ipName, year };\n      });\n\n      const bigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 2);\n      const trigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 3);\n\n      const bigramFrequencies = this.countFrequencies(bigrams);\n      const trigramFrequencies = this.countFrequencies(trigrams);\n\n      const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n      const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n\n    \n      const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n    \n      const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n\n      const table1 = document.querySelector('#tableBigramas tbody');\n      const table2 = document.querySelector('#tableTrigramas tbody');\n    \n      if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n        top20BigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table1.appendChild(row);\n        });\n      \n        top20TrigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table2.appendChild(row);\n        });\n      }\n\n      const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n      \n      combinedData.sort((a, b) => b.count - a.count);\n\n      const maxFrecuencia = combinedData[0].count;\n      const minWeight = 0;\n      const maxWeight = 20;\n\n\n      const wordCloudData = combinedData.map((item, index) => ({\n        text: item.ngram,\n        weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n        color: this.randomColor()\n      }));\n\n      this.cloudData = wordCloudData;\n     \n  }\n  \n  calculateWeight(frec: number, maxFrec: number, minWeight: number, maxWeight: number): number {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n\n  /**\n   * ############################################\n   */\n\n  statsResearchers() {\n    const names = new Set(this.researchers.map(researcher => researcher.name));\n    this.statsAuthors = Array.from(names).map(name => {\n      const years = this.selectedTitles.map(titulo => titulo.properties.name);\n      const numResearchersPorAnio = years.map(anio =>\n        this.researchers.reduce((total, researcher) => {\n          if (researcher.name === name && researcher.years.includes(anio)) {\n            return total + 1;\n          }\n          return total;\n        }, 0)\n      );\n      return {\n        name: name,\n        years: years,\n        numResearchers: numResearchersPorAnio\n      };\n    });\n  }\n  \n  statsPapers() {\n    const names = new Set(this.papers.map(paper => paper.name));\n    this.statsPaper = Array.from(names).map(name => {\n      const years = this.papers.map(paper => paper.year);\n      const numPapersPorAnio = years.map(year =>\n        this.papers.reduce((total, paper) => {\n          if (paper.name === name && paper.year === year) {\n            return total + paper.numPapers;\n          }\n          return total;\n        }, 0)\n      );\n      console.log(names)\n      return {\n        name: name,\n        years: years,\n        numResearchers: numPapersPorAnio\n      };\n    });\n    console.log(this.statsPaper)\n  }  \n\n  statsColaboraciones(){    \n    const colabsXtotal = this.papers.map(paper => {\n      const colab = this.collaborations.find(c => c.year === paper.year);\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapers: paper.numPapers\n      };\n    });\n\n    const density = colabsXtotal.map(dato => {\n      const { year, numColabs, numPapers } = dato;\n      const density = numColabs / numPapers;\n      return { density, year };\n    });\n\n    this.statistics[3] = {\n      years: density.map(dato => dato.year),\n      densidades: density.map(dato => dato.density)\n    };\n  }\n\n\n\n  statsConnectedComponents() {\n    // Copiar los datos originales para no afectar el orden original\n    const copiedData = [...this.connectedComponents];\n\n    // Ordenar los datos por año\n    copiedData.sort((a, b) => a.year - b.year);\n\n    // Extraer los años y componentes conectados ordenados\n    const years = copiedData.map(item => item.year);\n    const connectedComponents = copiedData.map(item => item.connectedComponents);\n  \n    this.statistics[5] = {\n        years: years,\n        connectedComponents: connectedComponents\n        // Puedes agregar otras propiedades si es necesario\n    };\n}\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap: Map<string, { years: any[], connectedComponents: any[], venueName: string, index?: number } | undefined> = new Map();\n    const venueDataMapRelative: Map<string, { years: any[], connectedComponents: any[], venueName: string, index?: number } | undefined> = new Map();\n\n    let currentIndex = 0;\n    let currentIndex2 = 0;\n\n    this.connectedComponents.forEach((item) => {\n      const venueName = item.venueName;\n\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n          index: currentIndex\n        });\n\n        currentIndex++;  \n      }\n\n      const venueData = venueDataMap.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        venueData.connectedComponents.push(item.connectedComponents);\n      }\n    });\n\n    this.connectedComponents.forEach((item) => {\n      const venueName = item.venueName;\n\n      if (!venueDataMapRelative.has(venueName)) {\n        venueDataMapRelative.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n          index: currentIndex2\n        });\n\n        currentIndex2++;  \n      }\n\n      const venueData = venueDataMapRelative.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        let adjustedComponents = item.connectedComponents;\n        while (adjustedComponents > 1) {\n          adjustedComponents /= 10;\n        }\n  \n        venueData.connectedComponents.push(adjustedComponents);\n      }\n    });\n\n    this.statistics[6] = Array.from(venueDataMap.values());\n    this.statistics[7] = Array.from(venueDataMapRelative.values());\n  }\n  \n\n  statsSingleAuthor() {\n    \n    const papersWithAuthors: { ipName: string, numAuthors: number, authorNames: string[], year: string }[] = [];\n\n    // Map all the researchers, to create papersWithAuthors, which is an array that has the name of a publication\n    // and the authors who have contributed to it.\n    this.singleAuthor.forEach((author: { ipNames: string[], researcher: string, year: string }) => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n            papersWithAuthors.push({\n              ipName,\n              numAuthors: 1,\n              authorNames: [author.researcher],\n              year: author.year\n            });\n          }\n        });\n    });\n\n    this.papersWithAuthors = papersWithAuthors;\n\n    // We get all the entries whose author is one, for the statistics\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = (numPapersWithSingleAuthor / numPapers) * 100;\n    \n      return { year, percentage };\n    });\n    \n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n  }  \n\n  statsGeography(datasets: any[]){\n    const mappingDate: {[date: string]: {[country: string]: number}} = {};\n    const datasetFiltered = datasets.filter((object: any) => Object.keys(object.frecuencias).length > 0);\n    \n    // Obtener todas las fechas únicas\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n\n    // Iterar sobre las fechas\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n\n      // Crear objeto de mapeo para la fecha actual\n      mappingDate[date] = {};\n  \n    for (const object of objectDate) {\n      let countryHighest = '';\n      let highestFrequency = -1;\n\n      for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if(!(countryHighest in mappingDate[date])){\n          mappingDate[date][countryHighest] = 1;\n        }else{\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n\n    // We normalize values according to their total\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country]/total).toFixed(4));\n      }\n    }\n\n    const years = Object.keys(mappingDate); // Get the keys of the years\n    const countries = Object.keys(mappingDate[years[0]]); // Get country names\n    const datasetsLabels = countries; // Labels of the data sets will be the names of the countries \n\n    // Create the data matrix for the countries\n    const datasetsData = countries.map((country) =>\n      years.map((year) => mappingDate[year][country])\n    );\n\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n    \n  }\n\n  filterAuthorsByDecade(authors: Author[], startYear: number, endYear: number): Author[] {\n    const filteredAuthors: Author[] = [];\n  \n    // Browse the original authors\n    authors.forEach((author) => {\n      // Check if the author is within the specified decade\n      const authorYears = author.year.split(\",\").map(Number).filter((year) => year >= startYear && year <= endYear);\n\n      if (authorYears.length > 0) {\n        // Search if there is already a merged author with the same name and decade\n        const existingAuthor = filteredAuthors.find((filteredAuthor) => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Merge the existing author's entries with the current author's entries\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Add the current author to the list of filtered authors\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n\n    return filteredAuthors;\n  }\n\n  statsProlificAuthors(selectedYears: number[]): DecadeStats[] {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n  \n    // Generate the decades within the selected year range\n    const decades: DecadeStats[] = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n  \n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }  \n    // Sort authors by number of publications in each decade\n    decades.forEach((decade) => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20){\n        decade.authors = decade.authors.slice(0, 20); \n      } \n    });\n  \n    // Return the decades with the authors ordered\n    return decades;\n  }\n\n  statsProlificAuthors2(selectedYears: number[]) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n  \n    const tables = {\n      'degree': document.querySelector('#degree tbody'),\n    };\n  \n    for (const author of topAuthors) {\n      const table = tables['degree'];\n  \n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n\n  \n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n  \n        table.appendChild(row);\n      }\n    }\n\n  }\n\n  generateTablesDecades2(decadeStats: any[]){\n    const tables: { [key: string]: HTMLElement | null } = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody'),\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n  \n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach((autor: { researcher: any; numPublications: any; year: any; }) => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n  \n          table.appendChild(row);\n        });\n      }\n    }\n  }\n\n  generateChart(idChart: string, label: string, data: any[]) {\n    const datasets = data.map((entry, index) => ({\n      label: entry.name,\n      data: entry.numResearchers,\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n  \n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: data[0].years,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        },\n      }\n    });\n  }\n\n  generateChart3(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart==\"lineChart2\" || idChart==\"lineChart11\" || idChart==\"lineChart3\"){\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    \n   \n  }\n\n  generateChart4(idChart: string, label: string, venueDataMap: any) {\n    const datasets = venueDataMap.map((venue: any) => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        backgroundColor: 'rgba(0, 0, 0, 0.1)',\n        borderColor: this.getRandomColor(venue.index)\n      };\n    });\n  \n    const allYears = Array.from(new Set([].concat(...datasets.map((dataset: any) => dataset.years))));\n    allYears.sort();\n  \n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets.map((dataset: any) => {\n          return {\n            label: dataset.label,\n            data: allYears.map(year => {\n              const index = dataset.years.indexOf(year);\n              return index !== -1 ? dataset.data[index] : null;\n            }),\n            backgroundColor: 'rgba(0, 0, 0, 0.1)',\n            borderColor: dataset.borderColor,\n          };\n        })\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        },\n      }\n    });\n  }\n  \n\n  statsGender(datasets: any[]){\n    const datasetsByGenre: { [genero: string]: { year: string; count: number }[] } = {};\n\n      datasets.forEach((data: { year: any; genero: any; }) => {\n        const { year, genero } = data;\n        \n        let genderKey = '';\n        \n        if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n          genderKey = 'Men';\n        } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n          genderKey = 'Women';\n        } else{\n          genderKey = 'Unknown';\n        }\n        \n        if (!datasetsByGenre[genderKey]) {\n          datasetsByGenre[genderKey] = [];\n        }\n        \n        const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n        \n        if (existingData) {\n          existingData.count++;\n        } else {\n          datasetsByGenre[genderKey].push({\n            year,\n            count: 1\n          });\n        }\n      });\n\n      // Create an object to store the ordered data\n      const sortedData: { [anio: string]: { hombres: number; mujeres: number; total: number} } = {};\n      const men = datasetsByGenre['Men'];\n      const women = datasetsByGenre['Women'];\n\n      // Sort men's data\n      men.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        sortedData[year] = { hombres: count, mujeres: 0, total: count };\n      });\n\n      // Sort the women's data and combine it with the men's data\n      women.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        if (sortedData[year]) {\n          sortedData[year].mujeres = count;\n          sortedData[year].total += count;\n        } else {\n          sortedData[year] = { mujeres: count, hombres: 0, total: count };\n        }\n      });\n\n\n      // Get the years sorted\n      const organizedYears = Object.keys(sortedData).sort();\n\n\n      const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres/(sortedData[anio].total)).toFixed(4)));\n      const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres/(sortedData[anio].total)).toFixed(4)));\n\n      \n      this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n      this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n\n  generateMultipleGraph(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      borderColor: this.getRandomColor(index),\n    }));\n  \n    const chartConfig: ChartConfiguration<'line'> = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true,\n          },\n        },\n      },\n    };\n  \n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generateCircularChart(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const colors = ['#FF5733', '#3399FF'];\n\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],  // Cambia la opacidad a un valor más alto\n      borderColor: 'black',\n    }));\n  \n    const chartConfig: ChartConfiguration<'pie'> = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n      },\n    };\n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  \n\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }  \n\n  randomColor(){\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n\n  getRandomColor(index: number) {\n    let colors: Record<number, string> = {\n      0: \"rgba(75, 192, 192, 1)\",\n      1: \"rgba(192, 75, 75, 1)\",\n      2: \"rgba(98, 192, 75, 1)\", \n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n\n    return colors[index];\n  }\n\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', { responseType: 'text' }).subscribe(\n      (data: string) => {\n        this.commonNames = this.parseCommonNames(data);\n      },\n      (error: any) => {\n        console.error('Error al cargar los datos:', error);\n      }\n    );\n  }\n\n  parseCommonNames(data: string) {\n\n    const lines = data.split('\\n');\n    const dict: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n    let currentName = '';\n    let currentData: { frec_paises: { [key: string]: number }, genero: string } = {\n      frec_paises: {},\n      genero: ''\n    };\n  \n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = { frec_paises: {}, genero: '' };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n\n  async main(){\n    try {\n      this.selectedTitles = this.stadisticsService.getSelectedTitles();\n      this.conferenceOption = this.stadisticsService.getConferenceOption();\n      this.venueName = this.stadisticsService.getVenueName();\n      if(this.stadisticsService.venueNameConfirm != this.stadisticsService.getVenueName()){\n        this.getConferencebyProceeding();\n      }else{\n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n      }\n\n      this.getPapers(); \n      this.getAuthorsPapers();\n      this.getResearchersConference();\n      this.getConferencebyProceeding();\n      if(this.researchers.length == 0){\n        await this.waitResearcherNoEmpty();\n        this.getDemographicData();\n        this.getCollaborations();\n      } else{\n        this.getDemographicData();\n        this.getCollaborations();\n      }      \n\n      if(this.papersWithAuthors.length == 0){\n        await this.waitAuthorsWithPapersNoEmpty();\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }else{\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }\n      \n      if(this.singleAuthor.length == 0){\n        await this.waitSingleAuthorsNoEmpty();\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }else{\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }\n      this.statsProlificAuthors2(this.selectedYears);\n \n      this.getConnectedComponents();\n      this.getConnectedComponentsByvenue();\n\n      while(this.stadisticsService.conferencesNames.length <1){\n        this.loadingTable1 = true;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.spinnerService.show()\n      }\n      this.loadingTable1 = false;\n      this.stadisticsService.venueNameConfirm = this.stadisticsService.getVenueName();\n\n     \n  } catch (error) {\n    console.error('Error in getData with:', error);\n  }\n  }\n\n}","<div>\n  <h2>Statistics</h2>\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Authors by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart1\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Papers by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart2\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Density evolution over the years</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart3\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Percentage of single-author papers per year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChart1\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Distributions of authors per paper and of papers per author</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n      <table id=\"authorsTable\">\n        <thead>\n          <tr>\n            <th>Author</th>\n            <th>Papers (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"papersTable\">\n        <thead>\n          <tr>\n            <th>Papers</th>\n            <th>Author (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\"> Percentage of Publications Men-Women / Year</h3>\n  <div class=\"flex-container2\">\n\n    <div class=\"graph-bars\">\n\n        <div class=\"canvas-container1\">\n          <div class=\"legend\">\n            <div class=\"men\"></div> Men\n            <div class=\"women\"></div> Women\n          </div>\n          <canvas class=\"circular\" id=\"lineChart4\"></canvas>\n        </div>\n        \n    </div>\n\n    <div class=\"graph-bars2\">\n      <div class=\"canvas-container2\">\n        <canvas id=\"lineChart8\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3> Percentage of publications by Country / Year</h3>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\"> \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart5\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most frequent Bigrams and Trigrams</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n        <table id=\"tableBigramas\">\n          <thead>\n            <tr>\n              <th>Bigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"tableTrigramas\">\n          <thead>\n            <tr>\n              <th>Trigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Frequent terms from all titles of papers</h3>\n  <div class=\"conceptual\">\n    <angular-tag-cloud [config]=\"options\" [data]=\"cloudData\"></angular-tag-cloud>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most prolific authors according to their number of publications accumulated by decade</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"table90\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (a) 1989-1999\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"table00\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (b) 1999-2009\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"table10\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2009-2019\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n  </div>\n  <div class=\"linev\"></div>\n  <div class=\"table\">\n      <table id=\"table20\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2019-2024\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <h3>Authors with their first and most recent year of publication</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"degree\">\n          <thead>\n            <tr>\n              <th>Author</th>\n              <th>Degree</th>\n              <th>First <br> year</th>\n              <th>Recent <br> year</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <h3>Proceeding by Conference</h3>\n  <div class=\"container-table2\">\n   \n    <div class=\"table\">\n      <table id=\"tableProceeding\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Year</th>\n            <th>numberOfInProceedings</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n  <div class=\"overlay\" *ngIf=\"loadingTable1\">\n    <app-spinner></app-spinner>\n  </div>\n  \n\n  <hr class=\"line3\">\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>All Connected Components by year</h3>\n  \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart11\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Connected components for each Conference by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart12\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <h3>Relative size of components connected by conference</h3>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\"> \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart13\"></canvas>\n      </div>\n    </div>\n  </div>\n\n\n  \n</div>\n\n\n\n\n\n \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}