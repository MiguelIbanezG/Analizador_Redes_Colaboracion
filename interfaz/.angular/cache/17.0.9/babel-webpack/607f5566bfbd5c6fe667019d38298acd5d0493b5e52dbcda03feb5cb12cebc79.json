{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Chart, registerables } from 'chart.js';\nimport { singular } from 'pluralize';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/api.service\";\nimport * as i2 from \"../services/stadistics.service\";\nimport * as i3 from \"@angular/common/http\";\nimport * as i4 from \"../services/spinner.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"angular-tag-cloud-module\";\nimport * as i7 from \"../spinner/spinner.component\";\nconst _c0 = [\"chartCanvas\"];\nfunction StatisticsComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵelement(1, \"app-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StatisticsComponent_div_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵelement(1, \"app-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StatisticsComponent_div_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵelement(1, \"app-spinner\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction StatisticsComponent_div_230_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 53);\n    i0.ɵɵelement(1, \"app-spinner\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", ctx_r3.papers.length < 1);\n  }\n}\nChart.register(...registerables);\nexport class StatisticsComponent {\n  constructor(apiService, stadisticsService, http, spinnerService) {\n    this.apiService = apiService;\n    this.stadisticsService = stadisticsService;\n    this.http = http;\n    this.spinnerService = spinnerService;\n    this.selectedYears = [];\n    this.papers = [];\n    this.collaborations = [];\n    this.connectedComponents = [];\n    this.singleAuthor = [];\n    this.statistics = [];\n    this.statsAuthors = [];\n    this.statsPaper = [];\n    this.journalsCount = 0;\n    this.ConferencesCount = 0;\n    this.ConferencesAuthors = 0;\n    this.totalAuthorsByYear = [];\n    this.PapersAndArticlesByYear = [];\n    this.totalArticlesByYear = [];\n    this.totalPapersByYear = [];\n    this.singlePapers = [];\n    this.decadeStats = [];\n    this.researchers = [];\n    this.papersWithAuthors = [];\n    this.loadingTable1 = true;\n    this.loadingTable2 = true;\n    this.conferenceName = [];\n    this.commonNames = {};\n    this.options = {\n      width: 500,\n      height: 200,\n      overflow: false,\n      realignOnResize: false,\n      strict: false,\n      step: 2\n    };\n    this.cloudData = [];\n  }\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: response => {\n        this.researchers = [];\n        this.researchers = response;\n        this.statsResearchers();\n        this.statsTotalAuthorsByYear();\n        if (this.researchers.length > 1) {\n          if (this.lineChart) {\n            this.lineChart.destroy();\n          }\n          this.generateChart('lineChart1', 'Number of authors', this.statsAuthors);\n          this.generateTotalAuthorsChart('lineChart6', 'Total Authors by Year', this.totalAuthorsByYear);\n        }\n      },\n      error: error => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n  }\n  getPapersAndArticles() {\n    this.apiService.getPapersAndArticles(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: response => {\n        this.papers = response;\n        this.statsPapers();\n        this.statsTotalPapersByYear();\n        if (this.papers.length > 0) {\n          this.generateChart('lineChart2', 'Number of papers', this.statsPaper);\n          this.generateTotalAuthorsChart('lineChart7', 'Total Papers by Year', this.PapersAndArticlesByYear);\n        }\n      },\n      error: error => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n  getCollaborations() {\n    this.apiService.getCollaborations(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: response => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: error => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n  getConnectedComponents() {\n    this.apiService.getConnectedComponents(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConnectedComponentsByvenue() {\n    this.apiService.getConnectedComponentsByvenue(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: response => {\n        this.connectedComponents = response;\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n        this.generateChart4('lineChart13', 'Number of Connected Components', this.statistics[7]);\n      },\n      error: error => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n  getConferencebyProceeding() {\n    console.log(this.stadisticsService.selectedTitles);\n    this.apiService.getConferencebyProceeding(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: response => {\n        this.stadisticsService.conferencesNames = [];\n        this.stadisticsService.years = [];\n        this.stadisticsService.inprocedings = [];\n        response.forEach(({\n          title,\n          year,\n          numberOfInProceedings\n        }) => {\n          this.stadisticsService.conferencesNames.push(title);\n          this.stadisticsService.years.push(year);\n          this.stadisticsService.inprocedings.push(numberOfInProceedings);\n        });\n        this.loadingTable1 = false;\n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n      },\n      error: error => {\n        console.error('Error in getConferencebyProceeding:', error);\n      }\n    });\n  }\n  getAuthorsPapers() {\n    var _this = this;\n    console.log(this.stadisticsService.selectedTitles);\n    this.apiService.getAuthorsPapers(this.stadisticsService.selectedTitles, this.stadisticsService.conferenceOption, this.stadisticsService.venueName).subscribe({\n      next: function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          _this.singleAuthor = response;\n          _this.statsSingleAuthor();\n        });\n        return function next(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      error: error => {\n        console.error('Error in getAuthorsPapers:', error);\n      }\n    });\n  }\n  statsTotalAuthorsByYear() {\n    const years = this.stadisticsService.selectedTitles;\n    years.sort((a, b) => parseInt(a) - parseInt(b));\n    this.totalAuthorsByYear = years.map(year => {\n      const totalAuthors = this.researchers.reduce((total, researcher) => {\n        if (researcher.years.includes(year)) {\n          return total + 1;\n        }\n        return total;\n      }, 0);\n      return {\n        year: year,\n        totalAuthors: totalAuthors\n      };\n    });\n  }\n  statsTotalPapersByYear() {\n    let years = this.papers.map(paper => paper.year);\n    years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n    years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n    const papersByYear = this.papers.filter(paper => paper.type === \"Paper\");\n    const articlesByYear = this.papers.filter(paper => paper.type === \"Article\");\n    this.PapersAndArticlesByYear = years.map(year => {\n      const papersOfYear = papersByYear.filter(paper => paper.year === year);\n      const articlesOfYear = articlesByYear.filter(article => article.year === year);\n      const totalPapers = papersOfYear.reduce((total, paper) => {\n        return total + paper.numPapersAndArticles.low;\n      }, 0);\n      const totalArticles = articlesOfYear.reduce((total, article) => {\n        return total + article.numPapersAndArticles.low;\n      }, 0);\n      return {\n        year: year,\n        totalPapers: totalPapers,\n        totalArticles: totalArticles\n      };\n    });\n    this.generateTotalAuthorsChart('lineChart7', 'Total Papers and Articles by Year', this.PapersAndArticlesByYear);\n  }\n  generateTablesProceeding(venueTitles, years, numberOfInProceedings) {\n    const table = document.querySelector('#tableProceeding tbody');\n    if (table instanceof HTMLElement) {\n      table.innerHTML = '';\n      venueTitles.forEach((venueTitle, index) => {\n        const parts = venueTitle.split(',');\n        if (parts.length == 6) {\n          parts[4] = parts[4].replace(\"Proceedings\", \"\");\n          const date = parts[4].split('.');\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[2] + ',' + parts[3],\n            date: date.slice(0).join(' ')\n          };\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          table.appendChild(row);\n        }\n        if (parts.length == 5) {\n          parts[3] = parts[3].replace(\"Proceedings\", \"\").trim();\n          const date = parts[3].split('.');\n          const hasNumber = /\\d/.test(date[0]);\n          if (hasNumber) {\n            if (parts[1].includes(\"Florence\")) {\n              const rowData = {\n                name: parts[0],\n                location: parts[1].trim() + ',' + parts[2],\n                date: date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            } else {\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2],\n                date: date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            }\n          } else {\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4]\n            };\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            table.appendChild(row);\n          }\n        }\n        if (parts.length == 7) {\n          parts[5] = parts[5].replace(\"Proceedings\", \"\");\n          const date = parts[5].split('.');\n          if (parts[2].length > 15) {\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[3] + ', ' + parts[4],\n              date: date[0]\n            };\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            table.appendChild(row);\n          } else {\n            const isValidFormat = /^[a-zA-Z]+\\s+\\d{1,2}(-\\d{1,2}|\\d{1,2}[a-zA-Z]+\\s+\\d{1,2})$/.test(date[0].trim());\n            if (isValidFormat) {\n              if (parts[2].includes(\"ER\")) {\n                const rowData = {\n                  name: parts[0] + ',' + parts[1].trim() + '-' + parts[2],\n                  location: parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              } else {\n                const rowData = {\n                  name: parts[0] + '-' + parts[1].trim(),\n                  location: parts[2] + ', ' + parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              }\n            } else {\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2] + ', ' + parts[3],\n                date: parts[4] + ', ' + date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            }\n          }\n        }\n      });\n    }\n  }\n  /**Function to obtain the distributions of both authors by papers and papers by authors*/\n  getDistributions() {\n    const labels = ['1', '2', '3', '4', '5 o más'];\n    // This represents the number of authors that each paper has.\n    const authorsByPaper = [1, 2, 3, 4].map(numAuthors => this.papersWithAuthors.filter(paper => paper.numAuthors === numAuthors).length);\n    authorsByPaper[4] = this.papersWithAuthors.filter(paper => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapersAndArticles.low, 0);\n    // This represents the number of published papers that each author has.\n    const papersByAuthor = [1, 2, 3, 4].map(numPubs => this.singleAuthor.filter(paper => paper.numPublications === numPubs).length);\n    papersByAuthor[4] = this.singleAuthor.filter(paper => paper.numPublications >= 5).length;\n    const allAuthors = this.singleAuthor.length;\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n  getDemographicData() {\n    const datasets = this.researchers.map(researcher => {\n      let name = researcher.researcher.properties.name.split(' ')[0];\n      if (name.includes(\"-\")) {\n        name = name.split('-')[0];\n      }\n      const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      const datasetByYear = years.map(year => {\n        const info = this.commonNames[name];\n        const genero = info ? info.genero : 'Unknown';\n        const frecuencias = info ? info.frec_paises : {};\n        return {\n          year,\n          name,\n          genero,\n          frecuencias\n        };\n      });\n      return datasetByYear;\n    }).flat();\n    this.statsGender(datasets);\n    this.statsGeography(datasets);\n  }\n  generateNGrams(titles, n) {\n    const ngrams = [];\n    titles.forEach(title => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  countFrequencies(ngrams) {\n    const frequencies = new Map();\n    ngrams.forEach(ngram => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n  clearTitle(title, stopwords) {\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n    const newTitle = filteredWords.join(' ');\n    return newTitle;\n  }\n  getTopN(frequencies, n) {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n  getTopicAnalysis() {\n    const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n    const cleanTitles = this.papersWithAuthors.map(paper => {\n      const ipName = this.clearTitle(paper.ipName, stopwords);\n      const year = parseInt(paper.year);\n      return {\n        ipName,\n        year\n      };\n    });\n    const bigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 2);\n    const trigrams = this.generateNGrams(cleanTitles.map(paper => paper.ipName), 3);\n    const bigramFrequencies = this.countFrequencies(bigrams);\n    const trigramFrequencies = this.countFrequencies(trigrams);\n    const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n    const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n    const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: cleanTitles.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const table1 = document.querySelector('#tableBigramas tbody');\n    const table2 = document.querySelector('#tableTrigramas tbody');\n    if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n      top20BigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table1.appendChild(row);\n      });\n      top20TrigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table2.appendChild(row);\n      });\n    }\n    const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n    combinedData.sort((a, b) => b.count - a.count);\n    const maxFrecuencia = combinedData[0].count;\n    const minWeight = 0;\n    const maxWeight = 20;\n    const wordCloudData = combinedData.map((item, index) => ({\n      text: item.ngram,\n      weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n      color: this.randomColor()\n    }));\n    this.cloudData = wordCloudData;\n  }\n  calculateWeight(frec, maxFrec, minWeight, maxWeight) {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n  statsResearchers() {\n    const names = new Set(this.researchers.map(researcher => researcher.name));\n    this.ConferencesAuthors = names.size;\n    this.statsAuthors = [];\n    this.statsAuthors = Array.from(names).map(name => {\n      const years = this.stadisticsService.selectedTitles;\n      years.sort((a, b) => parseInt(a) - parseInt(b));\n      this.selectedYears = years;\n      const numResearchersPorAnio = years.map(anio => this.researchers.reduce((total, researcher) => {\n        if (researcher.name === name && researcher.years.includes(anio)) {\n          return total + 1;\n        }\n        return total;\n      }, 0));\n      return {\n        name: name,\n        years: years,\n        numResearchers: numResearchersPorAnio\n      };\n    });\n  }\n  statsPapers() {\n    const names = new Set(this.papers.map(paper => paper.name));\n    this.ConferencesCount = names.size;\n    this.statsPaper = Array.from(names).map(name => {\n      let years = this.papers.map(paper => paper.year);\n      years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n      years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n      const numPapersAndArticlesPorAnio = years.map(year => this.papers.reduce((total, paper) => {\n        const numPapersAndArticles = paper.numPapersAndArticles.low;\n        if (paper.name === name && paper.year === year) {\n          return total + numPapersAndArticles;\n        }\n        return total;\n      }, 0));\n      return {\n        name: name,\n        years: years,\n        numResearchers: numPapersAndArticlesPorAnio\n      };\n    });\n  }\n  statsColaboraciones() {\n    let colabsXtotal = [];\n    const colabsPapers = this.papers.map(paper => {\n      const colab = this.collaborations.find(c => c.year === paper.year);\n      const integer = paper.numPapersAndArticles.low;\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapersAndArticles: integer\n      };\n    });\n    colabsXtotal = colabsXtotal.concat(colabsPapers);\n    const densidadesPorAño = {};\n    colabsXtotal.forEach(dato => {\n      const {\n        year,\n        numColabs,\n        numPapersAndArticles\n      } = dato;\n      if (!densidadesPorAño[year]) {\n        densidadesPorAño[year] = 0;\n      }\n      densidadesPorAño[year] += numColabs / numPapersAndArticles;\n    });\n    const density = Object.entries(densidadesPorAño).map(([year, density]) => ({\n      year: parseInt(year),\n      density\n    }));\n    this.statistics[3] = {\n      years: density.map(dato => dato.year),\n      densidades: density.map(dato => dato.density)\n    };\n  }\n  statsConnectedComponents() {\n    const copiedData = [...this.connectedComponents];\n    copiedData.sort((a, b) => a.year - b.year);\n    const years = copiedData.map(item => item.year);\n    const connectedComponents = copiedData.map(item => item.connectedComponents);\n    this.statistics[5] = {\n      years: years,\n      connectedComponents: connectedComponents\n    };\n  }\n  statsConnectedComponentsByvenue() {\n    const venueDataMap = new Map();\n    const venueDataMapRelative = new Map();\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName\n        });\n      }\n      const venueData = venueDataMap.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        venueData.connectedComponents.push(item.connectedComponents);\n      }\n    });\n    this.connectedComponents.forEach(item => {\n      const venueName = item.venueName;\n      if (!venueDataMapRelative.has(venueName)) {\n        venueDataMapRelative.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName\n        });\n      }\n      const venueData = venueDataMapRelative.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        let adjustedComponents = item.connectedComponents;\n        while (adjustedComponents > 1) {\n          adjustedComponents /= 10;\n        }\n        venueData.connectedComponents.push(adjustedComponents);\n      }\n    });\n    this.statistics[6] = Array.from(venueDataMap.values());\n    this.statistics[7] = Array.from(venueDataMapRelative.values());\n  }\n  statsSingleAuthor() {\n    const papersWithAuthors = [];\n    this.singleAuthor.forEach(author => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n          papersWithAuthors.push({\n            ipName,\n            numAuthors: 1,\n            authorNames: [author.researcher],\n            year: author.year\n          });\n        }\n      });\n    });\n    this.papersWithAuthors = papersWithAuthors;\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapersAndArticles = paper.numPapersAndArticles.low;\n      const numPapersAndArticlesWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = numPapersAndArticlesWithSingleAuthor / numPapersAndArticles * 100;\n      return {\n        year,\n        percentage\n      };\n    });\n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n    let years = this.statistics[4].years;\n    let porcentajes = this.statistics[4].porcentajes;\n    let datosPorAño = {};\n    for (let i = 0; i < years.length; i++) {\n      let year = years[i];\n      let porcentaje = porcentajes[i];\n      if (!datosPorAño[year]) {\n        datosPorAño[year] = [porcentaje];\n      } else {\n        datosPorAño[year].push(porcentaje);\n      }\n    }\n    let añosUnicos = [];\n    let porcentajesMedios = [];\n    for (let año in datosPorAño) {\n      let porcentajesAño = datosPorAño[año];\n      let media = porcentajesAño.reduce((acc, curr) => acc + curr, 0) / porcentajesAño.length;\n      añosUnicos.push(año);\n      porcentajesMedios.push(media);\n    }\n    this.statistics[4] = [];\n    this.statistics[4].years = añosUnicos;\n    this.statistics[4].porcentajes = porcentajesMedios;\n    this.singlePapers = this.statistics[4];\n    this.generateBarChart('barChart1', 'Single Author Papers and Single Author Journals', this.statistics[4].years, this.statistics[4].porcentajes);\n  }\n  statsGeography(datasets) {\n    const mappingDate = {};\n    const datasetFiltered = datasets.filter(object => Object.keys(object.frecuencias).length > 0);\n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n      mappingDate[date] = {};\n      for (const object of objectDate) {\n        let countryHighest = '';\n        let highestFrequency = -1;\n        for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if (!(countryHighest in mappingDate[date])) {\n          mappingDate[date][countryHighest] = 1;\n        } else {\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country] / total).toFixed(4));\n      }\n    }\n    const years = Object.keys(mappingDate);\n    const countries = Object.keys(mappingDate[years[0]]);\n    const datasetsLabels = countries;\n    const datasetsData = countries.map(country => years.map(year => mappingDate[year][country]));\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n  }\n  filterAuthorsByDecade(authors, startYear, endYear) {\n    const filteredAuthors = [];\n    authors.forEach(author => {\n      const authorYears = author.year.split(\",\").map(Number).filter(year => year >= startYear && year <= endYear);\n      if (authorYears.length > 0) {\n        const existingAuthor = filteredAuthors.find(filteredAuthor => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n    return filteredAuthors;\n  }\n  statsProlificAuthors(selectedYears) {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n    // Generate the decades within the selected year range\n    const decades = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }\n    // Sort authors by number of publications in each decade\n    decades.forEach(decade => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20) {\n        decade.authors = decade.authors.slice(0, 20);\n      }\n    });\n    // Return the decades with the authors ordered\n    return decades;\n  }\n  statsProlificAuthors2(selectedYears) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n    const tables = {\n      'degree': document.querySelector('#degree tbody')\n    };\n    for (const author of topAuthors) {\n      const table = tables['degree'];\n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n        table.appendChild(row);\n      }\n    }\n  }\n  generateTablesDecades2(decadeStats) {\n    const tables = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody')\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach(autor => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n          table.appendChild(row);\n        });\n      }\n    }\n  }\n  generateTotalPapersAndArticles(idChart, label, data, data2) {\n    const years = data.map(entry => entry.year);\n    if (idChart == \"lineChart7\") {\n      this.lineChart7 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [{\n            label: 'Papers',\n            data: this.totalPapersByYear,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }, {\n            label: 'Articles',\n            data: this.totalArticlesByYear,\n            fill: false,\n            borderColor: 'rgb(68, 0, 22)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateTotalAuthorsChart(idChart, label, data) {\n    const years = data.map(entry => entry.year);\n    const totalAuthors = data.map(entry => entry.totalAuthors);\n    const totalPapers = data.map(entry => entry.totalPapers);\n    const totalArticles = data.map(entry => entry.totalArticles);\n    if (idChart == \"lineChart6\") {\n      this.lineChart6 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [{\n            label: label,\n            data: totalAuthors,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart7\") {\n      this.lineChart7 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [{\n            label: 'Papers',\n            data: totalPapers,\n            fill: false,\n            borderColor: \"rgba(51, 153, 255)\",\n            borderWidth: 1\n          }, {\n            label: 'Articles',\n            data: totalArticles,\n            fill: false,\n            borderColor: \"rgba(255, 0, 0, 1)\",\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart(idChart, label, data) {\n    const datasets = data.map((entry, index) => ({\n      label: entry.name,\n      data: entry.numResearchers,\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n    if (idChart == \"lineChart2\") {\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n    if (idChart == \"lineChart1\") {\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart3(idChart, label, labels, data) {\n    if (idChart == \"lineChart11\" || idChart == \"lineChart3\") {\n      this.lineChart3 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          }\n        }\n      });\n    }\n  }\n  generateChart4(idChart, label, data) {\n    const datasets = data.map((venue, index) => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        fill: false,\n        borderColor: this.getRandomColor(index),\n        borderWidth: 1\n      };\n    });\n    const allYears = Array.from(new Set([].concat(...datasets.map(dataset => dataset.years))));\n    allYears.sort();\n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    });\n  }\n  statsGender(datasets) {\n    const datasetsByGenre = {};\n    datasets.forEach(data => {\n      const {\n        year,\n        genero\n      } = data;\n      let genderKey = '';\n      if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n        genderKey = 'Men';\n      } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n        genderKey = 'Women';\n      } else {\n        genderKey = 'Unknown';\n      }\n      if (!datasetsByGenre[genderKey]) {\n        datasetsByGenre[genderKey] = [];\n      }\n      const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n      if (existingData) {\n        existingData.count++;\n      } else {\n        datasetsByGenre[genderKey].push({\n          year,\n          count: 1\n        });\n      }\n    });\n    const sortedData = {};\n    const men = datasetsByGenre['Men'];\n    const women = datasetsByGenre['Women'];\n    men.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      sortedData[year] = {\n        hombres: count,\n        mujeres: 0,\n        total: count\n      };\n    });\n    women.forEach(dato => {\n      const year = dato.year;\n      const count = dato.count;\n      if (sortedData[year]) {\n        sortedData[year].mujeres = count;\n        sortedData[year].total += count;\n      } else {\n        sortedData[year] = {\n          mujeres: count,\n          hombres: 0,\n          total: count\n        };\n      }\n    });\n    const organizedYears = Object.keys(sortedData).sort();\n    const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres / sortedData[anio].total).toFixed(4)));\n    const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres / sortedData[anio].total).toFixed(4)));\n    this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n    this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n  generateMultipleGraph(chartId, labels, datasetsLabels, datasetsData) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateCircularChart(chartId, labels, datasetsLabels, datasetsData) {\n    const colors = ['#FF5733', '#3399FF'];\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],\n      borderColor: 'black'\n    }));\n    const chartConfig = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generateBarChart(idChart, label, labels, data) {\n    if (idChart = \"barChart1\") {\n      this.barChart = new Chart(idChart, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [{\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto'\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }\n  randomColor() {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n  getRandomColor(index) {\n    let colors = {\n      0: \"rgba(51, 153, 255)\",\n      1: \"rgba(255, 0, 0, 1)\",\n      2: \"rgba(98, 192, 75, 1)\",\n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n    return colors[index];\n  }\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', {\n      responseType: 'text'\n    }).subscribe(data => {\n      this.commonNames = this.parseCommonNames(data);\n    }, error => {\n      console.error('Error al cargar los datos:', error);\n    });\n  }\n  parseCommonNames(data) {\n    const lines = data.split('\\n');\n    const dict = {};\n    let currentName = '';\n    let currentData = {\n      frec_paises: {},\n      genero: ''\n    };\n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = {\n          frec_paises: {},\n          genero: ''\n        };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n  waitResearcherNoEmpty() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this2.researchers || _this2.researchers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitPapersNoEmpty() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this3.papers || _this3.papers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitAuthorsWithPapersNoEmpty() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this4.papersWithAuthors || _this4.papersWithAuthors.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  waitSingleAuthorsNoEmpty() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this5.singleAuthor || _this5.singleAuthor.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  main() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (_this6.stadisticsService.venueNameConfirm != _this6.stadisticsService.getVenueName()) {\n          _this6.getConferencebyProceeding();\n        } else {\n          _this6.generateTablesProceeding(_this6.stadisticsService.conferencesNames, _this6.stadisticsService.years, _this6.stadisticsService.inprocedings);\n        }\n        _this6.getResearchersConference();\n        _this6.getPapersAndArticles();\n        _this6.getConferencebyProceeding();\n        if (_this6.researchers.length == 0) {\n          yield _this6.waitResearcherNoEmpty();\n          _this6.getDemographicData();\n        } else {\n          _this6.getDemographicData();\n        }\n        if (_this6.papers.length == 0) {\n          yield _this6.waitPapersNoEmpty();\n          _this6.getCollaborations();\n          _this6.getAuthorsPapers();\n        } else {\n          _this6.getCollaborations();\n          ;\n          _this6.getAuthorsPapers();\n        }\n        while (_this6.collaborations.length < 1) {\n          _this6.loadingTable2 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n          _this6.spinnerService.show();\n        }\n        _this6.loadingTable2 = false;\n        if (_this6.papersWithAuthors.length == 0) {\n          yield _this6.waitAuthorsWithPapersNoEmpty();\n          _this6.getTopicAnalysis();\n          _this6.getDistributions();\n        } else {\n          _this6.getTopicAnalysis();\n          _this6.getDistributions();\n        }\n        if (_this6.singleAuthor.length == 0) {\n          yield _this6.waitSingleAuthorsNoEmpty();\n          _this6.decadeStats = _this6.statsProlificAuthors(_this6.selectedYears);\n          _this6.generateTablesDecades2(_this6.decadeStats);\n        } else {\n          _this6.decadeStats = _this6.statsProlificAuthors(_this6.selectedYears);\n          _this6.generateTablesDecades2(_this6.decadeStats);\n        }\n        _this6.statsProlificAuthors2(_this6.selectedYears);\n        _this6.getConnectedComponents();\n        _this6.getConnectedComponentsByvenue();\n        while (_this6.stadisticsService.conferencesNames.length < 1) {\n          _this6.loadingTable1 = true;\n          yield new Promise(resolve => setTimeout(resolve, 100));\n          _this6.spinnerService.show();\n        }\n        _this6.loadingTable1 = false;\n        _this6.stadisticsService.venueNameConfirm = _this6.stadisticsService.getVenueName();\n      } catch (error) {\n        console.error('Error in getData with:', error);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function StatisticsComponent_Factory(t) {\n    return new (t || StatisticsComponent)(i0.ɵɵdirectiveInject(i1.ApiService), i0.ɵɵdirectiveInject(i2.StadisticsService), i0.ɵɵdirectiveInject(i3.HttpClient), i0.ɵɵdirectiveInject(i4.SpinnerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StatisticsComponent,\n    selectors: [[\"statistics\"]],\n    viewQuery: function StatisticsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n      }\n    },\n    decls: 249,\n    vars: 15,\n    consts: [[1, \"line_title\"], [1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [\"id\", \"lineChart6\"], [1, \"flex-item\", 3, \"hidden\"], [\"id\", \"lineChart1\"], [1, \"line\"], [\"id\", \"lineChart7\"], [\"id\", \"lineChart2\"], [\"class\", \"overlay2\", 4, \"ngIf\"], [\"id\", \"lineChart3\"], [\"id\", \"barChart1\"], [1, \"special\"], [1, \"container-table\"], [1, \"table\"], [\"id\", \"authorsTable\"], [\"class\", \"overlay3\", 4, \"ngIf\"], [1, \"linev\"], [\"id\", \"papersTable\"], [1, \"flex-container2\"], [1, \"graph-bars\"], [1, \"canvas-container1\"], [1, \"legend\"], [1, \"men\"], [1, \"women\"], [\"id\", \"lineChart4\", 1, \"circular\"], [1, \"graph-bars2\"], [1, \"canvas-container2\"], [\"id\", \"lineChart8\"], [\"id\", \"lineChart5\"], [\"id\", \"tableBigramas\"], [\"id\", \"tableTrigramas\"], [1, \"conceptual\"], [3, \"config\", \"data\"], [1, \"container-table2\"], [\"id\", \"table90\"], [\"colspan\", \"2\"], [\"id\", \"table00\"], [\"id\", \"table10\", 1, \"centered-table\"], [\"id\", \"table20\", 1, \"centered-table\"], [1, \"line3\"], [\"id\", \"degree\"], [1, \"line3\", 3, \"hidden\"], [3, \"hidden\"], [1, \"table\", 3, \"hidden\"], [\"id\", \"tableProceeding\"], [\"class\", \"overlay\", 3, \"hidden\", 4, \"ngIf\"], [\"id\", \"lineChart11\"], [\"id\", \"lineChart12\"], [\"id\", \"lineChart13\"], [1, \"overlay2\"], [1, \"overlay3\"], [1, \"overlay\", 3, \"hidden\"]],\n    template: function StatisticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\", 0);\n        i0.ɵɵelementStart(4, \"div\", 1)(5, \"div\", 2)(6, \"h3\");\n        i0.ɵɵtext(7, \"Authors / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelement(9, \"canvas\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"h3\");\n        i0.ɵɵtext(12, \"Authors by Conference or Journal / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelement(14, \"canvas\", 6);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(15, \"hr\", 7);\n        i0.ɵɵelementStart(16, \"div\", 1)(17, \"div\", 2)(18, \"h3\");\n        i0.ɵɵtext(19, \"Conference Papers and Journal Articles / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 3);\n        i0.ɵɵelement(21, \"canvas\", 8);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 5)(23, \"h3\");\n        i0.ɵɵtext(24, \"Papers and Articles by Conference and Jorunal / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 3);\n        i0.ɵɵelement(26, \"canvas\", 9);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(27, \"hr\", 7);\n        i0.ɵɵelementStart(28, \"div\", 1)(29, \"div\", 2)(30, \"h3\");\n        i0.ɵɵtext(31, \"Density evolution over the years\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 3);\n        i0.ɵɵtemplate(33, StatisticsComponent_div_33_Template, 2, 0, \"div\", 10);\n        i0.ɵɵelement(34, \"canvas\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(35, \"div\", 2)(36, \"h3\");\n        i0.ɵɵtext(37, \"Percentage of single-author publications / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 3);\n        i0.ɵɵelement(39, \"canvas\", 12);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(40, \"hr\", 7);\n        i0.ɵɵelementStart(41, \"h3\", 13);\n        i0.ɵɵtext(42, \"Distributions of authors by paper and article and of papers and articles by author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"div\", 14)(44, \"div\", 15)(45, \"table\", 16)(46, \"thead\")(47, \"tr\")(48, \"th\");\n        i0.ɵɵtext(49, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"th\");\n        i0.ɵɵtext(51, \"Papers/Journal (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(52, \"tbody\");\n        i0.ɵɵtemplate(53, StatisticsComponent_div_53_Template, 2, 0, \"div\", 17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(54, \"div\", 18);\n        i0.ɵɵelementStart(55, \"div\", 15)(56, \"table\", 19)(57, \"thead\")(58, \"tr\")(59, \"th\");\n        i0.ɵɵtext(60, \"Papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"th\");\n        i0.ɵɵtext(62, \"Papers/Journal (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(63, \"tbody\");\n        i0.ɵɵtemplate(64, StatisticsComponent_div_64_Template, 2, 0, \"div\", 17);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(65, \"hr\", 7);\n        i0.ɵɵelementStart(66, \"h3\", 13);\n        i0.ɵɵtext(67, \" Percentage of Publications Men-Women / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"div\", 20)(69, \"div\", 21)(70, \"div\", 22)(71, \"div\", 23);\n        i0.ɵɵelement(72, \"div\", 24);\n        i0.ɵɵtext(73, \" Men \");\n        i0.ɵɵelement(74, \"div\", 25);\n        i0.ɵɵtext(75, \" Women \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(76, \"canvas\", 26);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(77, \"div\", 27)(78, \"div\", 28);\n        i0.ɵɵelement(79, \"canvas\", 29);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(80, \"hr\", 7);\n        i0.ɵɵelementStart(81, \"h3\");\n        i0.ɵɵtext(82, \" Percentage of publications by Country / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"div\", 1)(84, \"div\", 2)(85, \"div\", 3);\n        i0.ɵɵelement(86, \"canvas\", 30);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(87, \"hr\", 7);\n        i0.ɵɵelementStart(88, \"h3\", 13);\n        i0.ɵɵtext(89, \"Most frequent Bigrams and Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(90, \"div\", 14)(91, \"div\", 15)(92, \"table\", 31)(93, \"thead\")(94, \"tr\")(95, \"th\");\n        i0.ɵɵtext(96, \"Bigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(97, \"th\");\n        i0.ɵɵtext(98, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(99, \"th\");\n        i0.ɵɵtext(100, \"First \");\n        i0.ɵɵelement(101, \"br\");\n        i0.ɵɵtext(102, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(103, \"th\");\n        i0.ɵɵtext(104, \"Recent \");\n        i0.ɵɵelement(105, \"br\");\n        i0.ɵɵtext(106, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(107, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(108, \"div\", 18);\n        i0.ɵɵelementStart(109, \"div\", 15)(110, \"table\", 32)(111, \"thead\")(112, \"tr\")(113, \"th\");\n        i0.ɵɵtext(114, \"Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(115, \"th\");\n        i0.ɵɵtext(116, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(117, \"th\");\n        i0.ɵɵtext(118, \"First \");\n        i0.ɵɵelement(119, \"br\");\n        i0.ɵɵtext(120, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(121, \"th\");\n        i0.ɵɵtext(122, \"Recent \");\n        i0.ɵɵelement(123, \"br\");\n        i0.ɵɵtext(124, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(125, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(126, \"hr\", 7);\n        i0.ɵɵelementStart(127, \"h3\", 13);\n        i0.ɵɵtext(128, \"Frequent terms from all titles of papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(129, \"div\", 33);\n        i0.ɵɵelement(130, \"angular-tag-cloud\", 34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(131, \"hr\", 7);\n        i0.ɵɵelementStart(132, \"h3\", 13);\n        i0.ɵɵtext(133, \"Most prolific authors according to their number of publications accumulated by decade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(134, \"div\", 35)(135, \"div\", 15)(136, \"table\", 36)(137, \"thead\")(138, \"tr\")(139, \"th\", 37);\n        i0.ɵɵtext(140, \" (a) 1989-1999 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(141, \"hr\");\n        i0.ɵɵelementStart(142, \"tr\")(143, \"th\");\n        i0.ɵɵtext(144, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(145, \"th\");\n        i0.ɵɵtext(146, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(147, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(148, \"div\", 18);\n        i0.ɵɵelementStart(149, \"div\", 15)(150, \"table\", 38)(151, \"thead\")(152, \"tr\")(153, \"th\", 37);\n        i0.ɵɵtext(154, \" (b) 1999-2009 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(155, \"hr\");\n        i0.ɵɵelementStart(156, \"tr\")(157, \"th\");\n        i0.ɵɵtext(158, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(159, \"th\");\n        i0.ɵɵtext(160, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(161, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(162, \"div\", 18);\n        i0.ɵɵelementStart(163, \"div\", 15)(164, \"table\", 39)(165, \"thead\")(166, \"tr\")(167, \"th\", 37);\n        i0.ɵɵtext(168, \" (a) 2009-2019 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(169, \"hr\");\n        i0.ɵɵelementStart(170, \"tr\")(171, \"th\");\n        i0.ɵɵtext(172, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(173, \"th\");\n        i0.ɵɵtext(174, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(175, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(176, \"div\", 18);\n        i0.ɵɵelementStart(177, \"div\", 15)(178, \"table\", 40)(179, \"thead\")(180, \"tr\")(181, \"th\", 37);\n        i0.ɵɵtext(182, \" (a) 2019-2024 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(183, \"hr\");\n        i0.ɵɵelementStart(184, \"tr\")(185, \"th\");\n        i0.ɵɵtext(186, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(187, \"th\");\n        i0.ɵɵtext(188, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(189, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(190, \"hr\", 41);\n        i0.ɵɵelementStart(191, \"h3\");\n        i0.ɵɵtext(192, \"Authors with their first and most recent year of publication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(193, \"div\", 35)(194, \"div\", 15)(195, \"table\", 42)(196, \"thead\")(197, \"tr\")(198, \"th\");\n        i0.ɵɵtext(199, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(200, \"th\");\n        i0.ɵɵtext(201, \"Degree\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(202, \"th\");\n        i0.ɵɵtext(203, \"First \");\n        i0.ɵɵelement(204, \"br\");\n        i0.ɵɵtext(205, \" year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(206, \"th\");\n        i0.ɵɵtext(207, \"Recent \");\n        i0.ɵɵelement(208, \"br\");\n        i0.ɵɵtext(209, \" year\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(210, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(211, \"hr\", 43);\n        i0.ɵɵelementStart(212, \"h3\", 44);\n        i0.ɵɵtext(213, \"Proceeding by Conference\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(214, \"div\", 35)(215, \"div\", 45)(216, \"table\", 46)(217, \"thead\")(218, \"tr\")(219, \"th\");\n        i0.ɵɵtext(220, \"Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(221, \"th\");\n        i0.ɵɵtext(222, \"Location\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(223, \"th\");\n        i0.ɵɵtext(224, \"Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(225, \"th\");\n        i0.ɵɵtext(226, \"Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(227, \"th\");\n        i0.ɵɵtext(228, \"numberOfInProceedings\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(229, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(230, StatisticsComponent_div_230_Template, 2, 1, \"div\", 47);\n        i0.ɵɵelement(231, \"hr\", 43);\n        i0.ɵɵelementStart(232, \"div\", 1)(233, \"div\", 5)(234, \"h3\");\n        i0.ɵɵtext(235, \"All Connected Components by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(236, \"div\", 3);\n        i0.ɵɵelement(237, \"canvas\", 48);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(238, \"div\", 5)(239, \"h3\");\n        i0.ɵɵtext(240, \"Connected components for each Conference by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(241, \"div\", 3);\n        i0.ɵɵelement(242, \"canvas\", 49);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(243, \"div\", 1)(244, \"div\", 5)(245, \"h3\");\n        i0.ɵɵtext(246, \"Relative size of components connected by conference\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(247, \"div\", 3);\n        i0.ɵɵelement(248, \"canvas\", 50);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"hidden\", ctx.ConferencesAuthors < 2);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1 || ctx.ConferencesCount < 2);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingTable2);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingTable2);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingTable2);\n        i0.ɵɵadvance(66);\n        i0.ɵɵproperty(\"config\", ctx.options)(\"data\", ctx.cloudData);\n        i0.ɵɵadvance(81);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.loadingTable1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"hidden\", ctx.papers.length < 1);\n      }\n    },\n    dependencies: [i5.NgIf, i6.TagCloudComponent, i7.SpinnerComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 40px;\\n  margin-bottom: 0px;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 25px;\\n  margin-bottom: 10px;\\n}\\n\\n.flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-container2[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.graph-bars[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.graph-bars2[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container1[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 91%;\\n}\\n\\n.canvas-container2[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 96%;\\n}\\n\\n.legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  font-size: 18px;\\n  margin-bottom: 20px;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 95%;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 100%; \\n\\n  height: auto;\\n  display: block;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  background-color: rgb(0, 22, 68);\\n}\\n\\n.container-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n  overflow: auto;\\n}\\n\\n.container-table2[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  display: flex;\\n  margin-right: 100px;\\n}\\n\\n.linev[_ngcontent-%COMP%] {\\n  border-right: 1px solid rgb(0, 22, 68);\\n  margin-right: 45px;\\n  margin-left: 20px;\\n}\\n\\n.table[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  vertical-align: middle;\\n  text-align: center;\\n  vertical-align: center;\\n  font-size: 20px;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  min-width: 40px;\\n  min-height: 1px;\\n  margin-right: 5px;\\n}\\n\\n.special[_ngcontent-%COMP%] {\\n  margin-bottom: 40px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(2), #degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n  padding-left: 60px;\\n}\\n\\n#degree[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(4) {\\n  padding-left: 90px;\\n}\\n\\n.men[_ngcontent-%COMP%] {\\n  background-color: rgb(51, 153, 255);\\n}\\n\\n.women[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 87, 51);\\n  margin-left: 20PX;\\n}\\n\\n.line3[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  .legend[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    font-size: 10px;\\n    margin-bottom: 20px;\\n  }\\n  .container-table[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .container-table2[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  .table[_ngcontent-%COMP%] {\\n    border-right: none;\\n    padding-right: 0;\\n    padding-bottom: 20px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   th[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n  #tableInstitution[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]:nth-child(3) {\\n    padding-left: 0px;\\n  }\\n}\\n.conceptual[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 200px;\\n}\\n\\n.overlay[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 10px;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 10;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.overlay2[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 50px;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 10;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.overlay3[_ngcontent-%COMP%] {\\n  position: relative;\\n  top: 10px;\\n  left: 70px;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 10;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\n.line_title[_ngcontent-%COMP%] {\\n  width: 50%;\\n  border-width: 1px;\\n  border-color: black;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvc3RhdGlzdGljcy9zdGF0aXN0aWNzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUNoQjtFQUNFLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGtCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxrQkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxjQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFDRjs7QUFFQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxlQUFBO0VBQ0EsbUJBQUE7QUFDRjs7QUFHQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUFGOztBQUdBO0VBQ0UsZ0NBQUE7RUFDQSxhQUFBO0VBQ0EsVUFBQTtBQUFGOztBQUdBO0VBQ0UsZUFBQSxFQUFBLGlDQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLGdCQUFBO0VBQ0EsbUJBQUE7RUFDQSxnQ0FBQTtBQUFGOztBQUdBO0VBQ0UsV0FBQTtFQUNBLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLGNBQUE7QUFBRjs7QUFHQTtFQUNFLHVCQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0FBQUY7O0FBR0E7RUFDRSxzQ0FBQTtFQUNBLGtCQUFBO0VBQ0EsaUJBQUE7QUFBRjs7QUFJQTtFQUNFLGtCQUFBO0FBREY7O0FBSUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtBQURGOztBQUlBO0VBQ0UsZUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtBQURGOztBQUlBO0VBQ0UsbUJBQUE7QUFERjs7QUFJQTs7RUFFRSxrQkFBQTtBQURGOztBQUdBO0VBQ0Usa0JBQUE7QUFBRjs7QUFHQTtFQUNFLG1DQUFBO0FBQUY7O0FBR0E7RUFDRSxrQ0FBQTtFQUNBLGlCQUFBO0FBQUY7O0FBR0E7RUFDRSxnQkFBQTtFQUNBLG1CQUFBO0FBQUY7O0FBSUE7RUFFRTtJQUNFLGFBQUE7RUFGRjtFQUtBO0lBQ0UsYUFBQTtJQUNBLHVCQUFBO0lBQ0EsZUFBQTtJQUNBLG1CQUFBO0VBSEY7RUFLQTtJQUNFLHNCQUFBO0VBSEY7RUFLQTtJQUNFLHNCQUFBO0VBSEY7RUFLQTtJQUNFLGtCQUFBO0lBQ0EsZ0JBQUE7SUFDQSxvQkFBQTtFQUhGO0VBS0E7SUFDRSxpQkFBQTtFQUhGO0VBS0E7SUFDRSxpQkFBQTtFQUhGO0FBQ0Y7QUFPQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQUxGOztBQVFBO0VBQ0Usa0JBQUE7RUFDQSxTQUFBO0VBQ0EsT0FBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FBTEY7O0FBUUE7RUFDRSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxPQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0VBQ0EsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7QUFMRjs7QUFRQTtFQUNFLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtBQUxGOztBQVFBO0VBQ0UsVUFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7QUFMRiIsInNvdXJjZXNDb250ZW50IjpbIlxuaDJ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiA0MHB4O1xuICBtYXJnaW4tYm90dG9tOiAwcHg7XG59XG5cbmgzIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXNpemU6IDI1cHg7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XG59XG5cbi5mbGV4LWNvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLmZsZXgtY29udGFpbmVyMiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLmdyYXBoLWJhcnN7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5ncmFwaC1iYXJzMntcbiAgcGFkZGluZzogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLmNhbnZhcy1jb250YWluZXIxIHtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiKDAsIDIyLCA2OCk7IFxuICBwYWRkaW5nOiAyMHB4O1xuICB3aWR0aDogOTElO1xufVxuXG4uY2FudmFzLWNvbnRhaW5lcjIge1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiA5NiU7XG59XG5cbi5sZWdlbmR7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBmb250LXNpemU6IDE4cHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG59XG5cblxuLmZsZXgtaXRlbSB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG59XG5cbi5jYW52YXMtY29udGFpbmVyIHtcbiAgYm9yZGVyOiAycHggc29saWQgcmdiKDAsIDIyLCA2OCk7IFxuICBwYWRkaW5nOiAyMHB4O1xuICB3aWR0aDogOTUlO1xufVxuXG5jYW52YXMge1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIEhhY2UgbGFzIGdyw4PCoWZpY2FzIHJlc3BvbnNpdmUgKi9cbiAgaGVpZ2h0OiBhdXRvOyBcbiAgZGlzcGxheTogYmxvY2s7IFxufVxuXG4ubGluZXtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsIDIyLCA2OCk7XG59XG5cbi5jb250YWluZXItdGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IFxuICBkaXNwbGF5OiBmbGV4O1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLmNvbnRhaW5lci10YWJsZTIge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIG1hcmdpbi1yaWdodDogMTAwcHg7XG59XG5cbi5saW5ldntcbiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgcmdiKDAsIDIyLCA2OCk7IFxuICBtYXJnaW4tcmlnaHQ6IDQ1cHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG5cbi50YWJsZXtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuXG50ZCwgdGgge1xuICBwYWRkaW5nOiAyMHB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuZGl2IHtcbiAgbWluLXdpZHRoOiA0MHB4O1xuICBtaW4taGVpZ2h0OiAxcHg7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xufVxuXG4uc3BlY2lhbHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDtcbn1cblxuI2RlZ3JlZSB0aDpudGgtY2hpbGQoMiksXG4jZGVncmVlIHRoOm50aC1jaGlsZCgzKXtcbiAgcGFkZGluZy1sZWZ0OiA2MHB4O1xufVxuI2RlZ3JlZSB0aDpudGgtY2hpbGQoNCkge1xuICBwYWRkaW5nLWxlZnQ6IDkwcHg7XG59XG5cbi5tZW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoNTEsIDE1MywgMjU1KTtcbiAgXG59XG4ud29tZW4ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCA4NywgNTEpO1xuICBtYXJnaW4tbGVmdDogMjBQWDtcbn1cblxuLmxpbmUze1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xufVxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG5cbiAgdGQsIHRoIHtcbiAgICBwYWRkaW5nOiAxMHB4OyBcbiAgfVxuXG4gIC5sZWdlbmR7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuICAuY29udGFpbmVyLXRhYmxlIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBcbiAgfVxuICAuY29udGFpbmVyLXRhYmxlMiB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgXG4gIH1cbiAgLnRhYmxlIHtcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7IFxuICAgIHBhZGRpbmctcmlnaHQ6IDA7IFxuICAgIHBhZGRpbmctYm90dG9tOiAyMHB4O1xuICB9XG4gICN0YWJsZUluc3RpdHV0aW9uIHRoOm50aC1jaGlsZCgzKXtcbiAgICBwYWRkaW5nLWxlZnQ6IDBweDsgXG4gIH1cbiAgI3RhYmxlSW5zdGl0dXRpb24gdGQ6bnRoLWNoaWxkKDMpe1xuICAgIHBhZGRpbmctbGVmdDogMHB4O1xuICB9XG4gIFxufVxuXG4uY29uY2VwdHVhbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyOyBcbiAgaGVpZ2h0OiAyMDBweDsgXG59XG5cbi5vdmVybGF5IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDEwcHg7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDEwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLm92ZXJsYXkyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDUwcHg7XG4gIGxlZnQ6IDA7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDEwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLm92ZXJsYXkzIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IDEwcHg7XG4gIGxlZnQ6IDcwcHg7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHotaW5kZXg6IDEwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cblxuLmxpbmVfdGl0bGV7XG4gIHdpZHRoOiA1MCU7XG4gIGJvcmRlci13aWR0aDogMXB4OyBcbiAgYm9yZGVyLWNvbG9yOiBibGFjaztcbn1cblxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","singular","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵproperty","ctx_r3","papers","length","register","StatisticsComponent","constructor","apiService","stadisticsService","http","spinnerService","selectedYears","collaborations","connectedComponents","singleAuthor","statistics","statsAuthors","statsPaper","journalsCount","ConferencesCount","ConferencesAuthors","totalAuthorsByYear","PapersAndArticlesByYear","totalArticlesByYear","totalPapersByYear","singlePapers","decadeStats","researchers","papersWithAuthors","loadingTable1","loadingTable2","conferenceName","commonNames","options","width","height","overflow","realignOnResize","strict","step","cloudData","ngOnInit","loadCommonNames","main","getResearchersConference","selectedTitles","venueName","subscribe","next","response","statsResearchers","statsTotalAuthorsByYear","lineChart","destroy","generateChart","generateTotalAuthorsChart","error","console","getPapersAndArticles","statsPapers","statsTotalPapersByYear","getCollaborations","statsColaboraciones","generateChart3","years","densidades","getConnectedComponents","statsConnectedComponents","getConnectedComponentsByvenue","statsConnectedComponentsByvenue","generateChart4","getConferencebyProceeding","log","conferencesNames","inprocedings","forEach","title","year","numberOfInProceedings","push","generateTablesProceeding","getAuthorsPapers","_this","conferenceOption","_ref","_asyncToGenerator","statsSingleAuthor","_x","apply","arguments","sort","a","b","parseInt","map","totalAuthors","reduce","total","researcher","includes","paper","filter","value","index","self","indexOf","papersByYear","type","articlesByYear","papersOfYear","articlesOfYear","article","totalPapers","numPapersAndArticles","low","totalArticles","venueTitles","table","document","querySelector","HTMLElement","innerHTML","venueTitle","parts","split","replace","date","rowData","name","trim","location","slice","join","row","createElement","appendChild","hasNumber","test","isValidFormat","getDistributions","labels","authorsByPaper","numAuthors","allPapers","all","papersByAuthor","numPubs","numPublications","allAuthors","authorsTable","papersTable","amount","percentage","toFixed","worth","toString","getDemographicData","datasets","properties","Array","isArray","datasetByYear","info","genero","frecuencias","frec_paises","flat","statsGender","statsGeography","generateNGrams","titles","n","ngrams","words","toLowerCase","i","countFrequencies","frequencies","Map","ngram","count","get","set","clearTitle","stopwords","word","wordsNoRepeat","singularWords","filteredWords","newTitle","getTopN","sortedFrequencies","entries","getTopicAnalysis","cleanTitles","ipName","bigrams","trigrams","bigramFrequencies","trigramFrequencies","top20Bigrams","top20Trigrams","top20BigramsWithYears","top20TrigramsWithYears","table1","table2","minYear","Math","min","maxYear","max","combinedData","maxFrecuencia","minWeight","maxWeight","wordCloudData","item","text","weight","calculateWeight","color","randomColor","frec","maxFrec","normWeight","round","names","Set","size","from","numResearchersPorAnio","anio","numResearchers","numPapersAndArticlesPorAnio","colabsXtotal","colabsPapers","colab","find","c","integer","numColabs","concat","densidadesPorAño","dato","density","Object","copiedData","venueDataMap","venueDataMapRelative","has","venueData","adjustedComponents","values","author","ipNames","paperIndex","findIndex","authorNames","papersWithOneAuthor","porcentajeByYear","numPapersAndArticlesWithSingleAuthor","porcentajes","datosPorAño","porcentaje","añosUnicos","porcentajesMedios","año","porcentajesAño","media","acc","curr","generateBarChart","mappingDate","datasetFiltered","object","keys","uniqueDates","objectDate","countryHighest","highestFrequency","country","Number","countries","datasetsLabels","datasetsData","generateMultipleGraph","filterAuthorsByDecade","authors","startYear","endYear","filteredAuthors","authorYears","existingAuthor","filteredAuthor","statsProlificAuthors","startDecade","floor","endDecade","decades","decade","decadeLabel","decadeStartYear","decadeEndYear","decadeAuthors","label","statsProlificAuthors2","topAuthors","tables","yearsArray","generateTablesDecades2","autor","generateTotalPapersAndArticles","idChart","data","data2","entry","lineChart7","fill","borderColor","borderWidth","plugins","legend","font","family","scales","y","display","lineChart6","getRandomColor","lineChart2","lineChart3","venue","allYears","dataset","datasetsByGenre","genderKey","existingData","d","sortedData","men","women","hombres","mujeres","organizedYears","countMen","countWoman","generateCircularChart","chartId","chartConfig","ctx","getElementById","colors","backgroundColor","barChart","beginAtZero","r","random","g","responseType","parseCommonNames","lines","dict","currentName","currentData","linea","startsWith","frec_paisesStr","substring","lastIndexOf","JSON","parse","waitResearcherNoEmpty","_this2","Promise","resolve","setTimeout","waitPapersNoEmpty","_this3","waitAuthorsWithPapersNoEmpty","_this4","waitSingleAuthorsNoEmpty","_this5","_this6","venueNameConfirm","getVenueName","show","_","ɵɵdirectiveInject","i1","ApiService","i2","StadisticsService","i3","HttpClient","i4","SpinnerService","_2","selectors","viewQuery","StatisticsComponent_Query","rf","ɵɵtext","ɵɵtemplate","StatisticsComponent_div_33_Template","StatisticsComponent_div_53_Template","StatisticsComponent_div_64_Template","StatisticsComponent_div_230_Template","ɵɵadvance"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/statistics/statistics.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/statistics/statistics.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { StadisticsService } from '../services/stadistics.service';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport { HttpClient } from '@angular/common/http';\nimport { CloudData, CloudOptions } from 'angular-tag-cloud-module';\nimport { singular } from 'pluralize';\nimport { ChartConfiguration, ChartData, ChartOptions } from 'chart.js';\nimport { SpinnerService } from '../services/spinner.service';\n\ninterface Author {\n  ipNames: string[];\n  numPublications: number;\n  researcher: string;\n  year: string;\n}\n\ninterface DecadeStats {\n  label: string;\n  startYear: number;\n  endYear: number;\n  authors: Author[];\n}\n\n@Component({\n  selector: 'statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss'],\n})\n\nexport class StatisticsComponent implements OnInit {\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef;\n\n  selectedYears: any[] = [];\n  papers: any[] = [];\n  collaborations: any[] = [];\n  connectedComponents: any[] = [];\n  singleAuthor: any[] = [];\n  statistics: any[] = [];\n  statsAuthors: any[] = []\n  statsPaper: any[] = []\n  journalsCount: number = 0;\n  ConferencesCount: number = 0;\n  ConferencesAuthors: number = 0;\n  lineChart!: Chart;\n  lineChart2!: Chart;\n  lineChart3!: Chart;\n  lineChart4!: Chart;\n  lineChart5!: Chart;\n  lineChart7!: Chart;\n  lineChart6!: Chart;\n  lineChart8!: Chart;\n  totalAuthorsByYear: any[] = []\n  PapersAndArticlesByYear: any[] = []\n  totalArticlesByYear: any[] = []\n  totalPapersByYear: any[] = []\n  singlePapers: any[] = []\n  barChart!: Chart;\n  decadeStats: any[] = [];\n  researchers: any[] = [];\n  papersWithAuthors: any[] = [];\n  loadingTable1 = true;\n  loadingTable2 = true;\n  conferenceName: string[] = [];\n  commonNames: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n\n  options: CloudOptions = {\n    width: 500,\n    height: 200,\n    overflow: false,\n    realignOnResize: false,\n    strict: false,\n    step: 2,\n  };\n\n  cloudData: CloudData[] = []\n\n  constructor(\n    private apiService: ApiService,\n    private stadisticsService: StadisticsService,\n    private http: HttpClient,\n    private spinnerService: SpinnerService,\n  ) {}\n\n\n  ngOnInit() {\n    this.loadCommonNames();\n    this.main();\n  }\n\n  getResearchersConference() {\n    this.apiService.getResearchersConference(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: (response: any) => {\n        this.researchers = [];\n        this.researchers = response;\n        this.statsResearchers();\n        this.statsTotalAuthorsByYear();\n        if(this.researchers.length > 1){\n          if (this.lineChart) {\n            this.lineChart.destroy();\n          }\n          this.generateChart('lineChart1', 'Number of authors', this.statsAuthors);\n          this.generateTotalAuthorsChart('lineChart6', 'Total Authors by Year', this.totalAuthorsByYear);\n        }\n      },\n      error: (error: any) => {\n        console.error('Error in getResearchersConference:', error);\n      }\n    });\n  }\n  \n  getPapersAndArticles() {\n    this.apiService.getPapersAndArticles(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: (response: any) => {\n        this.papers = response;\n        this.statsPapers();\n        this.statsTotalPapersByYear();\n        if(this.papers.length > 0){\n          this.generateChart('lineChart2', 'Number of papers', this.statsPaper);\n          this.generateTotalAuthorsChart('lineChart7', 'Total Papers by Year', this.PapersAndArticlesByYear);\n        }\n      },\n      error: (error: any) => {\n        console.error('Error in getPapers:', error);\n      }\n    });\n  }\n\n  getCollaborations() {\n    this.apiService.getCollaborations(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: (response: any) => {\n        this.collaborations = response;\n        this.statsColaboraciones();\n        this.generateChart3('lineChart3', 'Density', this.statistics[3].years, this.statistics[3].densidades);\n      },\n      error: (error: any) => {\n        console.error('Error in getCollaborations:', error);\n      }\n    });\n  }\n\n  getConnectedComponents(){\n    this.apiService.getConnectedComponents(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        this.statsConnectedComponents();\n        this.generateChart3('lineChart11', 'Number of Connected Components', this.statistics[5].years, this.statistics[5].connectedComponents);\n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConnectedComponentsByvenue(){\n    this.apiService.getConnectedComponentsByvenue(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: (response: any) => {\n        this.connectedComponents = response;\n        this.statsConnectedComponentsByvenue();\n        this.generateChart4('lineChart12', 'Number of Connected Components', this.statistics[6]);\n        this.generateChart4('lineChart13', 'Number of Connected Components', this.statistics[7]);\n        \n      },\n      error: (error: any) => {\n        console.error('Error in getConnectedComponents:', error);\n      }\n    });\n  }\n\n  getConferencebyProceeding(){\n    console.log(this.stadisticsService.selectedTitles)\n    this.apiService.getConferencebyProceeding(this.stadisticsService.selectedTitles, this.stadisticsService.venueName).subscribe({\n      next: (response: any) => {\n        this.stadisticsService.conferencesNames = [];\n        this.stadisticsService.years = [];\n        this.stadisticsService.inprocedings = [];\n      \n        response.forEach(({ title, year, numberOfInProceedings }: { title: string, year: string, numberOfInProceedings: number}) => {\n          this.stadisticsService.conferencesNames.push(title);\n          this.stadisticsService.years.push(year);\n          this.stadisticsService.inprocedings.push(numberOfInProceedings);\n        });\n        this.loadingTable1 = false;\n      \n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n     \n      },\n      error: (error: any) => {\n        console.error('Error in getConferencebyProceeding:', error);\n      }\n    });\n  }\n\n  getAuthorsPapers() {\n    console.log(this.stadisticsService.selectedTitles)\n    this.apiService.getAuthorsPapers(this.stadisticsService.selectedTitles, this.stadisticsService.conferenceOption, this.stadisticsService.venueName)\n      .subscribe({\n        next: async (response: any) => {\n          this.singleAuthor = response;\n          this.statsSingleAuthor();\n          \n        },\n        error: (error: any) => {\n          console.error('Error in getAuthorsPapers:', error);\n        }\n      });\n}\n\n  statsTotalAuthorsByYear() {\n    const years = this.stadisticsService.selectedTitles;\n    years.sort((a, b) => parseInt(a) - parseInt(b));\n    this.totalAuthorsByYear = years.map(year => {\n      const totalAuthors = this.researchers.reduce((total, researcher) => {\n        if (researcher.years.includes(year)) {\n          return total + 1;\n        }\n        return total;\n      }, 0);\n      return {\n        year: year,\n        totalAuthors: totalAuthors\n      };\n    });\n  }\n\n  statsTotalPapersByYear() {\n    let years = this.papers.map(paper => paper.year);\n    years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n    years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n    \n    const papersByYear = this.papers.filter(paper => paper.type === \"Paper\");\n    const articlesByYear = this.papers.filter(paper => paper.type === \"Article\");\n\n    this.PapersAndArticlesByYear = years.map(year => {\n      const papersOfYear = papersByYear.filter(paper => paper.year === year);\n      const articlesOfYear = articlesByYear.filter(article => article.year === year);\n      \n      const totalPapers = papersOfYear.reduce((total, paper) => {\n        return total + paper.numPapersAndArticles.low;\n      }, 0);\n      \n      const totalArticles = articlesOfYear.reduce((total, article) => {\n        return total + article.numPapersAndArticles.low;\n      }, 0);\n\n      return {\n        year: year,\n        totalPapers: totalPapers,\n        totalArticles: totalArticles\n      };\n    });\n    \n    this.generateTotalAuthorsChart('lineChart7', 'Total Papers and Articles by Year', this.PapersAndArticlesByYear);\n  }\n\n  \n  generateTablesProceeding(venueTitles: string[], years: string[], numberOfInProceedings: number[]) {\n    const table = document.querySelector('#tableProceeding tbody');\n    if (table instanceof HTMLElement) {\n      table.innerHTML = ''; \n  \n      venueTitles.forEach((venueTitle, index) => {\n        const parts = venueTitle.split(',');\n\n        if( parts.length== 6){\n            \n          parts[4]= parts[4].replace(\"Proceedings\",\"\");\n          const date = parts[4].split('.')\n          \n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[2] + ',' + parts[3],\n            date: date.slice(0).join(' ')\n          };\n\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          \n          table.appendChild(row);\n        }\n\n        if(parts.length== 5){\n          \n          parts[3] = parts[3].replace(\"Proceedings\",\"\").trim();\n          const date = parts[3].split('.')\n          const hasNumber = /\\d/.test(date[0]);\n\n          if(hasNumber){\n\n            if(parts[1].includes(\"Florence\")){\n \n              const rowData = {\n                name: parts[0],\n                location: parts[1].trim() + ',' + parts[2],\n                date: date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            }else{\n\n              const rowData = {\n                name: parts[0] + '-' + parts[1].trim(),\n                location: parts[2],\n                date: date[0]\n              };\n              const row = document.createElement('tr');\n              row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n              table.appendChild(row);\n            }\n\n          }else{\n\n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4] \n            };\n\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            table.appendChild(row);\n          }\n\n        }\n\n        if( parts.length== 7){\n            \n          parts[5]= parts[5].replace(\"Proceedings\",\"\");\n          const date = parts[5].split('.')\n\n          if(parts[2].length > 15){\n          const rowData = {\n            name: parts[0] + '-' + parts[1].trim(),\n            location: parts[3] + ', ' + parts[4],\n            date: date[0]\n          };\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n          table.appendChild(row);\n          }else{\n\n            const isValidFormat = /^[a-zA-Z]+\\s+\\d{1,2}(-\\d{1,2}|\\d{1,2}[a-zA-Z]+\\s+\\d{1,2})$/.test(date[0].trim());\n\n            if(isValidFormat){\n\n              if(parts[2].includes(\"ER\")){\n \n                const rowData = {\n                  name: parts[0] + ',' + parts[1].trim() + '-' +  parts[2] ,\n                  location: parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n              }else{\n\n                const rowData = {\n                  name: parts[0] + '-' + parts[1].trim(),\n                  location: parts[2]+ ', ' + parts[3] + ', ' + parts[4],\n                  date: date[0]\n                };\n    \n                const row = document.createElement('tr');\n                row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n                table.appendChild(row);\n\n              }\n\n            }else{\n                            \n            const rowData = {\n              name: parts[0] + '-' + parts[1].trim(),\n              location: parts[2] + ', ' + parts[3],\n              date: parts[4] + ', ' + date[0]\n            };\n            const row = document.createElement('tr');\n            row.innerHTML = `<td>${rowData.name}</td><td>${rowData.location}</td><td>${rowData.date}</td><td>${years[index]}</td><td>${numberOfInProceedings[index]}</td>`;\n            table.appendChild(row);\n            }\n  \n          }       \n        }  \n      });\n    }\n  }\n\n  /**Function to obtain the distributions of both authors by papers and papers by authors*/\n  getDistributions(){\n    const labels: string[] = ['1', '2', '3', '4', '5 o más'];\n\n    // This represents the number of authors that each paper has.\n    const authorsByPaper: number[] = [1, 2, 3, 4].map((numAuthors) =>\n    this.papersWithAuthors.filter((paper) => paper.numAuthors === numAuthors).length\n    );\n    authorsByPaper[4] = this.papersWithAuthors.filter((paper) => paper.numAuthors >= 5).length;\n    let allPapers = this.papers.reduce((all, paper) => all + paper.numPapersAndArticles.low, 0);\n\n    // This represents the number of published papers that each author has.\n    const papersByAuthor: number[] = [1, 2, 3, 4].map((numPubs) =>\n    this.singleAuthor.filter((paper) => paper.numPublications === numPubs).length\n    );\n    papersByAuthor[4] = this.singleAuthor.filter((paper) => paper.numPublications >= 5).length\n    const allAuthors = this.singleAuthor.length;\n\n    // We create the two tables that are linked with the ids of the html\n    const authorsTable = document.querySelector('#authorsTable tbody');\n    const papersTable = document.querySelector('#papersTable tbody');\n\n    \n    \n    if (authorsTable !== null) {\n      authorsByPaper.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allPapers * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        authorsTable.appendChild(row);\n      });\n    }\n\n    if (papersTable !== null) {\n      papersByAuthor.forEach((amount, index) => {\n        const row = document.createElement('tr');\n        const percentage = (amount / allAuthors * 100).toFixed(2);\n        const worth = amount.toString() + \"(\" + percentage + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${worth}</td>`;\n        papersTable.appendChild(row);\n      });\n    }\n  }\n\n  getDemographicData(){\n      const datasets = this.researchers.map(researcher => {\n        let name = researcher.researcher.properties.name.split(' ')[0];\n        if(name.includes(\"-\")){\n          name = name.split('-')[0];\n        }\n        const years = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      \n        const datasetByYear = years.map((year: any) => {\n          const info = this.commonNames[name];\n          const genero = info ? info.genero : 'Unknown';\n          const frecuencias = info ? info.frec_paises : {};\n      \n          return {\n            year,\n            name,\n            genero,\n            frecuencias\n          };\n        });\n        return datasetByYear;\n      }).flat(); \n\n      this.statsGender(datasets);\n      this.statsGeography(datasets);\n  }\n\n  generateNGrams(titles: string[], n: number): string[] {\n    const ngrams: string[] = [];\n    titles.forEach((title) => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  \n  countFrequencies(ngrams: string[]): Map<string, number> {\n    const frequencies = new Map<string, number>();\n    ngrams.forEach((ngram) => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n\n  clearTitle(title: string, stopwords: string[]) {\n\n    const words = title.toLowerCase().split(\" \").map(word => word.replace(/[^\\w\\s]/g, \"\"));\n    const wordsNoRepeat = words.map(word => word.replace(/(.)\\1+/g, \"$1\"));\n    const singularWords = wordsNoRepeat.map(word => singular(word));\n    const filteredWords = singularWords.filter(word => !stopwords.includes(word));\n    const newTitle = filteredWords.join(' ');\n    \n    return newTitle;\n  }\n\n  getTopN(frequencies: Map<string, number>, n: number): [string, number][] {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n\n  getTopicAnalysis(){\n\n      const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n\n      const cleanTitles = this.papersWithAuthors.map(paper => {\n        const ipName = this.clearTitle(paper.ipName, stopwords);\n        const year = parseInt(paper.year);\n        return { ipName, year };\n      });\n\n      const bigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 2);\n      const trigrams = this.generateNGrams(cleanTitles.map((paper) => paper.ipName), 3);\n\n      const bigramFrequencies = this.countFrequencies(bigrams);\n      const trigramFrequencies = this.countFrequencies(trigrams);\n\n      const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n      const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n\n    \n      const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n    \n      const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: cleanTitles.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n\n      const table1 = document.querySelector('#tableBigramas tbody');\n      const table2 = document.querySelector('#tableTrigramas tbody');\n    \n      if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n        top20BigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table1.appendChild(row);\n        });\n      \n        top20TrigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table2.appendChild(row);\n        });\n      }\n\n      const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n      \n      combinedData.sort((a, b) => b.count - a.count);\n\n      const maxFrecuencia = combinedData[0].count;\n      const minWeight = 0;\n      const maxWeight = 20;\n\n\n      const wordCloudData = combinedData.map((item, index) => ({\n        text: item.ngram,\n        weight: this.calculateWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n        color: this.randomColor()\n      }));\n\n      this.cloudData = wordCloudData;\n     \n  }\n  \n  calculateWeight(frec: number, maxFrec: number, minWeight: number, maxWeight: number): number {\n    const weight = frec / maxFrec;\n    const normWeight = weight * (maxWeight - minWeight) + minWeight;\n    return Math.round(normWeight);\n  }\n\n  statsResearchers() {\n    const names = new Set(this.researchers.map(researcher => researcher.name));\n    this.ConferencesAuthors = names.size;\n    this.statsAuthors = [];\n    this.statsAuthors = Array.from(names).map(name => {\n      const years = this.stadisticsService.selectedTitles;\n      years.sort((a, b) => parseInt(a) - parseInt(b));\n      this.selectedYears = years;\n      const numResearchersPorAnio = years.map(anio =>\n        this.researchers.reduce((total, researcher) => {\n          if (researcher.name === name && researcher.years.includes(anio)) {\n            return total + 1;\n          }\n          return total;\n        }, 0)\n      );\n      return {\n        name: name,\n        years: years,\n        numResearchers: numResearchersPorAnio\n      };\n    });\n  }\n  \n  statsPapers() {\n    const names = new Set(this.papers.map(paper => paper.name));\n    this.ConferencesCount = names.size;\n    this.statsPaper = Array.from(names).map(name => {\n      let years = this.papers.map(paper => paper.year);\n      years = years.filter((value, index, self) => self.indexOf(value) === index); // Eliminar años duplicados\n      years.sort((a, b) => parseInt(a) - parseInt(b)); // Ordenar años\n      const numPapersAndArticlesPorAnio = years.map(year =>\n        this.papers.reduce((total, paper) => {\n          const numPapersAndArticles = paper.numPapersAndArticles.low;\n          if (paper.name === name && paper.year === year) {\n            return total + numPapersAndArticles;\n          }\n          return total;\n        }, 0)\n      );\n      return {\n        name: name,\n        years: years,\n        numResearchers: numPapersAndArticlesPorAnio\n      };\n    });\n  }\n\n  statsColaboraciones() {\n    let colabsXtotal: { year: number; numColabs: number; numPapersAndArticles: number }[] = [];\n\n    const colabsPapers = this.papers.map(paper => {\n        const colab = this.collaborations.find(c => c.year === paper.year);\n        const integer = paper.numPapersAndArticles.low;\n        return {\n            year: paper.year,\n            numColabs: colab ? colab.numColabs : 0,\n            numPapersAndArticles: integer\n        };\n    });\n    colabsXtotal = colabsXtotal.concat(colabsPapers);\n\n    const densidadesPorAño: { [key: number]: number } = {}; \n    colabsXtotal.forEach(dato => {\n        const { year, numColabs, numPapersAndArticles } = dato;\n        if (!densidadesPorAño[year]) {\n            densidadesPorAño[year] = 0;\n        }\n        densidadesPorAño[year] += numColabs / numPapersAndArticles;\n    });\n\n    const density = Object.entries(densidadesPorAño).map(([year, density]) => ({\n        year: parseInt(year),\n        density\n    }));\n\n    this.statistics[3] = {\n        years: density.map(dato => dato.year),\n        densidades: density.map(dato => dato.density)\n    };\n}\n\n  statsConnectedComponents() {\n    const copiedData = [...this.connectedComponents];\n\n    copiedData.sort((a, b) => a.year - b.year);\n\n    const years = copiedData.map(item => item.year);\n    const connectedComponents = copiedData.map(item => item.connectedComponents);\n  \n    this.statistics[5] = {\n        years: years,\n        connectedComponents: connectedComponents\n    };\n}\n\n  statsConnectedComponentsByvenue() {\n    const venueDataMap: Map<string, { years: any[], connectedComponents: any[], venueName: string} | undefined> = new Map();\n    const venueDataMapRelative: Map<string, { years: any[], connectedComponents: any[], venueName: string, index?: number } | undefined> = new Map();\n\n    this.connectedComponents.forEach((item) => {\n      const venueName = item.venueName;\n\n      if (!venueDataMap.has(venueName)) {\n        venueDataMap.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n        });\n\n      }\n\n      const venueData = venueDataMap.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        venueData.connectedComponents.push(item.connectedComponents);\n      }\n    });\n\n    this.connectedComponents.forEach((item) => {\n      const venueName = item.venueName;\n\n      if (!venueDataMapRelative.has(venueName)) {\n        venueDataMapRelative.set(venueName, {\n          years: [],\n          connectedComponents: [],\n          venueName: venueName,\n        });\n      }\n\n      const venueData = venueDataMapRelative.get(venueName);\n      if (venueData) {\n        venueData.years.push(item.year);\n        let adjustedComponents = item.connectedComponents;\n        while (adjustedComponents > 1) {\n          adjustedComponents /= 10;\n        }\n  \n        venueData.connectedComponents.push(adjustedComponents);\n      }\n    });\n\n    this.statistics[6] = Array.from(venueDataMap.values());\n    this.statistics[7] = Array.from(venueDataMapRelative.values());\n  }\n  \n\n  statsSingleAuthor() {\n    \n    const papersWithAuthors: { ipName: string, numAuthors: number, authorNames: string[], year: string }[] = [];\n\n    this.singleAuthor.forEach((author: { ipNames: string[], researcher: string, year: string }) => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n            papersWithAuthors.push({\n              ipName,\n              numAuthors: 1,\n              authorNames: [author.researcher],\n              year: author.year\n            });\n          }\n        });\n    });\n\n    this.papersWithAuthors = papersWithAuthors;\n\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapersAndArticles = paper.numPapersAndArticles.low;\n      const numPapersAndArticlesWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const percentage = (numPapersAndArticlesWithSingleAuthor / numPapersAndArticles) * 100;\n    \n      return { year, percentage };\n    });\n\n    this.statistics[4] = {\n      years: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.percentage)\n    };\n    \n    let years = this.statistics[4].years;\n    let porcentajes = this.statistics[4].porcentajes;\n    \n    let datosPorAño:any = {};\n    \n    for (let i = 0; i < years.length; i++) {\n        let year = years[i];\n        let porcentaje = porcentajes[i];\n    \n        if (!datosPorAño[year]) {\n            datosPorAño[year] = [porcentaje];\n        } else {\n            datosPorAño[year].push(porcentaje);\n        }\n    }\n    \n    let añosUnicos = [];\n    let porcentajesMedios = [];\n    \n    for (let año in datosPorAño) {\n        let porcentajesAño = datosPorAño[año];\n        let media = porcentajesAño.reduce((acc: any, curr: any) => acc + curr, 0) / porcentajesAño.length;\n        \n        añosUnicos.push(año);\n        porcentajesMedios.push(media);\n    }\n\n    this.statistics[4] = [];\n    \n    this.statistics[4].years = añosUnicos;\n    this.statistics[4].porcentajes = porcentajesMedios;\n\n    this.singlePapers = this.statistics[4];\n    this.generateBarChart('barChart1', 'Single Author Papers and Single Author Journals', this.statistics[4].years, this.statistics[4].porcentajes);          \n    \n  }  \n\n  statsGeography(datasets: any[]){\n    const mappingDate: {[date: string]: {[country: string]: number}} = {};\n    const datasetFiltered = datasets.filter((object: any) => Object.keys(object.frecuencias).length > 0);\n    \n    const uniqueDates = [...new Set(datasetFiltered.map(dato => dato.year))];\n\n    for (const date of uniqueDates) {\n      const objectDate = datasetFiltered.filter(dato => dato.year === date);\n      mappingDate[date] = {};\n  \n    for (const object of objectDate) {\n      let countryHighest = '';\n      let highestFrequency = -1;\n\n      for (const country in object.frecuencias) {\n          if (object.frecuencias[country] > highestFrequency) {\n            countryHighest = country;\n            highestFrequency = object.frecuencias[country];\n          }\n        }\n        if(!(countryHighest in mappingDate[date])){\n          mappingDate[date][countryHighest] = 1;\n        }else{\n          mappingDate[date][countryHighest] = mappingDate[date][countryHighest] + 1;\n        }\n      }\n    }\n\n    for (const year in mappingDate) {\n      let total = 0;\n      for (const country in mappingDate[year]) {\n        total += mappingDate[year][country];\n      }\n      for (const country in mappingDate[year]) {\n        mappingDate[year][country] = Number((mappingDate[year][country]/total).toFixed(4));\n      }\n    }\n\n    const years = Object.keys(mappingDate); \n    const countries = Object.keys(mappingDate[years[0]]); \n    const datasetsLabels = countries; \n\n    const datasetsData = countries.map((country) =>\n      years.map((year) => mappingDate[year][country])\n    );\n\n    this.generateMultipleGraph('lineChart5', years, datasetsLabels, datasetsData);\n    \n  }\n\n  filterAuthorsByDecade(authors: Author[], startYear: number, endYear: number): Author[] {\n    const filteredAuthors: Author[] = [];\n  \n    authors.forEach((author) => {\n      const authorYears = author.year.split(\",\").map(Number).filter((year) => year >= startYear && year <= endYear);\n\n      if (authorYears.length > 0) {\n     \n        const existingAuthor = filteredAuthors.find((filteredAuthor) => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n \n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n\n    return filteredAuthors;\n  }\n\n  statsProlificAuthors(selectedYears: number[]): DecadeStats[] {\n    // Get the range of years selected by the user\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    // Calculate the decades corresponding to the selected range of years\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n  \n    // Generate the decades within the selected year range\n    const decades: DecadeStats[] = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n  \n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }  \n    // Sort authors by number of publications in each decade\n    decades.forEach((decade) => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20){\n        decade.authors = decade.authors.slice(0, 20); \n      } \n    });\n  \n    // Return the decades with the authors ordered\n    return decades;\n  }\n\n  statsProlificAuthors2(selectedYears: number[]) {\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    const allAuthors = this.filterAuthorsByDecade(this.singleAuthor, startYear, endYear);\n    const topAuthors = allAuthors.sort((a, b) => b.numPublications - a.numPublications).slice(0, 20);\n  \n    const tables = {\n      'degree': document.querySelector('#degree tbody'),\n    };\n  \n    for (const author of topAuthors) {\n      const table = tables['degree'];\n  \n      if (table instanceof HTMLElement) {\n        const yearsArray = author.year.split(\",\").map(Number);\n        const minYear = Math.min(...yearsArray);\n        const maxYear = Math.max(...yearsArray);\n\n  \n        const row = document.createElement('tr');\n        row.innerHTML = `\n  \n                         <td >${author.researcher}</td>\n                         <td style=\"padding-left: 50px\" >${author.numPublications}</td>\n                         <td style=\"padding-left: 50px\">${minYear}</td> \n                         <td style=\"padding-left: 80px\">${maxYear}</td>`;\n  \n        table.appendChild(row);\n      }\n    }\n\n  }\n\n  generateTablesDecades2(decadeStats: any[]){\n    const tables: { [key: string]: HTMLElement | null } = {\n      '1990s': document.querySelector('#table90 tbody'),\n      '2000s': document.querySelector('#table00 tbody'),\n      '2010s': document.querySelector('#table10 tbody'),\n      '2020s': document.querySelector('#table20 tbody'),\n    };\n    for (const decade of decadeStats) {\n      const table = tables[decade.label];\n  \n      if (table instanceof HTMLElement) {\n        decade.authors.slice(0, 20).forEach((autor: { researcher: any; numPublications: any; year: any; }) => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n  \n          table.appendChild(row);\n        });\n      }\n    }\n  }\n\n  generateTotalPapersAndArticles(idChart: string, label: string, data: any[], data2: any[]){\n    const years = data.map(entry => entry.year);\n    if (idChart == \"lineChart7\") {\n      this.lineChart7 = new Chart(idChart, {\n          type: 'line',\n          data: {\n              labels: years,\n              datasets: [\n                  {\n                      label: 'Papers',\n                      data: this.totalPapersByYear,\n                      fill: false,\n                      borderColor: 'rgb(0, 22, 68)',\n                      borderWidth: 1\n                  },\n                  {\n                      label: 'Articles',\n                      data: this.totalArticlesByYear,\n                      fill: false,\n                      borderColor: 'rgb(68, 0, 22)', // Choose a different color for Articles\n                      borderWidth: 1\n                  }\n              ]\n          },\n          options: {\n              plugins: {\n                  legend: {\n                      labels: {\n                          color: 'black',\n                          font: {\n                              size: 18,\n                              family: 'Roboto',\n                          }\n                      }\n                  }\n              },\n              scales: {\n                  y: {\n                      type: 'linear',\n                      display: true\n                  }\n              },\n          }\n      });\n    }\n  }\n\n  generateTotalAuthorsChart(idChart: string, label: string, data: any[]) {\n    const years = data.map(entry => entry.year);\n    const totalAuthors = data.map(entry => entry.totalAuthors);\n    const totalPapers = data.map(entry => entry.totalPapers);\n    const totalArticles = data.map(entry => entry.totalArticles);\n\n\n    if(idChart == \"lineChart6\"){\n      this.lineChart6 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: years,\n          datasets: [\n            {\n              label: label,\n              data: totalAuthors,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18,\n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    \n    if (idChart == \"lineChart7\") {\n      this.lineChart7 = new Chart(idChart, {\n          type: 'line',\n          data: {\n              labels: years,\n              datasets: [\n                  {\n                      label: 'Papers',\n                      data: totalPapers,\n                      fill: false,\n                      borderColor: \"rgba(51, 153, 255)\",\n                      borderWidth: 1\n                  },\n                  {\n                      label: 'Articles',\n                      data: totalArticles,\n                      fill: false,\n                      borderColor: \"rgba(255, 0, 0, 1)\", // Choose a different color for Articles\n                      borderWidth: 1\n                  }\n              ]\n          },\n          options: {\n              plugins: {\n                  legend: {\n                      labels: {\n                          color: 'black',\n                          font: {\n                              size: 18,\n                              family: 'Roboto',\n                          }\n                      }\n                  }\n              },\n              scales: {\n                  y: {\n                      type: 'linear',\n                      display: true\n                  }\n              },\n          }\n      });\n    }\n  \n  }\n\n  generateChart(idChart: string, label: string, data: any[]) {\n    const datasets = data.map((entry, index) => ({\n      label: entry.name,\n      data: entry.numResearchers,\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n\n    if(idChart == \"lineChart2\"){\n      this.lineChart2 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n  \n    }\n\n    if(idChart == \"lineChart1\"){\n      this.lineChart = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: data[0].years,\n          datasets: datasets\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n  \n    }\n  }\n\n  generateChart3(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart==\"lineChart11\" || idChart==\"lineChart3\"){\n      this.lineChart3 = new Chart(idChart, {\n        type: 'line',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              fill: false,\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              type: 'linear',\n              display: true\n            }\n          },\n        }\n      });\n    }\n    \n   \n  }\n\n  generateChart4(idChart: string, label: string, data: any) {\n \n    const datasets = data.map((venue: any, index: any) => {\n      return {\n        label: venue.venueName,\n        data: venue.connectedComponents,\n        years: venue.years,\n        fill: false,\n        borderColor: this.getRandomColor(index),\n        borderWidth: 1\n      };\n    });\n  \n    const allYears = Array.from(new Set([].concat(...datasets.map((dataset: any) => dataset.years))));\n    allYears.sort();\n  \n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: allYears,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        },\n      }\n    });\n  }\n  \n\n  statsGender(datasets: any[]){\n    const datasetsByGenre: { [genero: string]: { year: string; count: number }[] } = {};\n\n      datasets.forEach((data: { year: any; genero: any; }) => {\n        const { year, genero } = data;\n        \n        let genderKey = '';\n        \n        if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n          genderKey = 'Men';\n        } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n          genderKey = 'Women';\n        } else{\n          genderKey = 'Unknown';\n        }\n        \n        if (!datasetsByGenre[genderKey]) {\n          datasetsByGenre[genderKey] = [];\n        }\n        \n        const existingData = datasetsByGenre[genderKey].find(d => d.year === year);\n        \n        if (existingData) {\n          existingData.count++;\n        } else {\n          datasetsByGenre[genderKey].push({\n            year,\n            count: 1\n          });\n        }\n      });\n\n      const sortedData: { [anio: string]: { hombres: number; mujeres: number; total: number} } = {};\n      const men = datasetsByGenre['Men'];\n      const women = datasetsByGenre['Women'];\n\n      men.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        sortedData[year] = { hombres: count, mujeres: 0, total: count };\n      });\n\n      women.forEach(dato => {\n        const year = dato.year;\n        const count = dato.count;\n\n        if (sortedData[year]) {\n          sortedData[year].mujeres = count;\n          sortedData[year].total += count;\n        } else {\n          sortedData[year] = { mujeres: count, hombres: 0, total: count };\n        }\n      });\n\n      const organizedYears = Object.keys(sortedData).sort();\n\n\n      const countMen = organizedYears.map(anio => Number((sortedData[anio].hombres/(sortedData[anio].total)).toFixed(4)));\n      const countWoman = organizedYears.map(anio => Number((sortedData[anio].mujeres/(sortedData[anio].total)).toFixed(4)));\n\n      \n      this.generateCircularChart('lineChart4', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n      this.generateMultipleGraph('lineChart8', organizedYears, ['Hombres', 'Mujeres'], [countMen, countWoman]);\n  }\n\n  generateMultipleGraph(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      fill: false,\n      borderColor: this.getRandomColor(index),\n      borderWidth: 1\n    }));\n  \n    const chartConfig: ChartConfiguration<'line'> = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true,\n          },\n        },\n      },\n    };\n  \n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generateCircularChart(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const colors = ['#FF5733', '#3399FF'];\n\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colors[index],  \n      borderColor: 'black',\n    }));\n  \n    const chartConfig: ChartConfiguration<'pie'> = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n      },\n    };\n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    if(idChart = \"barChart1\"){\n      this.barChart = new Chart(idChart, {\n        type: 'bar',\n        data: {\n          labels: labels,\n          datasets: [\n            {\n              label: label,\n              data: data,\n              backgroundColor: 'rgb(0, 22, 68)',\n              borderColor: 'rgb(0, 22, 68)',\n              borderWidth: 1\n            }\n          ]\n        },\n        options: {\n          plugins: {\n            legend: {\n              labels: {\n                color: 'black',\n                font: {\n                  size: 18, \n                  family: 'Roboto',\n                }\n              }\n            }\n          },\n          scales: {\n            y: {\n              beginAtZero: true\n            }\n          }\n        }\n      });\n    }\n  }  \n\n\n  randomColor(){\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n\n  getRandomColor(index: number) {\n    let colors: Record<number, string> = {\n      0: \"rgba(51, 153, 255)\",\n      1: \"rgba(255, 0, 0, 1)\",\n      2: \"rgba(98, 192, 75, 1)\", \n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n\n    return colors[index];\n  }\n\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', { responseType: 'text' }).subscribe(\n      (data: string) => {\n        this.commonNames = this.parseCommonNames(data);\n      },\n      (error: any) => {\n        console.error('Error al cargar los datos:', error);\n      }\n    );\n  }\n\n  parseCommonNames(data: string) {\n\n    const lines = data.split('\\n');\n    const dict: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n    let currentName = '';\n    let currentData: { frec_paises: { [key: string]: number }, genero: string } = {\n      frec_paises: {},\n      genero: ''\n    };\n  \n    for (const linea of lines) {\n      if (linea.startsWith('nombre:')) {\n        currentName = linea.split(':')[1].trim();\n        currentData = { frec_paises: {}, genero: '' };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        currentData.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        currentData.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        dict[currentName] = currentData;\n      }\n    }\n    return dict;\n  }\n\n  async waitResearcherNoEmpty() {\n    while (!this.researchers || this.researchers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitPapersNoEmpty() {\n    while (!this.papers || this.papers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n  \n  async waitAuthorsWithPapersNoEmpty(){\n    while (!this.papersWithAuthors || this.papersWithAuthors.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async waitSingleAuthorsNoEmpty(){\n    while (!this.singleAuthor || this.singleAuthor.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async main(){\n    try {\n\n      if(this.stadisticsService.venueNameConfirm != this.stadisticsService.getVenueName()){\n        this.getConferencebyProceeding();\n      }else{\n        this.generateTablesProceeding(this.stadisticsService.conferencesNames, this.stadisticsService.years, this.stadisticsService.inprocedings);\n      }\n      this.getResearchersConference();\n      this.getPapersAndArticles();\n      this.getConferencebyProceeding();\n  \n      if(this.researchers.length == 0){\n        await this.waitResearcherNoEmpty(); \n        this.getDemographicData();\n      } else{\n        this.getDemographicData();\n      }\n\n      if(this.papers.length == 0){\n        await this.waitPapersNoEmpty();\n        this.getCollaborations();\n        this.getAuthorsPapers();\n      }else{\n         this.getCollaborations();;\n         this.getAuthorsPapers();\n      }\n\n      while(this.collaborations.length < 1){\n        this.loadingTable2 = true;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.spinnerService.show();\n      }\n      this.loadingTable2 = false;\n\n      if(this.papersWithAuthors.length == 0){\n        await this.waitAuthorsWithPapersNoEmpty();\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }else{\n        this.getTopicAnalysis();\n        this.getDistributions();\n      }\n\n\n      \n      if(this.singleAuthor.length == 0){\n        await this.waitSingleAuthorsNoEmpty();\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }else{\n        this.decadeStats = this.statsProlificAuthors(this.selectedYears);\n        this.generateTablesDecades2(this.decadeStats)\n      }\n      this.statsProlificAuthors2(this.selectedYears);\n \n      this.getConnectedComponents();\n      this.getConnectedComponentsByvenue();\n\n      while(this.stadisticsService.conferencesNames.length <1){\n        this.loadingTable1 = true;\n        await new Promise(resolve => setTimeout(resolve, 100));\n        this.spinnerService.show()\n      }\n      this.loadingTable1 = false;\n      this.stadisticsService.venueNameConfirm = this.stadisticsService.getVenueName();\n\n     \n  } catch (error) {\n    console.error('Error in getData with:', error);\n  }\n  }\n\n}","<div>\n  <h2>Statistics</h2>\n  <hr class=\"line_title\">\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Authors / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart6\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\"  [hidden]=\"ConferencesAuthors < 2\">\n      <h3>Authors by Conference or Journal / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart1\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n\n  <div class=\"flex-container\">\n\n    <div class=\"flex-item\">\n      <h3>Conference Papers and Journal Articles / Year</h3>\n\n      <div class=\"canvas-container\" >\n        <canvas id=\"lineChart7\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\"[hidden]=\"papers.length < 1 || ConferencesCount < 2\">\n      <h3>Papers and Articles by Conference and Jorunal / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart2\" ></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\" >\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Density evolution over the years</h3>\n\n      <div class=\"canvas-container\">\n        <div class=\"overlay2\" *ngIf=\"loadingTable2\">\n          <app-spinner ></app-spinner>\n        </div>\n        <canvas id=\"lineChart3\"></canvas>\n      </div>\n    </div>\n\n    <!-- [hidden]=\"statistics[4].years.length === 0\" -->\n    <div class=\"flex-item\" >\n      <h3>Percentage of single-author publications / Year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChart1\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Distributions of authors by paper and article and of papers and articles by author</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n      <table id=\"authorsTable\">\n        <thead>\n          <tr>\n            <th>Author</th>\n            <th>Papers/Journal (%)</th>\n          </tr>\n        </thead>\n        <tbody>\n          <div class=\"overlay3\" *ngIf=\"loadingTable2\">\n            <app-spinner ></app-spinner>\n          </div>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"papersTable\">\n        <thead>\n          <tr>\n            <th>Papers</th>\n            <th>Papers/Journal (%)</th>\n          </tr>\n        </thead>\n        <tbody>\n          <div class=\"overlay3\" *ngIf=\"loadingTable2\">\n            <app-spinner ></app-spinner>\n          </div>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\"> Percentage of Publications Men-Women / Year</h3>\n  <div class=\"flex-container2\">\n\n    <div class=\"graph-bars\">\n\n        <div class=\"canvas-container1\">\n          <div class=\"legend\">\n            <div class=\"men\"></div> Men\n            <div class=\"women\"></div> Women\n          </div>\n          <canvas class=\"circular\" id=\"lineChart4\"></canvas>\n        </div>\n        \n    </div>\n\n    <div class=\"graph-bars2\">\n      <div class=\"canvas-container2\">\n        <canvas id=\"lineChart8\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3> Percentage of publications by Country / Year</h3>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\"> \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart5\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most frequent Bigrams and Trigrams</h3>\n  <div class=\"container-table\">\n    <div class=\"table\">\n        <table id=\"tableBigramas\">\n          <thead>\n            <tr>\n              <th>Bigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"tableTrigramas\">\n          <thead>\n            <tr>\n              <th>Trigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"special\">Frequent terms from all titles of papers</h3>\n  <div class=\"conceptual\">\n    <angular-tag-cloud [config]=\"options\" [data]=\"cloudData\"></angular-tag-cloud>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"special\">Most prolific authors according to their number of publications accumulated by decade</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"table90\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (a) 1989-1999\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n        <table id=\"table00\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (b) 1999-2009\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"table\">\n      <table id=\"table10\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2009-2019\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n  </div>\n  <div class=\"linev\"></div>\n  <div class=\"table\">\n      <table id=\"table20\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2019-2024\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <h3>Authors with their first and most recent year of publication</h3>\n  <div class=\"container-table2\">\n    <div class=\"table\">\n        <table id=\"degree\">\n          <thead>\n            <tr>\n              <th>Author</th>\n              <th>Degree</th>\n              <th>First <br> year</th>\n              <th>Recent <br> year</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\" [hidden]=\"papers.length < 1\">\n\n  <h3 [hidden]=\"papers.length < 1\">Proceeding by Conference</h3>\n  <div class=\"container-table2\">\n   \n    <div class=\"table\" [hidden]=\"papers.length < 1\">\n      <table id=\"tableProceeding\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Location</th>\n            <th>Date</th>\n            <th>Year</th>\n            <th>numberOfInProceedings</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n  <div class=\"overlay\" [hidden]=\"papers.length < 1\"*ngIf=\"loadingTable1\">\n    <app-spinner ></app-spinner>\n  </div>\n  \n\n  <hr class=\"line3\" [hidden]=\"papers.length < 1\">\n\n  <div class=\"flex-container\">\n\n    <div class=\"flex-item\" [hidden]=\"papers.length < 1\">\n      <h3>All Connected Components by year</h3>\n  \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart11\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\" [hidden]=\"papers.length < 1\">\n      <h3>Connected components for each Conference by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart12\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n \n  <div class=\"flex-container\">\n    <div class=\"flex-item\" [hidden]=\"papers.length < 1\"> \n      <h3>Relative size of components connected by conference</h3>\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart13\"></canvas>\n      </div>\n    </div>\n  </div>\n\n\n  \n</div>\n\n\n\n\n\n \n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}