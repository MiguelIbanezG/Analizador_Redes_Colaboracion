{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/Analizador_Redes_Colaboracion/interfaz/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nimport { singular } from 'pluralize';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../api.service\";\nimport * as i3 from \"../seleccion.service\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"angular-tag-cloud-module\";\nconst _c0 = [\"chartCanvas\"];\nChart.register(...registerables);\nexport class EstadisticasComponent {\n  constructor(route, apiService, seleccionService, http) {\n    this.route = route;\n    this.apiService = apiService;\n    this.seleccionService = seleccionService;\n    this.http = http;\n    this.titulosSeleccionados = [];\n    this.yearsSeleccionados = [];\n    this.conferenceOption = \"\";\n    this.venueName = \"\";\n    this.papers = [];\n    this.colaboraciones = [];\n    this.singleAuthor = [];\n    this.estadisticas = [];\n    this.researchers = [];\n    this.papersWithAuthors = [];\n    this.autoresPorPapersTable = [];\n    this.papersPorAutoresTable = [];\n    this.decadeStats = [];\n    this.commonNames = {};\n    this.options = {\n      // if width is between 0 and 1 it will be set to the width of the upper element multiplied by the value\n      width: 500,\n      // if height is between 0 and 1 it will be set to the height of the upper element multiplied by the value\n      height: 200,\n      overflow: false,\n      realignOnResize: false,\n      strict: false,\n      step: 2\n    };\n    this.cloudData = [];\n  }\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', {\n      responseType: 'text'\n    }).subscribe(data => {\n      this.commonNames = this.parseCommonNames(data);\n    }, error => {\n      console.error('Error al cargar los datos:', error);\n    });\n  }\n  parseCommonNames(data) {\n    const lineas = data.split('\\n');\n    const diccionario = {};\n    let nombreActual = '';\n    let datosActuales = {\n      frec_paises: {},\n      genero: ''\n    };\n    for (const linea of lineas) {\n      if (linea.startsWith('nombre:')) {\n        nombreActual = linea.split(':')[1].trim();\n        datosActuales = {\n          frec_paises: {},\n          genero: ''\n        };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        datosActuales.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        datosActuales.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        diccionario[nombreActual] = datosActuales;\n      }\n    }\n    return diccionario;\n  }\n  ngOnInit() {\n    this.loadCommonNames();\n    //LLamada a la funcion principal para la ejecucion de todo\n    this.main();\n  }\n  ngAfterViewInit() {\n    // Este método se ejecutará después de que Angular haya inicializado la vista\n    // Perfe para realizar cualquier manipulación adicional del DOM relacionada con el gráfico\n    // como ajustes de estilo, cambios dinámicos en los datos, etc.\n  }\n  esperarResearcherNoVacio() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (!_this.researchers || _this.researchers.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  // obtenerResearchers() {\n  //   this.apiService.obtenerResearchers(this.titulosSeleccionados).subscribe({\n  //     next: (response: any) => {\n  //       this.researchers = response;\n  //       this.statsResearchers();\n  //       this.generarGrafico3('lineChart1', 'Number of authors', this.estadisticas[0].anios, this.estadisticas[0].numResearchers);\n  //     },\n  //     error: (error: any) => {\n  //       console.error('Error al obtener los researchers:', error);\n  //     }\n  //   });\n  // }\n  // obtenerPapers() {\n  //   this.apiService.obtenerPapers(this.titulosSeleccionados, this.conferenceOption, this.venueName).subscribe({\n  //     next: (response: any) => {\n  //       this.papers = response;\n  //       this.statsPapers();\n  //       this.generarGrafico3('lineChart2', 'Number of papers', this.estadisticas[1].anios, this.estadisticas[1].numPapers);\n  //     },\n  //     error: (error: any) => {\n  //       console.error('Error al obtener los papers:', error);\n  //     }\n  //   });\n  // }\n  // obtenerColaboraciones() {\n  //   this.apiService.obtenerColaboraciones(this.titulosSeleccionados, this.conferenceOption, this.venueName).subscribe({\n  //     next: (response: any) => {\n  //       this.colaboraciones = response;\n  //       this.statsColaboraciones();\n  //       this.generarGrafico3('lineChart3', 'Density', this.estadisticas[3].anios, this.estadisticas[3].densidades);\n  //     },\n  //     error: (error: any) => {\n  //       console.error('Error al obtener las colaboraciones:', error);\n  //     }\n  //   });\n  // }\n  obtenerInstituciones() {\n    // que son las instituciones?\n  }\n  esperarAuthorsWithPapersNoVacio() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this2.papersWithAuthors || _this2.papersWithAuthors.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  esperarSingleAuthorsNoVacio() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      while (!_this3.singleAuthor || _this3.singleAuthor.length === 0) {\n        yield new Promise(resolve => setTimeout(resolve, 100));\n      }\n    })();\n  }\n  // obtenerSingleAuthorPapers() {\n  //     this.apiService.obtenerAuthorsPapers(this.titulosSeleccionados, this.conferenceOption, this.venueName)\n  //       .subscribe({\n  //         next: async (response: any) => {\n  //           this.singleAuthor = response;\n  //           this.statsSingleAuthor();\n  //           this.generarGraficoBarras('barChart1', 'Single Author Papers', this.estadisticas[4].anios, this.estadisticas[4].porcentajes);          \n  //         },\n  //         error: (error: any) => {\n  //           console.error('Error al obtener los Author Papers:', error);\n  //         }\n  //       });\n  // }\n  /**\n   * Función para obtener las distribuciones tanto de autores por papers como de papers por autores\n   */\n  obtenerDistribuciones() {\n    console.log(\"distribuciones antes o despues?\");\n    const labels = ['1', '2', '3', '4', '5 o más'];\n    // Este representa el número de autores que tiene cada paper\n    const autoresPorPaper = [1, 2, 3, 4].map(numAuthors => this.papersWithAuthors.filter(paper => paper.numAuthors === numAuthors).length);\n    autoresPorPaper[4] = this.papersWithAuthors.filter(paper => paper.numAuthors >= 5).length;\n    let totalPapers = this.papers.reduce((total, paper) => total + paper.numPapers, 0);\n    // Ese representa el número de papers publicados que tiene cada autor\n    const papersPorAutor = [1, 2, 3, 4].map(numPubs => this.singleAuthor.filter(paper => paper.numPublications === numPubs).length);\n    papersPorAutor[4] = this.singleAuthor.filter(paper => paper.numPublications >= 5).length;\n    const totalAutores = this.singleAuthor.length;\n    // Creamos las dos tablas que se vinculan con los ids del html\n    const autoresTabla = document.querySelector('#autoresTabla tbody');\n    const papersTabla = document.querySelector('#papersTabla tbody');\n    if (autoresTabla !== null) {\n      autoresPorPaper.forEach((cantidad, index) => {\n        const row = document.createElement('tr');\n        const porcentaje = (cantidad / totalPapers * 100).toFixed(2);\n        const valor = cantidad.toString() + \"(\" + porcentaje + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${valor}</td>`;\n        autoresTabla.appendChild(row);\n      });\n    }\n    if (papersTabla !== null) {\n      papersPorAutor.forEach((cantidad, index) => {\n        const row = document.createElement('tr');\n        const porcentaje = (cantidad / totalAutores * 100).toFixed(2);\n        const valor = cantidad.toString() + \"(\" + porcentaje + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${valor}</td>`;\n        papersTabla.appendChild(row);\n      });\n    }\n  }\n  obtenerDatosDemograficos() {\n    console.log(\"demograficos antes o despues?\");\n    const datasets = this.researchers.map(researcher => {\n      let nombre = researcher.researcher.properties.name.split(' ')[0];\n      if (nombre.includes(\"-\")) {\n        nombre = nombre.split('-')[0];\n      }\n      const anios = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      const datasetPorAnio = anios.map(year => {\n        const info = this.commonNames[nombre];\n        const genero = info ? info.genero : 'Desconocido';\n        const frecuencias = info ? info.frec_paises : {};\n        return {\n          year,\n          nombre,\n          genero,\n          frecuencias\n        };\n      });\n      return datasetPorAnio;\n    }).flat();\n    console.log(\"datasets en demogr\");\n    console.log(datasets);\n    this.statsGenero(datasets);\n    this.statsGeografia(datasets);\n  }\n  generarNGrams(titles, n) {\n    const ngrams = [];\n    titles.forEach(title => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  countFrequencies(ngrams) {\n    const frequencies = new Map();\n    ngrams.forEach(ngram => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n  limpiarTitulo(titulo, stopwords) {\n    // Separar el título en palabras\n    const palabras = titulo.toLowerCase().split(\" \").map(palabra => palabra.replace(/[^\\w\\s]/g, \"\"));\n    // Eliminamos repeticiones de letras y plurales para hacer mejor la frecuencia\n    const palabrasSinRepetir = palabras.map(palabra => palabra.replace(/(.)\\1+/g, \"$1\"));\n    const palabrasSingulares = palabrasSinRepetir.map(palabra => singular(palabra));\n    // Filtrar las palabras para eliminar las stopwords\n    const palabrasFiltradas = palabrasSingulares.filter(palabra => !stopwords.includes(palabra));\n    // Unir las palabras filtradas en un nuevo título\n    const nuevoTitulo = palabrasFiltradas.join(' ');\n    return nuevoTitulo;\n  }\n  getTopN(frequencies, n) {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n  obtenerTopicAnalisis() {\n    // Requerimos natural para tokenizar y eliminar las stopwords, y calcular frecuencias\n    const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n    const titulosLimpios = this.papersWithAuthors.map(paper => {\n      const ipName = this.limpiarTitulo(paper.ipName, stopwords);\n      const year = parseInt(paper.year);\n      return {\n        ipName,\n        year\n      };\n    });\n    const bigrams = this.generarNGrams(titulosLimpios.map(paper => paper.ipName), 2);\n    const trigrams = this.generarNGrams(titulosLimpios.map(paper => paper.ipName), 3);\n    const bigramFrequencies = this.countFrequencies(bigrams);\n    const trigramFrequencies = this.countFrequencies(trigrams);\n    const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n    const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n    const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: titulosLimpios.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n      ngram,\n      count,\n      years: titulosLimpios.filter(paper => paper.ipName.includes(ngram)).map(paper => paper.year)\n    }));\n    const table1 = document.querySelector('#tablaBigramas tbody');\n    const table2 = document.querySelector('#tablaTrigramas tbody');\n    if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n      top20BigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table1.appendChild(row);\n      });\n      top20TrigramsWithYears.forEach(({\n        ngram,\n        count,\n        years\n      }) => {\n        const minYear = Math.min(...years);\n        const maxYear = Math.max(...years);\n        const row = document.createElement('tr');\n        row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n        table2.appendChild(row);\n      });\n    }\n    const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n    combinedData.sort((a, b) => b.count - a.count);\n    const maxFrecuencia = combinedData[0].count;\n    const minWeight = 0;\n    const maxWeight = 20;\n    const wordCloudData = combinedData.map((item, index) => ({\n      text: item.ngram,\n      weight: this.calcularWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n      color: this.randomColor()\n    }));\n    console.log(\"wordcloud data\");\n    console.log(wordCloudData);\n    this.cloudData = wordCloudData;\n  }\n  calcularWeight(frecuencia, maxFrecuencia, minWeight, maxWeight) {\n    const peso = frecuencia / maxFrecuencia;\n    const pesoNormalizado = peso * (maxWeight - minWeight) + minWeight;\n    return Math.round(pesoNormalizado);\n  }\n  /**\n   * ############################################\n   */\n  statsResearchers() {\n    const numResearchers = this.researchers.length;\n    const anios = this.titulosSeleccionados.map(titulo => titulo.properties.name);\n    this.yearsSeleccionados = anios;\n    const numResearchersPorAnio = anios.map(anio => this.researchers.filter(researcher => researcher.years.includes(anio)).length);\n    console.log(\"this.reserrchers\");\n    console.log(this.researchers);\n    this.estadisticas[0] = {\n      anios: anios,\n      numResearchers: numResearchersPorAnio\n    };\n  }\n  statsPapers() {\n    const anios = this.papers.map(paper => paper.year); // Extraer los años de this.numPapers\n    const numPapers = this.papers.map(paper => paper.numPapers);\n    console.log(\"this.papers en stats papers\");\n    console.log(this.papers);\n    this.estadisticas[1] = {\n      anios: anios,\n      numPapers: numPapers\n    };\n  }\n  statsInstitutions() {\n    const anios = this.papers.map(paper => paper.year);\n    // Extraer los años de this.numPapers\n    // const numPapers = this.papers.map(paper => paper.numPapers); \n    this.estadisticas[2] = {\n      anios: anios,\n      numPapers: anios\n    };\n  }\n  statsColaboraciones() {\n    const colabsXtotal = this.papers.map(paper => {\n      const colab = this.colaboraciones.find(c => c.year === paper.year);\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapers: paper.numPapers\n      };\n    });\n    const densidad = colabsXtotal.map(dato => {\n      const {\n        year,\n        numColabs,\n        numPapers\n      } = dato;\n      const densidad = numColabs / numPapers;\n      return {\n        densidad,\n        year\n      };\n    });\n    this.estadisticas[3] = {\n      anios: densidad.map(dato => dato.year),\n      densidades: densidad.map(dato => dato.densidad)\n    };\n  }\n  statsSingleAuthor() {\n    const papersWithAuthors = [];\n    // Mapea todos los researchers, para crear papersWithAuthors, que es un array que tiene el nombre de una publicacion\n    // y los autores que han contribuido él.\n    this.singleAuthor.forEach(author => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n          papersWithAuthors.push({\n            ipName,\n            numAuthors: 1,\n            authorNames: [author.researcher],\n            year: author.year\n          });\n        }\n      });\n    });\n    this.papersWithAuthors = papersWithAuthors;\n    // Conseguimos todas las entradas cuyo autor sea uno, para las estadisticas\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const porcentaje = numPapersWithSingleAuthor / numPapers * 100;\n      return {\n        year,\n        porcentaje\n      };\n    });\n    this.estadisticas[4] = {\n      anios: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.porcentaje)\n    };\n  }\n  statsGeografia(datasets) {\n    const mapeoFecha = {};\n    const datasetFiltrado = datasets.filter(objeto => Object.keys(objeto.frecuencias).length > 0);\n    // Obtener todas las fechas únicas\n    const fechasUnicas = [...new Set(datasetFiltrado.map(dato => dato.year))];\n    // Iterar sobre las fechas\n    for (const fecha of fechasUnicas) {\n      const objetosFecha = datasetFiltrado.filter(dato => dato.year === fecha);\n      // Crear objeto de mapeo para la fecha actual\n      mapeoFecha[fecha] = {};\n      for (const objeto of objetosFecha) {\n        let paisMasAlto = '';\n        let frecuenciaMasAlta = -1;\n        for (const pais in objeto.frecuencias) {\n          if (objeto.frecuencias[pais] > frecuenciaMasAlta) {\n            paisMasAlto = pais;\n            frecuenciaMasAlta = objeto.frecuencias[pais];\n          }\n        }\n        if (!(paisMasAlto in mapeoFecha[fecha])) {\n          mapeoFecha[fecha][paisMasAlto] = 1;\n        } else {\n          mapeoFecha[fecha][paisMasAlto] = mapeoFecha[fecha][paisMasAlto] + 1;\n        }\n      }\n    }\n    console.log(\"mapeoFecha antes\");\n    console.log(mapeoFecha);\n    // Normalizamos valores según su total\n    for (const year in mapeoFecha) {\n      let total = 0;\n      for (const country in mapeoFecha[year]) {\n        total += mapeoFecha[year][country];\n      }\n      for (const country in mapeoFecha[year]) {\n        mapeoFecha[year][country] = Number((mapeoFecha[year][country] / total).toFixed(4));\n      }\n    }\n    const years = Object.keys(mapeoFecha); // Obtener las llaves de los años\n    const countries = Object.keys(mapeoFecha[years[0]]); // Obtener los nombres de los países\n    const datasetsLabels = countries; // Etiquetas de los conjuntos de datos serán los nombres de los países\n    // Crear la matriz de datos para los países\n    const datasetsData = countries.map(country => years.map(year => mapeoFecha[year][country]));\n    console.log(\"datasetsData\");\n    console.log(datasetsData);\n    this.generarGraficoMultiple('lineChart5', years, datasetsLabels, datasetsData);\n  }\n  filterAuthorsByDecade(authors, startYear, endYear) {\n    const filteredAuthors = [];\n    // Recorrer los autores originales\n    authors.forEach(author => {\n      // Verificar si el autor está dentro de la década especificada\n      const authorYears = author.year.split(\",\").map(Number).filter(year => year >= startYear && year <= endYear);\n      if (authorYears.length > 0) {\n        // Buscar si ya existe un autor fusionado con el mismo nombre y década\n        const existingAuthor = filteredAuthors.find(filteredAuthor => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Fusionar las entradas del autor existente con las del autor actual\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Agregar el autor actual a la lista de autores filtrados\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n    return filteredAuthors;\n  }\n  statsProlificAuthors(selectedYears) {\n    // Obtener el rango de años seleccionados por el usuario\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n    // Calcular las décadas correspondientes al rango de años seleccionados\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n    // Generar las décadas dentro del rango de años seleccionados\n    const decades = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }\n    // Ordenar los autores por número de publicaciones en cada década\n    decades.forEach(decade => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20) {\n        decade.authors = decade.authors.slice(0, 20);\n      }\n    });\n    // Devolver las décadas con los autores ordenados\n    return decades;\n  }\n  generarTablasDecadas(decadeStats) {\n    const tablas = {\n      '1990s': document.querySelector('#tabla90 tbody'),\n      '2000s': document.querySelector('#tabla00 tbody'),\n      '2010s': document.querySelector('#tabla10 tbody'),\n      '2020s': document.querySelector('#tabla20 tbody')\n    };\n    console.log(\"decadestats\");\n    console.log(decadeStats);\n    for (const decada of decadeStats) {\n      const tabla = tablas[decada.label];\n      if (tabla instanceof HTMLElement) {\n        decada.authors.slice(0, 20).forEach(autor => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n          tabla.appendChild(row);\n        });\n      }\n    }\n  }\n  generarGrafico3(idChart, label, labels, data) {\n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          fill: false,\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    });\n  }\n  statsGenero(datasets) {\n    const datasetsPorGenero = {};\n    datasets.forEach(data => {\n      const {\n        year,\n        genero\n      } = data;\n      let genderKey = '';\n      if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n        genderKey = 'Hombres';\n      } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n        genderKey = 'Mujeres';\n      } else {\n        genderKey = 'Desconocido';\n      }\n      if (!datasetsPorGenero[genderKey]) {\n        datasetsPorGenero[genderKey] = [];\n      }\n      const existingData = datasetsPorGenero[genderKey].find(d => d.year === year);\n      if (existingData) {\n        existingData.count++;\n      } else {\n        datasetsPorGenero[genderKey].push({\n          year,\n          count: 1\n        });\n      }\n    });\n    // Crear un objeto para almacenar los datos ordenados\n    const datosOrdenados = {};\n    const hombres = datasetsPorGenero['Hombres'];\n    const mujeres = datasetsPorGenero['Mujeres'];\n    // Ordenar los datos de hombres\n    hombres.forEach(dato => {\n      const anio = dato.year;\n      const conteo = dato.count;\n      datosOrdenados[anio] = {\n        hombres: conteo,\n        mujeres: 0,\n        total: conteo\n      };\n    });\n    // Ordenar los datos de mujeres y combinarlos con los datos de hombres\n    mujeres.forEach(dato => {\n      const anio = dato.year;\n      const conteo = dato.count;\n      if (datosOrdenados[anio]) {\n        datosOrdenados[anio].mujeres = conteo;\n        datosOrdenados[anio].total += conteo;\n      } else {\n        datosOrdenados[anio] = {\n          mujeres: conteo,\n          hombres: 0,\n          total: conteo\n        };\n      }\n    });\n    console.log(\"datos ordenados\");\n    console.log(datosOrdenados);\n    // Obtener los años ordenados\n    const aniosOrdenados = Object.keys(datosOrdenados).sort();\n    const conteosHombres = aniosOrdenados.map(anio => Number((datosOrdenados[anio].hombres / datosOrdenados[anio].total).toFixed(4)));\n    const conteosMujeres = aniosOrdenados.map(anio => Number((datosOrdenados[anio].mujeres / datosOrdenados[anio].total).toFixed(4)));\n    console.log(\"conteos hombres\");\n    console.log(conteosHombres);\n    this.generarGraficoCircular('lineChart4', aniosOrdenados, ['Hombres', 'Mujeres'], [conteosHombres, conteosMujeres]);\n    this.generarGraficoMultiple('lineChart8', aniosOrdenados, ['Hombres', 'Mujeres'], [conteosHombres, conteosMujeres]);\n  }\n  generarGraficoMultiple(chartId, labels, datasetsLabels, datasetsData) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      borderColor: this.getRandomColor(index)\n    }));\n    const chartConfig = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        }\n      }\n    };\n    // Crear el gráfico\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generarGraficoCircular(chartId, labels, datasetsLabels, datasetsData) {\n    const colores = ['#FF5733', '#3399FF'];\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colores[index],\n      borderColor: 'black'\n    }));\n    const chartConfig = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        }\n      }\n    };\n    const ctx = document.getElementById(chartId);\n    new Chart(ctx, chartConfig);\n  }\n  generarGraficoBarras(idChart, label, labels, data) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          backgroundColor: 'rgb(0, 22, 68)',\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  randomColor() {\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n  getRandomColor(index) {\n    let colors = {\n      0: \"rgba(75, 192, 192, 1)\",\n      1: \"rgba(192, 75, 75, 1)\",\n      2: \"rgba(98, 192, 75, 1)\",\n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n    return colors[index];\n  }\n  main() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this4.titulosSeleccionados = _this4.seleccionService.obtenerTitulosSeleccionados();\n        console.log(\"TItulosselecc\");\n        console.log(_this4.titulosSeleccionados);\n        _this4.conferenceOption = _this4.seleccionService.obtenerOpcionConferencia();\n        _this4.venueName = _this4.seleccionService.obtenerNombreVenue();\n        _this4.obtenerPapers();\n        _this4.obtenerColaboraciones();\n        _this4.obtenerSingleAuthorPapers();\n        _this4.obtenerResearchers();\n        if (_this4.researchers.length == 0) {\n          yield _this4.esperarResearcherNoVacio();\n          _this4.obtenerDatosDemograficos();\n        } else {\n          _this4.obtenerDatosDemograficos();\n        }\n        if (_this4.papersWithAuthors.length == 0) {\n          yield _this4.esperarAuthorsWithPapersNoVacio();\n          _this4.obtenerTopicAnalisis();\n          _this4.obtenerDistribuciones();\n        } else {\n          _this4.obtenerTopicAnalisis();\n          _this4.obtenerDistribuciones();\n        }\n        if (_this4.singleAuthor.length == 0) {\n          yield _this4.esperarSingleAuthorsNoVacio();\n          _this4.decadeStats = _this4.statsProlificAuthors(_this4.yearsSeleccionados);\n          _this4.generarTablasDecadas(_this4.decadeStats);\n        } else {\n          _this4.decadeStats = _this4.statsProlificAuthors(_this4.yearsSeleccionados);\n          _this4.generarTablasDecadas(_this4.decadeStats);\n        }\n      } catch (error) {\n        console.error('Error al obtener los datos:', error);\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function EstadisticasComponent_Factory(t) {\n    return new (t || EstadisticasComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.SeleccionService), i0.ɵɵdirectiveInject(i4.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EstadisticasComponent,\n    selectors: [[\"app-estadisticas\"]],\n    viewQuery: function EstadisticasComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chartCanvas = _t.first);\n      }\n    },\n    decls: 203,\n    vars: 2,\n    consts: [[1, \"flex-container\"], [1, \"flex-item\"], [1, \"canvas-container\"], [\"id\", \"lineChart1\"], [\"id\", \"lineChart2\"], [1, \"line\"], [\"id\", \"lineChart3\"], [\"id\", \"barChart1\"], [1, \"especial\"], [1, \"container-table\"], [1, \"tabla\"], [\"id\", \"autoresTabla\"], [1, \"linev\"], [\"id\", \"papersTabla\"], [1, \"flex-container2\"], [1, \"graph-bars\"], [1, \"canvas-container1\"], [1, \"legend\"], [1, \"hombres\"], [1, \"mujeres\"], [\"id\", \"lineChart4\", 1, \"circular\"], [1, \"graph-bars2\"], [1, \"canvas-container2\"], [\"id\", \"lineChart8\"], [\"id\", \"lineChart5\"], [\"id\", \"tablaBigramas\"], [\"id\", \"tablaTrigramas\"], [1, \"conceptual\"], [3, \"config\", \"data\"], [1, \"container-table2\"], [\"id\", \"tabla90\"], [\"colspan\", \"2\"], [\"id\", \"tabla00\"], [\"id\", \"tabla10\", 1, \"centered-table\"], [\"id\", \"tabla20\", 1, \"centered-table\"], [1, \"line3\"], [\"id\", \"nn\"]],\n    template: function EstadisticasComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Statistics\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 0)(4, \"div\", 1)(5, \"h3\");\n        i0.ɵɵtext(6, \"Authors by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelement(8, \"canvas\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 1)(10, \"h3\");\n        i0.ɵɵtext(11, \"Papers by year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 2);\n        i0.ɵɵelement(13, \"canvas\", 4);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(14, \"hr\", 5);\n        i0.ɵɵelementStart(15, \"div\", 0)(16, \"div\", 1)(17, \"h3\");\n        i0.ɵɵtext(18, \"Density evolution over the years\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 2);\n        i0.ɵɵelement(20, \"canvas\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 1)(22, \"h3\");\n        i0.ɵɵtext(23, \"Percentage of single-author papers per year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 2);\n        i0.ɵɵelement(25, \"canvas\", 7);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(26, \"hr\", 5);\n        i0.ɵɵelementStart(27, \"h3\", 8);\n        i0.ɵɵtext(28, \"Distributions of authors per paper and of papers per author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 9)(30, \"div\", 10)(31, \"table\", 11)(32, \"thead\")(33, \"tr\")(34, \"th\");\n        i0.ɵɵtext(35, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"th\");\n        i0.ɵɵtext(37, \"Papers (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(38, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(39, \"div\", 12);\n        i0.ɵɵelementStart(40, \"div\", 10)(41, \"table\", 13)(42, \"thead\")(43, \"tr\")(44, \"th\");\n        i0.ɵɵtext(45, \"Papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"th\");\n        i0.ɵɵtext(47, \"Author (%)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(48, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(49, \"hr\", 5);\n        i0.ɵɵelementStart(50, \"h3\", 8);\n        i0.ɵɵtext(51, \" Percentage of Publications Men-Women / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\", 14)(53, \"div\", 15)(54, \"div\", 16)(55, \"div\", 17);\n        i0.ɵɵelement(56, \"div\", 18);\n        i0.ɵɵtext(57, \" Men \");\n        i0.ɵɵelement(58, \"div\", 19);\n        i0.ɵɵtext(59, \" Women \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"canvas\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(61, \"div\", 21)(62, \"div\", 22);\n        i0.ɵɵelement(63, \"canvas\", 23);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(64, \"hr\", 5);\n        i0.ɵɵelementStart(65, \"h3\");\n        i0.ɵɵtext(66, \" Percentage of publications by Country / Year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"div\", 0)(68, \"div\", 1)(69, \"div\", 2);\n        i0.ɵɵelement(70, \"canvas\", 24);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(71, \"hr\", 5);\n        i0.ɵɵelementStart(72, \"h3\", 8);\n        i0.ɵɵtext(73, \"Most frequent Bigrams and Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(74, \"div\", 9)(75, \"div\", 10)(76, \"table\", 25)(77, \"thead\")(78, \"tr\")(79, \"th\");\n        i0.ɵɵtext(80, \"Bigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"th\");\n        i0.ɵɵtext(82, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"th\");\n        i0.ɵɵtext(84, \"First \");\n        i0.ɵɵelement(85, \"br\");\n        i0.ɵɵtext(86, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"th\");\n        i0.ɵɵtext(88, \"Recent \");\n        i0.ɵɵelement(89, \"br\");\n        i0.ɵɵtext(90, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(91, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(92, \"div\", 12);\n        i0.ɵɵelementStart(93, \"div\", 10)(94, \"table\", 26)(95, \"thead\")(96, \"tr\")(97, \"th\");\n        i0.ɵɵtext(98, \"Trigrams\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(99, \"th\");\n        i0.ɵɵtext(100, \"Appearances\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(101, \"th\");\n        i0.ɵɵtext(102, \"First \");\n        i0.ɵɵelement(103, \"br\");\n        i0.ɵɵtext(104, \" a\\u00F1o\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(105, \"th\");\n        i0.ɵɵtext(106, \"Recent \");\n        i0.ɵɵelement(107, \"br\");\n        i0.ɵɵtext(108, \" a\\u00F1o\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(109, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(110, \"hr\", 5);\n        i0.ɵɵelementStart(111, \"h3\", 8);\n        i0.ɵɵtext(112, \"Frequent terms from all titles of papers\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(113, \"div\", 27);\n        i0.ɵɵelement(114, \"angular-tag-cloud\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(115, \"hr\", 5);\n        i0.ɵɵelementStart(116, \"h3\", 8);\n        i0.ɵɵtext(117, \"Most prolific authors according to their number of publications accumulated by decade\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(118, \"div\", 29)(119, \"div\", 10)(120, \"table\", 30)(121, \"thead\")(122, \"tr\")(123, \"th\", 31);\n        i0.ɵɵtext(124, \" (a) 1989-1999 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(125, \"hr\");\n        i0.ɵɵelementStart(126, \"tr\")(127, \"th\");\n        i0.ɵɵtext(128, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(129, \"th\");\n        i0.ɵɵtext(130, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(131, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(132, \"div\", 12);\n        i0.ɵɵelementStart(133, \"div\", 10)(134, \"table\", 32)(135, \"thead\")(136, \"tr\")(137, \"th\", 31);\n        i0.ɵɵtext(138, \" (b) 1999-2009 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(139, \"hr\");\n        i0.ɵɵelementStart(140, \"tr\")(141, \"th\");\n        i0.ɵɵtext(142, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(143, \"th\");\n        i0.ɵɵtext(144, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(145, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(146, \"div\", 12);\n        i0.ɵɵelementStart(147, \"div\", 10)(148, \"table\", 33)(149, \"thead\")(150, \"tr\")(151, \"th\", 31);\n        i0.ɵɵtext(152, \" (a) 2009-2019 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(153, \"hr\");\n        i0.ɵɵelementStart(154, \"tr\")(155, \"th\");\n        i0.ɵɵtext(156, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(157, \"th\");\n        i0.ɵɵtext(158, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(159, \"tbody\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(160, \"div\", 12);\n        i0.ɵɵelementStart(161, \"div\", 10)(162, \"table\", 34)(163, \"thead\")(164, \"tr\")(165, \"th\", 31);\n        i0.ɵɵtext(166, \" (a) 2019-2024 \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(167, \"hr\");\n        i0.ɵɵelementStart(168, \"tr\")(169, \"th\");\n        i0.ɵɵtext(170, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(171, \"th\");\n        i0.ɵɵtext(172, \"#\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(173, \"tbody\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(174, \"hr\", 35);\n        i0.ɵɵelementStart(175, \"h3\");\n        i0.ɵɵtext(176, \"Authors with their first and most recent year of publication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(177, \"div\", 29)(178, \"div\", 10)(179, \"table\", 36)(180, \"thead\")(181, \"tr\")(182, \"th\");\n        i0.ɵɵtext(183, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(184, \"th\");\n        i0.ɵɵtext(185, \"Degree\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(186, \"th\");\n        i0.ɵɵtext(187, \"First \");\n        i0.ɵɵelement(188, \"br\");\n        i0.ɵɵtext(189, \" year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(190, \"th\");\n        i0.ɵɵtext(191, \"Recent \");\n        i0.ɵɵelement(192, \"br\");\n        i0.ɵɵtext(193, \" year\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(194, \"th\");\n        i0.ɵɵtext(195, \"h-index\");\n        i0.ɵɵelement(196, \"br\");\n        i0.ɵɵtext(197, \" (All time)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(198, \"th\");\n        i0.ɵɵtext(199, \"h-index\");\n        i0.ɵɵelement(200, \"br\");\n        i0.ɵɵtext(201, \" (Since 2015)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(202, \"tbody\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(114);\n        i0.ɵɵproperty(\"config\", ctx.options)(\"data\", ctx.cloudData);\n      }\n    },\n    dependencies: [i5.TagCloudComponent],\n    styles: [\"@charset \\\"UTF-8\\\";\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 30px;\\n}\\n\\nh3[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 20px;\\n  margin-bottom: 10px;\\n}\\n\\n.flex-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.flex-container2[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  overflow: auto;\\n}\\n\\n.graph-bars[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.graph-bars2[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container1[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 91%;\\n}\\n\\n.canvas-container2[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 96%;\\n}\\n\\n.legend[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  font-size: 18px;\\n  margin-bottom: 20px;\\n}\\n\\n.flex-item[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  margin-bottom: 50px;\\n}\\n\\n.canvas-container[_ngcontent-%COMP%] {\\n  border: 2px solid rgb(0, 22, 68);\\n  padding: 20px;\\n  width: 95%;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  max-width: 100%; \\n\\n  height: auto;\\n  display: block;\\n}\\n\\n.line3[_ngcontent-%COMP%] {\\n  margin-top: 30px;\\n  margin-bottom: 30px;\\n}\\n\\n.line[_ngcontent-%COMP%] {\\n  margin-top: 20px;\\n  margin-bottom: 20px;\\n  background-color: rgb(0, 22, 68);\\n}\\n\\n.container-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  justify-content: center;\\n  display: flex;\\n  overflow: auto;\\n}\\n\\n.container-table2[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  display: flex;\\n  margin-right: 100px;\\n}\\n\\n.linev[_ngcontent-%COMP%] {\\n  border-right: 1px solid rgb(0, 22, 68);\\n  margin-right: 45px;\\n  margin-left: 20px;\\n}\\n\\n.tabla[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\ntd[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n  padding: 20px;\\n  vertical-align: middle;\\n  text-align: center;\\n  vertical-align: center;\\n  font-size: 20px;\\n}\\n\\ndiv[_ngcontent-%COMP%] {\\n  min-width: 40px;\\n  min-height: 1px;\\n  margin-right: 5px;\\n}\\n\\n.especial[_ngcontent-%COMP%] {\\n  margin-bottom: 40px;\\n}\\n\\n.hombres[_ngcontent-%COMP%] {\\n  background-color: rgb(255, 87, 51);\\n}\\n\\n.mujeres[_ngcontent-%COMP%] {\\n  background-color: rgb(51, 153, 255);\\n  margin-left: 20PX;\\n}\\n\\n@media screen and (max-width: 768px) {\\n  td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n  .legend[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    font-size: 10px;\\n    margin-bottom: 20px;\\n  }\\n  .container-table[_ngcontent-%COMP%] {\\n    flex-direction: column; \\n\\n  }\\n  .container-table2[_ngcontent-%COMP%] {\\n    flex-direction: column; \\n\\n  }\\n  .tabla[_ngcontent-%COMP%] {\\n    border-right: none; \\n\\n    padding-right: 0; \\n\\n    padding-bottom: 20px; \\n\\n  }\\n}\\n.conceptual[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 200px;\\n}\\n\\n.aparte[_ngcontent-%COMP%] {\\n  margin-top: 500px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZXN0YWRpc3RpY2FzL2VzdGFkaXN0aWNhcy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxnQkFBZ0I7QUFJaEI7RUFDRSxrQkFBQTtFQUNBLGVBQUE7QUFGRjs7QUFLQTtFQUNFLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLGNBQUE7QUFGRjs7QUFLQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsY0FBQTtBQUZGOztBQUtBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7QUFGRjs7QUFLQTtFQUNFLGdDQUFBO0VBQ0EsYUFBQTtFQUNBLFVBQUE7QUFGRjs7QUFLQTtFQUNFLGdDQUFBO0VBQ0EsYUFBQTtFQUNBLFVBQUE7QUFGRjs7QUFLQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLGVBQUE7RUFDQSxtQkFBQTtBQUZGOztBQU1BO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBSEY7O0FBTUE7RUFDRSxnQ0FBQTtFQUNBLGFBQUE7RUFDQSxVQUFBO0FBSEY7O0FBTUE7RUFDRSxlQUFBLEVBQUEsaUNBQUE7RUFDQSxZQUFBO0VBQ0EsY0FBQTtBQUhGOztBQU1BO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtBQUhGOztBQU1BO0VBQ0UsZ0JBQUE7RUFDQSxtQkFBQTtFQUNBLGdDQUFBO0FBSEY7O0FBTUE7RUFDRSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxhQUFBO0VBQ0EsY0FBQTtBQUhGOztBQU1BO0VBQ0UsdUJBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFIRjs7QUFNQTtFQUNFLHNDQUFBO0VBQ0Esa0JBQUE7RUFDQSxpQkFBQTtBQUhGOztBQU9BO0VBQ0Usa0JBQUE7QUFKRjs7QUFRQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtFQUNBLGtCQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0FBTEY7O0FBUUE7RUFDRSxlQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0FBTEY7O0FBUUE7RUFDRSxtQkFBQTtBQUxGOztBQVNBO0VBQ0Usa0NBQUE7QUFORjs7QUFTQTtFQUNFLG1DQUFBO0VBQ0EsaUJBQUE7QUFORjs7QUFVQTtFQUVFO0lBQ0UsYUFBQTtFQVJGO0VBV0E7SUFDRSxhQUFBO0lBQ0EsdUJBQUE7SUFDQSxlQUFBO0lBQ0EsbUJBQUE7RUFURjtFQVdBO0lBQ0Usc0JBQUEsRUFBQSxpRUFBQTtFQVRGO0VBV0E7SUFDRSxzQkFBQSxFQUFBLGlFQUFBO0VBVEY7RUFXQTtJQUNFLGtCQUFBLEVBQUEsbURBQUE7SUFDQSxnQkFBQSxFQUFBLHFEQUFBO0lBQ0Esb0JBQUEsRUFBQSwwREFBQTtFQVRGO0FBQ0Y7QUFhQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0VBQ0EsYUFBQTtBQVhGOztBQWdCQTtFQUNFLGlCQUFBO0FBYkYiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVye1xuXG59XG5cbmgye1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMzBweDtcbn1cblxuaDMge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmZsZXgtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uZmxleC1jb250YWluZXIyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4uZ3JhcGgtYmFyc3tcbiAgcGFkZGluZzogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLmdyYXBoLWJhcnMye1xuICBwYWRkaW5nOiAyMHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xufVxuXG4uY2FudmFzLWNvbnRhaW5lcjEge1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiA5MSU7XG59XG5cbi5jYW52YXMtY29udGFpbmVyMiB7XG4gIGJvcmRlcjogMnB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgcGFkZGluZzogMjBweDtcbiAgd2lkdGg6IDk2JTtcbn1cblxuLmxlZ2VuZHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMThweDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuXG4uZmxleC1pdGVtIHtcbiAgcGFkZGluZzogMjBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcbn1cblxuLmNhbnZhcy1jb250YWluZXIge1xuICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMCwgMjIsIDY4KTsgXG4gIHBhZGRpbmc6IDIwcHg7XG4gIHdpZHRoOiA5NSU7XG59XG5cbmNhbnZhcyB7XG4gIG1heC13aWR0aDogMTAwJTsgLyogSGFjZSBsYXMgZ3LDg8KhZmljYXMgcmVzcG9uc2l2ZSAqL1xuICBoZWlnaHQ6IGF1dG87IFxuICBkaXNwbGF5OiBibG9jazsgXG59XG5cbi5saW5lM3tcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDtcbn1cblxuLmxpbmV7XG4gIG1hcmdpbi10b3A6IDIwcHg7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigwLCAyMiwgNjgpO1xufVxuXG4uY29udGFpbmVyLXRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyBcbiAgZGlzcGxheTogZmxleDtcbiAgb3ZlcmZsb3c6IGF1dG87XG59XG5cbi5jb250YWluZXItdGFibGUyIHtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IFxuICBkaXNwbGF5OiBmbGV4O1xuICBtYXJnaW4tcmlnaHQ6IDEwMHB4O1xufVxuXG4ubGluZXZ7XG4gIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYigwLCAyMiwgNjgpOyBcbiAgbWFyZ2luLXJpZ2h0OiA0NXB4O1xuICBtYXJnaW4tbGVmdDogMjBweDtcbn1cblxuXG4udGFibGF7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcblxufVxuXG50ZCwgdGgge1xuICBwYWRkaW5nOiAyMHB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHZlcnRpY2FsLWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMjBweDtcbn1cblxuZGl2IHtcbiAgbWluLXdpZHRoOiA0MHB4O1xuICBtaW4taGVpZ2h0OiAxcHg7XG4gIG1hcmdpbi1yaWdodDogNXB4O1xufVxuXG4uZXNwZWNpYWx7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XG59XG5cblxuLmhvbWJyZXMge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCA4NywgNTEpO1xuICBcbn1cbi5tdWplcmVzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDUxLCAxNTMsIDI1NSk7XG4gIG1hcmdpbi1sZWZ0OiAyMFBYO1xufVxuXG5cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG5cbiAgdGQsIHRoIHtcbiAgICBwYWRkaW5nOiAxMHB4OyBcbiAgfVxuXG4gIC5sZWdlbmR7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDEwcHg7XG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgfVxuICAuY29udGFpbmVyLXRhYmxlIHtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyAvKiBBcGlsYSBsYXMgdGFibGFzIHVuYSBlbmNpbWEgZGUgbGEgb3RyYSBlbiBwYW50YWxsYXMgcGVxdWXDg8KxYXMgKi9cbiAgfVxuICAuY29udGFpbmVyLXRhYmxlMiB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgLyogQXBpbGEgbGFzIHRhYmxhcyB1bmEgZW5jaW1hIGRlIGxhIG90cmEgZW4gcGFudGFsbGFzIHBlcXVlw4PCsWFzICovXG4gIH1cbiAgLnRhYmxhIHtcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7IC8qIEVsaW1pbmEgZWwgYm9yZGUgZGVyZWNobyBlbiBwYW50YWxsYXMgcGVxdWXDg8KxYXMgKi9cbiAgICBwYWRkaW5nLXJpZ2h0OiAwOyAvKiBFbGltaW5hIGVsIHBhZGRpbmcgZGVyZWNobyBlbiBwYW50YWxsYXMgcGVxdWXDg8KxYXMgKi9cbiAgICBwYWRkaW5nLWJvdHRvbTogMjBweDsgLyogQWdyZWdhIGVzcGFjaW8gZW50cmUgbGFzIHRhYmxhcyBlbiBwYW50YWxsYXMgcGVxdWXDg8KxYXMgKi9cbiAgfVxuICBcbn1cblxuLmNvbmNlcHR1YWwge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgXG4gIGhlaWdodDogMjAwcHg7IFxufVxuXG5cblxuLmFwYXJ0ZXtcbiAgbWFyZ2luLXRvcDogNTAwcHg7XG59XG5cblxuXG5cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["Chart","registerables","singular","register","EstadisticasComponent","constructor","route","apiService","seleccionService","http","titulosSeleccionados","yearsSeleccionados","conferenceOption","venueName","papers","colaboraciones","singleAuthor","estadisticas","researchers","papersWithAuthors","autoresPorPapersTable","papersPorAutoresTable","decadeStats","commonNames","options","width","height","overflow","realignOnResize","strict","step","cloudData","loadCommonNames","get","responseType","subscribe","data","parseCommonNames","error","console","lineas","split","diccionario","nombreActual","datosActuales","frec_paises","genero","linea","startsWith","trim","frec_paisesStr","substring","indexOf","lastIndexOf","JSON","parse","ngOnInit","main","ngAfterViewInit","esperarResearcherNoVacio","_this","_asyncToGenerator","length","Promise","resolve","setTimeout","obtenerInstituciones","esperarAuthorsWithPapersNoVacio","_this2","esperarSingleAuthorsNoVacio","_this3","obtenerDistribuciones","log","labels","autoresPorPaper","map","numAuthors","filter","paper","totalPapers","reduce","total","numPapers","papersPorAutor","numPubs","numPublications","totalAutores","autoresTabla","document","querySelector","papersTabla","forEach","cantidad","index","row","createElement","porcentaje","toFixed","valor","toString","innerHTML","appendChild","obtenerDatosDemograficos","datasets","researcher","nombre","properties","name","includes","anios","Array","isArray","years","datasetPorAnio","year","info","frecuencias","flat","statsGenero","statsGeografia","generarNGrams","titles","n","ngrams","title","words","toLowerCase","i","push","slice","join","countFrequencies","frequencies","Map","ngram","count","set","limpiarTitulo","titulo","stopwords","palabras","palabra","replace","palabrasSinRepetir","palabrasSingulares","palabrasFiltradas","nuevoTitulo","getTopN","sortedFrequencies","entries","sort","a","b","obtenerTopicAnalisis","titulosLimpios","ipName","parseInt","bigrams","trigrams","bigramFrequencies","trigramFrequencies","top20Bigrams","top20Trigrams","top20BigramsWithYears","top20TrigramsWithYears","table1","table2","HTMLElement","minYear","Math","min","maxYear","max","combinedData","maxFrecuencia","minWeight","maxWeight","wordCloudData","item","text","weight","calcularWeight","color","randomColor","frecuencia","peso","pesoNormalizado","round","statsResearchers","numResearchers","numResearchersPorAnio","anio","statsPapers","statsInstitutions","statsColaboraciones","colabsXtotal","colab","find","c","numColabs","densidad","dato","densidades","statsSingleAuthor","author","ipNames","paperIndex","findIndex","authorNames","papersWithOneAuthor","porcentajeByYear","numPapersWithSingleAuthor","porcentajes","mapeoFecha","datasetFiltrado","objeto","Object","keys","fechasUnicas","Set","fecha","objetosFecha","paisMasAlto","frecuenciaMasAlta","pais","country","Number","countries","datasetsLabels","datasetsData","generarGraficoMultiple","filterAuthorsByDecade","authors","startYear","endYear","filteredAuthors","authorYears","existingAuthor","filteredAuthor","statsProlificAuthors","selectedYears","startDecade","floor","endDecade","decades","decade","decadeLabel","decadeStartYear","decadeEndYear","decadeAuthors","label","generarTablasDecadas","tablas","decada","tabla","autor","generarGrafico3","idChart","lineChart","type","fill","borderColor","borderWidth","plugins","legend","font","size","family","scales","y","display","datasetsPorGenero","genderKey","existingData","d","datosOrdenados","hombres","mujeres","conteo","aniosOrdenados","conteosHombres","conteosMujeres","generarGraficoCircular","chartId","backgroundColor","getRandomColor","chartConfig","ctx","getElementById","colores","generarGraficoBarras","barChart","beginAtZero","r","random","g","colors","_this4","obtenerTitulosSeleccionados","obtenerOpcionConferencia","obtenerNombreVenue","obtenerPapers","obtenerColaboraciones","obtenerSingleAuthorPapers","obtenerResearchers","_","i0","ɵɵdirectiveInject","i1","ActivatedRoute","i2","ApiService","i3","SeleccionService","i4","HttpClient","_2","selectors","viewQuery","EstadisticasComponent_Query","rf","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/estadisticas.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/estadisticas/estadisticas.component.html"],"sourcesContent":["import { Component, OnInit, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../api.service';\nimport { SeleccionService } from '../seleccion.service';\n//import { Chart, CategoryScale, LineController  } from 'chart.js';\nimport { Chart, registerables } from 'chart.js';\nChart.register(...registerables);\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, map, tap, throwError } from 'rxjs';\nimport { CloudData, CloudOptions } from 'angular-tag-cloud-module';\nimport { singular } from 'pluralize';\nimport { ChartConfiguration, ChartData, ChartOptions } from 'chart.js';\n\ninterface Author {\n  ipNames: string[];\n  numPublications: number;\n  researcher: string;\n  year: string;\n}\n\ninterface DecadeStats {\n  label: string;\n  startYear: number;\n  endYear: number;\n  authors: Author[];\n}\n\ninterface GeneroCounts {\n  hombres: number;\n  mujeres: number;\n  desconocidos: number;\n}\n\ninterface GeneroData {\n  [anio: string]: GeneroCounts;\n}\n\n\n@Component({\n  selector: 'app-estadisticas',\n  templateUrl: './estadisticas.component.html',\n  styleUrls: ['./estadisticas.component.scss'],\n  template: `\n    <div>\n      <angular-tag-cloud\n        [data]=\"data\"\n        [width]=\"options.width\"\n        [height]=\"options.height\"\n        [overflow]=\"options.overflow\">\n      </angular-tag-cloud>\n    </div>\n  `\n})\nexport class EstadisticasComponent implements OnInit, AfterViewInit {\n  @ViewChild('chartCanvas') chartCanvas!: ElementRef;\n\n  titulosSeleccionados: any[] = [];\n  yearsSeleccionados: any[] = [];\n  conferenceOption: string = \"\";\n  venueName: string = \"\";\n  papers: any[] = [];\n  colaboraciones: any[] = [];\n  singleAuthor: any[] = [];\n  estadisticas: any[] = [];\n  lineChart!: Chart;\n  barChart!: Chart;\n  researchers: any[] = [];\n  papersWithAuthors: any[] = [];\n  autoresPorPapersTable: any[] = [];\n  papersPorAutoresTable: any[] = [];\n  decadeStats: any[] = [];\n  commonNames: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n  options: CloudOptions = {\n    // if width is between 0 and 1 it will be set to the width of the upper element multiplied by the value\n    width: 500,\n    // if height is between 0 and 1 it will be set to the height of the upper element multiplied by the value\n    height: 200,\n    overflow: false,\n    realignOnResize: false,\n    strict: false,\n    step: 2,\n  };\n  cloudData: CloudData[] = []\n\n  constructor(\n    private route: ActivatedRoute,\n    private apiService: ApiService,\n    private seleccionService: SeleccionService,\n    private http: HttpClient\n  ) {}\n\n  loadCommonNames() {\n    this.http.get('assets/common_names.txt', { responseType: 'text' }).subscribe(\n      (data: string) => {\n        this.commonNames = this.parseCommonNames(data);\n      },\n      (error: any) => {\n        console.error('Error al cargar los datos:', error);\n      }\n    );\n  }\n\n  parseCommonNames(data: string) {\n    const lineas = data.split('\\n');\n    const diccionario: { [key: string]: { frec_paises: { [key: string]: number }, genero: string } } = {};\n    let nombreActual = '';\n    let datosActuales: { frec_paises: { [key: string]: number }, genero: string } = {\n      frec_paises: {},\n      genero: ''\n    };\n  \n    for (const linea of lineas) {\n      if (linea.startsWith('nombre:')) {\n        nombreActual = linea.split(':')[1].trim();\n        datosActuales = { frec_paises: {}, genero: '' };\n      } else if (linea.startsWith('frec_paises:')) {\n        const frec_paisesStr = linea.substring(linea.indexOf('{'), linea.lastIndexOf('}') + 1);\n        const frec_paises = JSON.parse(frec_paisesStr);\n        datosActuales.frec_paises = frec_paises;\n      } else if (linea.startsWith('genero:')) {\n        datosActuales.genero = linea.split(':')[1].trim();\n      } else if (linea.trim() === '') {\n        diccionario[nombreActual] = datosActuales;\n      }\n    }\n    return diccionario;\n  }\n\n  ngOnInit() {\n    this.loadCommonNames();\n    //LLamada a la funcion principal para la ejecucion de todo\n    this.main();\n  }\n\n  ngAfterViewInit() {\n    // Este método se ejecutará después de que Angular haya inicializado la vista\n    // Perfe para realizar cualquier manipulación adicional del DOM relacionada con el gráfico\n    // como ajustes de estilo, cambios dinámicos en los datos, etc.\n  }\n\n  async esperarResearcherNoVacio() {\n    while (!this.researchers || this.researchers.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  // obtenerResearchers() {\n  //   this.apiService.obtenerResearchers(this.titulosSeleccionados).subscribe({\n  //     next: (response: any) => {\n  //       this.researchers = response;\n  //       this.statsResearchers();\n  //       this.generarGrafico3('lineChart1', 'Number of authors', this.estadisticas[0].anios, this.estadisticas[0].numResearchers);\n  //     },\n  //     error: (error: any) => {\n  //       console.error('Error al obtener los researchers:', error);\n  //     }\n  //   });\n  // }\n\n  // obtenerPapers() {\n  //   this.apiService.obtenerPapers(this.titulosSeleccionados, this.conferenceOption, this.venueName).subscribe({\n  //     next: (response: any) => {\n  //       this.papers = response;\n  //       this.statsPapers();\n  //       this.generarGrafico3('lineChart2', 'Number of papers', this.estadisticas[1].anios, this.estadisticas[1].numPapers);\n  //     },\n  //     error: (error: any) => {\n  //       console.error('Error al obtener los papers:', error);\n  //     }\n  //   });\n  // }\n\n\n  // obtenerColaboraciones() {\n  //   this.apiService.obtenerColaboraciones(this.titulosSeleccionados, this.conferenceOption, this.venueName).subscribe({\n  //     next: (response: any) => {\n  //       this.colaboraciones = response;\n  //       this.statsColaboraciones();\n  //       this.generarGrafico3('lineChart3', 'Density', this.estadisticas[3].anios, this.estadisticas[3].densidades);\n  //     },\n  //     error: (error: any) => {\n  //       console.error('Error al obtener las colaboraciones:', error);\n  //     }\n  //   });\n  // }\n\n  obtenerInstituciones(){\n    // que son las instituciones?\n  }\n\n  async esperarAuthorsWithPapersNoVacio(){\n    while (!this.papersWithAuthors || this.papersWithAuthors.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  async esperarSingleAuthorsNoVacio(){\n    while (!this.singleAuthor || this.singleAuthor.length === 0) {\n      await new Promise(resolve => setTimeout(resolve, 100)); \n    }\n  }\n\n  // obtenerSingleAuthorPapers() {\n  //     this.apiService.obtenerAuthorsPapers(this.titulosSeleccionados, this.conferenceOption, this.venueName)\n  //       .subscribe({\n  //         next: async (response: any) => {\n  //           this.singleAuthor = response;\n  //           this.statsSingleAuthor();\n  //           this.generarGraficoBarras('barChart1', 'Single Author Papers', this.estadisticas[4].anios, this.estadisticas[4].porcentajes);          \n  //         },\n  //         error: (error: any) => {\n  //           console.error('Error al obtener los Author Papers:', error);\n  //         }\n  //       });\n  // }\n\n  /**\n   * Función para obtener las distribuciones tanto de autores por papers como de papers por autores\n   */\n  obtenerDistribuciones(){\n    console.log(\"distribuciones antes o despues?\");\n    const labels: string[] = ['1', '2', '3', '4', '5 o más'];\n\n    // Este representa el número de autores que tiene cada paper\n    const autoresPorPaper: number[] = [1, 2, 3, 4].map((numAuthors) =>\n    this.papersWithAuthors.filter((paper) => paper.numAuthors === numAuthors).length\n    );\n    autoresPorPaper[4] = this.papersWithAuthors.filter((paper) => paper.numAuthors >= 5).length;\n    let totalPapers = this.papers.reduce((total, paper) => total + paper.numPapers, 0);\n\n    // Ese representa el número de papers publicados que tiene cada autor\n    const papersPorAutor: number[] = [1, 2, 3, 4].map((numPubs) =>\n    this.singleAuthor.filter((paper) => paper.numPublications === numPubs).length\n    );\n    papersPorAutor[4] = this.singleAuthor.filter((paper) => paper.numPublications >= 5).length\n    const totalAutores = this.singleAuthor.length;\n\n    // Creamos las dos tablas que se vinculan con los ids del html\n    const autoresTabla = document.querySelector('#autoresTabla tbody');\n    const papersTabla = document.querySelector('#papersTabla tbody');\n    \n    if (autoresTabla !== null) {\n      autoresPorPaper.forEach((cantidad, index) => {\n        const row = document.createElement('tr');\n        const porcentaje = (cantidad / totalPapers * 100).toFixed(2);\n        const valor = cantidad.toString() + \"(\" + porcentaje + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${valor}</td>`;\n        autoresTabla.appendChild(row);\n      });\n    }\n\n    if (papersTabla !== null) {\n      papersPorAutor.forEach((cantidad, index) => {\n        const row = document.createElement('tr');\n        const porcentaje = (cantidad / totalAutores * 100).toFixed(2);\n        const valor = cantidad.toString() + \"(\" + porcentaje + \")\";\n        row.innerHTML = `<td>${labels[index]}</td><td>${valor}</td>`;\n        papersTabla.appendChild(row);\n      });\n    }\n  }\n\n  obtenerDatosDemograficos(){\n    console.log(\"demograficos antes o despues?\");\n      const datasets = this.researchers.map(researcher => {\n        let nombre = researcher.researcher.properties.name.split(' ')[0];\n        if(nombre.includes(\"-\")){\n          nombre = nombre.split('-')[0];\n        }\n        const anios = Array.isArray(researcher.years) ? researcher.years : [researcher.years];\n      \n        const datasetPorAnio = anios.map((year: any) => {\n          const info = this.commonNames[nombre];\n          const genero = info ? info.genero : 'Desconocido';\n          const frecuencias = info ? info.frec_paises : {};\n      \n          return {\n            year,\n            nombre,\n            genero,\n            frecuencias\n          };\n        });\n        return datasetPorAnio;\n      }).flat(); \n\n      console.log(\"datasets en demogr\");\n      console.log(datasets);\n\n      this.statsGenero(datasets);\n      this.statsGeografia(datasets);\n  }\n\n  generarNGrams(titles: string[], n: number): string[] {\n    const ngrams: string[] = [];\n    titles.forEach((title) => {\n      const words = title.toLowerCase().split(\" \");\n      for (let i = 0; i < words.length - n + 1; i++) {\n        ngrams.push(words.slice(i, i + n).join(\" \"));\n      }\n    });\n    return ngrams;\n  }\n  \n  countFrequencies(ngrams: string[]): Map<string, number> {\n    const frequencies = new Map<string, number>();\n    ngrams.forEach((ngram) => {\n      const count = frequencies.get(ngram) || 0;\n      frequencies.set(ngram, count + 1);\n    });\n    return frequencies;\n  }\n\n  limpiarTitulo(titulo: string, stopwords: string[]) {\n    // Separar el título en palabras\n    const palabras = titulo.toLowerCase().split(\" \").map(palabra => palabra.replace(/[^\\w\\s]/g, \"\"));\n\n    // Eliminamos repeticiones de letras y plurales para hacer mejor la frecuencia\n    const palabrasSinRepetir = palabras.map(palabra => palabra.replace(/(.)\\1+/g, \"$1\"));\n    const palabrasSingulares = palabrasSinRepetir.map(palabra => singular(palabra));\n    \n    // Filtrar las palabras para eliminar las stopwords\n    const palabrasFiltradas = palabrasSingulares.filter(palabra => !stopwords.includes(palabra));\n  \n    // Unir las palabras filtradas en un nuevo título\n    const nuevoTitulo = palabrasFiltradas.join(' ');\n  \n    return nuevoTitulo;\n  }\n\n  getTopN(frequencies: Map<string, number>, n: number): [string, number][] {\n    const sortedFrequencies = [...frequencies.entries()].sort((a, b) => b[1] - a[1]);\n    return sortedFrequencies.slice(0, n);\n  }\n\n  obtenerTopicAnalisis(){\n\n      // Requerimos natural para tokenizar y eliminar las stopwords, y calcular frecuencias\n      const stopwords = ['i', 'me', 'my', 'myself', 'we', 'our', 'ours', 'ourselves', 'you', 'your', 'yours', 'yourself', 'yourselves', 'he', 'him', 'his', 'himself', 'she', 'her', 'hers', 'herself', 'it', 'its', 'itself', 'they', 'them', 'their', 'theirs', 'themselves', 'what', 'which', 'who', 'whom', 'this', 'that', 'these', 'those', 'am', 'is', 'are', 'was', 'were', 'be', 'been', 'being', 'have', 'has', 'had', 'having', 'do', 'does', 'did', 'doing', 'a', 'an', 'the', 'and', 'but', 'if', 'or', 'because', 'as', 'until', 'while', 'of', 'at', 'by', 'for', 'with', 'about', 'against', 'between', 'into', 'through', 'during', 'before', 'after', 'above', 'below', 'to', 'from', 'up', 'down', 'in', 'out', 'on', 'off', 'over', 'under', 'again', 'further', 'then', 'once', 'here', 'there', 'when', 'where', 'why', 'how', 'all', 'any', 'both', 'each', 'few', 'more', 'most', 'other', 'some', 'such', 'no', 'nor', 'not', 'only', 'own', 'same', 'so', 'than', 'too', 'very', 's', 't', 'can', 'will', 'just', 'don', 'should', 'now', '.', ','];\n\n      const titulosLimpios = this.papersWithAuthors.map(paper => {\n        const ipName = this.limpiarTitulo(paper.ipName, stopwords);\n        const year = parseInt(paper.year);\n        return { ipName, year };\n      });\n\n      const bigrams = this.generarNGrams(titulosLimpios.map((paper) => paper.ipName), 2);\n      const trigrams = this.generarNGrams(titulosLimpios.map((paper) => paper.ipName), 3);\n\n      const bigramFrequencies = this.countFrequencies(bigrams);\n      const trigramFrequencies = this.countFrequencies(trigrams);\n\n      const top20Bigrams = this.getTopN(bigramFrequencies, 20);\n      const top20Trigrams = this.getTopN(trigramFrequencies, 20);\n\n    \n      const top20BigramsWithYears = top20Bigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: titulosLimpios.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n    \n      const top20TrigramsWithYears = top20Trigrams.map(([ngram, count]) => ({\n        ngram,\n        count,\n        years: titulosLimpios.filter((paper) => paper.ipName.includes(ngram)).map((paper) => paper.year),\n      }));\n\n      const table1 = document.querySelector('#tablaBigramas tbody');\n      const table2 = document.querySelector('#tablaTrigramas tbody');\n    \n      if (table1 instanceof HTMLElement && table2 instanceof HTMLElement) {\n        top20BigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table1.appendChild(row);\n        });\n      \n        top20TrigramsWithYears.forEach(({ ngram, count, years }) => {\n          const minYear = Math.min(...years);\n          const maxYear = Math.max(...years);\n      \n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${ngram}</td><td>${count}</td><td>${minYear}</td><td>${maxYear}</td>`;\n      \n          table2.appendChild(row);\n        });\n      }\n\n      const combinedData = [...top20BigramsWithYears, ...top20TrigramsWithYears];\n      \n      combinedData.sort((a, b) => b.count - a.count);\n\n      const maxFrecuencia = combinedData[0].count;\n      const minWeight = 0;\n      const maxWeight = 20;\n\n\n      const wordCloudData = combinedData.map((item, index) => ({\n        text: item.ngram,\n        weight: this.calcularWeight(item.count, maxFrecuencia, minWeight, maxWeight),\n        color: this.randomColor()\n      }));\n\n      console.log(\"wordcloud data\");\n      console.log(wordCloudData);\n\n      this.cloudData = wordCloudData;\n     \n  }\n\n  calcularWeight(frecuencia: number, maxFrecuencia: number, minWeight: number, maxWeight: number): number {\n    const peso = frecuencia / maxFrecuencia;\n    const pesoNormalizado = peso * (maxWeight - minWeight) + minWeight;\n    return Math.round(pesoNormalizado);\n  }\n\n  /**\n   * ############################################\n   */\n\n  statsResearchers() {\n    const numResearchers = this.researchers.length;\n    const anios = this.titulosSeleccionados.map(titulo => titulo.properties.name);\n    this.yearsSeleccionados = anios;\n\n    const numResearchersPorAnio = anios.map(anio =>\n      this.researchers.filter(researcher => researcher.years.includes(anio)).length\n    );\n    console.log(\"this.reserrchers\");\n    console.log(this.researchers);\n    this.estadisticas[0] = {\n      anios: anios,\n      numResearchers: numResearchersPorAnio\n    };\n  }\n\n  statsPapers() {\n    const anios = this.papers.map(paper => paper.year); // Extraer los años de this.numPapers\n    const numPapers = this.papers.map(paper => paper.numPapers); \n    \n    console.log(\"this.papers en stats papers\");\n    console.log(this.papers);\n\n    this.estadisticas[1] = {\n      anios: anios,\n      numPapers: numPapers\n    };\n  }  \n  \n  statsInstitutions() {\n    const anios = this.papers.map(paper => paper.year); \n    // Extraer los años de this.numPapers\n    // const numPapers = this.papers.map(paper => paper.numPapers); \n\n    this.estadisticas[2] = {\n      anios: anios,\n      numPapers: anios\n    };\n  }\n\n  statsColaboraciones(){    \n    const colabsXtotal = this.papers.map(paper => {\n      const colab = this.colaboraciones.find(c => c.year === paper.year);\n      return {\n        year: paper.year,\n        numColabs: colab ? colab.numColabs : 0,\n        numPapers: paper.numPapers\n      };\n    });\n\n    const densidad = colabsXtotal.map(dato => {\n      const { year, numColabs, numPapers } = dato;\n      const densidad = numColabs / numPapers;\n      return { densidad, year };\n    });\n\n    this.estadisticas[3] = {\n      anios: densidad.map(dato => dato.year),\n      densidades: densidad.map(dato => dato.densidad)\n    };\n  }\n\n  statsSingleAuthor() {\n    \n    const papersWithAuthors: { ipName: string, numAuthors: number, authorNames: string[], year: string }[] = [];\n\n    // Mapea todos los researchers, para crear papersWithAuthors, que es un array que tiene el nombre de una publicacion\n    // y los autores que han contribuido él.\n    this.singleAuthor.forEach((author: { ipNames: string[], researcher: string, year: string }) => {\n      author.ipNames.forEach(ipName => {\n        const paperIndex = papersWithAuthors.findIndex(paper => paper.ipName === ipName);\n        if (paperIndex !== -1) {\n          papersWithAuthors[paperIndex].numAuthors++;\n          papersWithAuthors[paperIndex].authorNames.push(author.researcher);\n        } else {\n            papersWithAuthors.push({\n              ipName,\n              numAuthors: 1,\n              authorNames: [author.researcher],\n              year: author.year\n            });\n          }\n        });\n    });\n\n    this.papersWithAuthors = papersWithAuthors;\n\n    // Conseguimos todas las entradas cuyo autor sea uno, para las estadisticas\n    const papersWithOneAuthor = papersWithAuthors.filter(paper => paper.numAuthors === 1);\n\n    const porcentajeByYear = this.papers.map(paper => {\n      const year = paper.year;\n      const numPapers = paper.numPapers;\n      const numPapersWithSingleAuthor = papersWithOneAuthor.filter(paper => paper.year === year).length;\n      const porcentaje = (numPapersWithSingleAuthor / numPapers) * 100;\n    \n      return { year, porcentaje };\n    });\n    \n    this.estadisticas[4] = {\n      anios: porcentajeByYear.map(dato => dato.year),\n      porcentajes: porcentajeByYear.map(dato => dato.porcentaje)\n    };\n  }  \n\n\n \n\n  statsGeografia(datasets: any[]){\n    const mapeoFecha: {[fecha: string]: {[pais: string]: number}} = {};\n    const datasetFiltrado = datasets.filter((objeto: any) => Object.keys(objeto.frecuencias).length > 0);\n    \n    // Obtener todas las fechas únicas\n    const fechasUnicas = [...new Set(datasetFiltrado.map(dato => dato.year))];\n\n    // Iterar sobre las fechas\n    for (const fecha of fechasUnicas) {\n      const objetosFecha = datasetFiltrado.filter(dato => dato.year === fecha);\n\n      // Crear objeto de mapeo para la fecha actual\n      mapeoFecha[fecha] = {};\n  \n    for (const objeto of objetosFecha) {\n      let paisMasAlto = '';\n      let frecuenciaMasAlta = -1;\n\n      for (const pais in objeto.frecuencias) {\n          if (objeto.frecuencias[pais] > frecuenciaMasAlta) {\n            paisMasAlto = pais;\n            frecuenciaMasAlta = objeto.frecuencias[pais];\n          }\n        }\n        if(!(paisMasAlto in mapeoFecha[fecha])){\n          mapeoFecha[fecha][paisMasAlto] = 1;\n        }else{\n          mapeoFecha[fecha][paisMasAlto] = mapeoFecha[fecha][paisMasAlto] + 1;\n        }\n      }\n    }\n\n    console.log(\"mapeoFecha antes\");\n    console.log(mapeoFecha);\n\n    // Normalizamos valores según su total\n    for (const year in mapeoFecha) {\n      let total = 0;\n      for (const country in mapeoFecha[year]) {\n        total += mapeoFecha[year][country];\n      }\n      for (const country in mapeoFecha[year]) {\n        mapeoFecha[year][country] = Number((mapeoFecha[year][country]/total).toFixed(4));\n      }\n    }\n\n    const years = Object.keys(mapeoFecha); // Obtener las llaves de los años\n    const countries = Object.keys(mapeoFecha[years[0]]); // Obtener los nombres de los países\n    const datasetsLabels = countries; // Etiquetas de los conjuntos de datos serán los nombres de los países\n\n    // Crear la matriz de datos para los países\n    const datasetsData = countries.map((country) =>\n      years.map((year) => mapeoFecha[year][country])\n    );\n\n    console.log(\"datasetsData\");\n    console.log(datasetsData);\n\n    this.generarGraficoMultiple('lineChart5', years, datasetsLabels, datasetsData);\n    \n  }\n\n  filterAuthorsByDecade(authors: Author[], startYear: number, endYear: number): Author[] {\n    const filteredAuthors: Author[] = [];\n  \n    // Recorrer los autores originales\n    authors.forEach((author) => {\n      // Verificar si el autor está dentro de la década especificada\n      const authorYears = author.year.split(\",\").map(Number).filter((year) => year >= startYear && year <= endYear);\n\n      if (authorYears.length > 0) {\n        // Buscar si ya existe un autor fusionado con el mismo nombre y década\n        const existingAuthor = filteredAuthors.find((filteredAuthor) => filteredAuthor.researcher === author.researcher);\n        if (existingAuthor) {\n          // Fusionar las entradas del autor existente con las del autor actual\n          existingAuthor.numPublications += author.numPublications;\n          existingAuthor.year += `, ${author.year}`;\n        } else {\n          // Agregar el autor actual a la lista de autores filtrados\n          filteredAuthors.push({\n            ipNames: author.ipNames,\n            numPublications: author.numPublications,\n            researcher: author.researcher,\n            year: author.year\n          });\n        }\n      }\n    });\n\n    return filteredAuthors;\n  }\n\n  statsProlificAuthors(selectedYears: number[]): DecadeStats[] {\n    // Obtener el rango de años seleccionados por el usuario\n    const startYear = Math.min(...selectedYears);\n    const endYear = Math.max(...selectedYears);\n  \n    // Calcular las décadas correspondientes al rango de años seleccionados\n    const startDecade = Math.floor(startYear / 10) * 10;\n    const endDecade = Math.floor(endYear / 10) * 10;\n  \n    // Generar las décadas dentro del rango de años seleccionados\n    const decades: DecadeStats[] = [];\n    for (let decade = startDecade; decade <= endDecade; decade += 10) {\n      const decadeLabel = `${decade}s`;\n      const decadeStartYear = decade;\n      const decadeEndYear = decade + 9;\n      const decadeAuthors = this.filterAuthorsByDecade(this.singleAuthor, decadeStartYear, decadeEndYear);\n  \n      decades.push({\n        label: decadeLabel,\n        startYear: decadeStartYear,\n        endYear: decadeEndYear,\n        authors: decadeAuthors\n      });\n    }  \n    // Ordenar los autores por número de publicaciones en cada década\n    decades.forEach((decade) => {\n      decade.authors.sort((a, b) => b.numPublications - a.numPublications);\n      if (decade.authors.length > 20){\n        decade.authors = decade.authors.slice(0, 20); \n      } \n    });\n  \n    // Devolver las décadas con los autores ordenados\n    return decades;\n  }\n\n  generarTablasDecadas(decadeStats: any[]){\n    const tablas: { [key: string]: HTMLElement | null } = {\n      '1990s': document.querySelector('#tabla90 tbody'),\n      '2000s': document.querySelector('#tabla00 tbody'),\n      '2010s': document.querySelector('#tabla10 tbody'),\n      '2020s': document.querySelector('#tabla20 tbody'),\n    };\n  \n    console.log(\"decadestats\");\n    console.log(decadeStats);\n    for (const decada of decadeStats) {\n      const tabla = tablas[decada.label];\n  \n      if (tabla instanceof HTMLElement) {\n        decada.authors.slice(0, 20).forEach((autor: { researcher: any; numPublications: any; year: any; }) => {\n          const row = document.createElement('tr');\n          row.innerHTML = `<td>${autor.researcher}</td><td>${autor.numPublications}</td>`;\n  \n          tabla.appendChild(row);\n        });\n      }\n    }\n  }\n\n  generarGrafico3(idChart: string, label: string, labels: any[], data: any[]) {\n    this.lineChart = new Chart(idChart, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            fill: false,\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true\n          }\n        },\n      }\n    });\n  }\n\n  statsGenero(datasets: any[]){\n    const datasetsPorGenero: { [genero: string]: { year: string; count: number }[] } = {};\n\n      datasets.forEach((data: { year: any; genero: any; }) => {\n        const { year, genero } = data;\n        \n        let genderKey = '';\n        \n        if (genero == 'M' || genero == '?M' || genero == '1M' || genero == '?') {\n          genderKey = 'Hombres';\n        } else if (genero == 'F' || genero == '?F' || genero == '1F') {\n          genderKey = 'Mujeres';\n        } else{\n          genderKey = 'Desconocido';\n        }\n        \n        if (!datasetsPorGenero[genderKey]) {\n          datasetsPorGenero[genderKey] = [];\n        }\n        \n        const existingData = datasetsPorGenero[genderKey].find(d => d.year === year);\n        \n        if (existingData) {\n          existingData.count++;\n        } else {\n          datasetsPorGenero[genderKey].push({\n            year,\n            count: 1\n          });\n        }\n      });\n\n      // Crear un objeto para almacenar los datos ordenados\n      const datosOrdenados: { [anio: string]: { hombres: number; mujeres: number; total: number} } = {};\n      const hombres = datasetsPorGenero['Hombres'];\n      const mujeres = datasetsPorGenero['Mujeres'];\n\n      // Ordenar los datos de hombres\n      hombres.forEach(dato => {\n        const anio = dato.year;\n        const conteo = dato.count;\n\n        datosOrdenados[anio] = { hombres: conteo, mujeres: 0, total: conteo };\n      });\n\n      // Ordenar los datos de mujeres y combinarlos con los datos de hombres\n      mujeres.forEach(dato => {\n        const anio = dato.year;\n        const conteo = dato.count;\n\n        if (datosOrdenados[anio]) {\n          datosOrdenados[anio].mujeres = conteo;\n          datosOrdenados[anio].total += conteo;\n        } else {\n          datosOrdenados[anio] = { mujeres: conteo, hombres: 0, total: conteo };\n        }\n      });\n\n      console.log(\"datos ordenados\");\n      console.log(datosOrdenados);\n\n      // Obtener los años ordenados\n      const aniosOrdenados = Object.keys(datosOrdenados).sort();\n\n\n      const conteosHombres = aniosOrdenados.map(anio => Number((datosOrdenados[anio].hombres/(datosOrdenados[anio].total)).toFixed(4)));\n      const conteosMujeres = aniosOrdenados.map(anio => Number((datosOrdenados[anio].mujeres/(datosOrdenados[anio].total)).toFixed(4)));\n\n      console.log(\"conteos hombres\");\n      console.log(conteosHombres);\n\n      \n      this.generarGraficoCircular('lineChart4', aniosOrdenados, ['Hombres', 'Mujeres'], [conteosHombres, conteosMujeres]);\n      this.generarGraficoMultiple('lineChart8', aniosOrdenados, ['Hombres', 'Mujeres'], [conteosHombres, conteosMujeres]);\n  }\n\n  generarGraficoMultiple(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: 'rgba(0, 0, 0, 0.1)',\n      borderColor: this.getRandomColor(index),\n    }));\n  \n    const chartConfig: ChartConfiguration<'line'> = {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            type: 'linear',\n            display: true,\n          },\n        },\n      },\n    };\n  \n    // Crear el gráfico\n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n  }\n\n  generarGraficoCircular(chartId: string, labels: string[], datasetsLabels: string[], datasetsData: number[][]) {\n    const colores = ['#FF5733', '#3399FF'];\n\n    const datasets = datasetsLabels.map((label, index) => ({\n      label: label,\n      data: datasetsData[index],\n      backgroundColor: colores[index],  // Cambia la opacidad a un valor más alto\n      borderColor: 'black',\n    }));\n  \n    const chartConfig: ChartConfiguration<'pie'> = {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: datasets,\n      },\n      options: {\n        plugins: {\n          legend: {\n            display: false,\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n      },\n    };\n    const ctx = document.getElementById(chartId) as HTMLCanvasElement;\n    new Chart(ctx, chartConfig);\n\n  \n\n}\n\n  generarGraficoBarras(idChart: string, label: string, labels: any[], data: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18, \n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }  \n\n  randomColor(){\n    const r = Math.floor(Math.random() * 256);\n    const g = Math.floor(Math.random() * 256);\n    const b = Math.floor(Math.random() * 256);\n    return `rgba(${r}, ${g}, ${b}, 1)`;\n  }\n\n  getRandomColor(index: number) {\n    let colors: Record<number, string> = {\n      0: \"rgba(75, 192, 192, 1)\",\n      1: \"rgba(192, 75, 75, 1)\",\n      2: \"rgba(98, 192, 75, 1)\", \n      3: \"rbga(192, 141, 75, 1)\",\n      4: \"rgba(226, 232, 107, 1)\",\n      5: \"rgba(176, 75, 192, 1)\"\n    };\n\n    return colors[index];\n  }\n  async main(){\n    try {\n      this.titulosSeleccionados = this.seleccionService.obtenerTitulosSeleccionados();\n      console.log((\"TItulosselecc\"));\n      console.log(this.titulosSeleccionados);\n      this.conferenceOption = this.seleccionService.obtenerOpcionConferencia();\n      this.venueName = this.seleccionService.obtenerNombreVenue();\n\n      this.obtenerPapers();\n      this.obtenerColaboraciones();\n      this.obtenerSingleAuthorPapers();\n      this.obtenerResearchers();\n\n      if(this.researchers.length == 0){\n        await this.esperarResearcherNoVacio();\n        this.obtenerDatosDemograficos();\n      } else{\n        this.obtenerDatosDemograficos();\n      }      \n\n      if(this.papersWithAuthors.length == 0){\n        await this.esperarAuthorsWithPapersNoVacio();\n        this.obtenerTopicAnalisis();\n        this.obtenerDistribuciones();\n      }else{\n        this.obtenerTopicAnalisis();\n        this.obtenerDistribuciones();\n      }\n      \n      if(this.singleAuthor.length == 0){\n        await this.esperarSingleAuthorsNoVacio();\n        this.decadeStats = this.statsProlificAuthors(this.yearsSeleccionados);\n        this.generarTablasDecadas(this.decadeStats)\n      }else{\n        this.decadeStats = this.statsProlificAuthors(this.yearsSeleccionados);\n        this.generarTablasDecadas(this.decadeStats)\n      }\n\n  } catch (error) {\n    console.error('Error al obtener los datos:', error);\n  }\n  }\n\n}","<div>\n  <h2>Statistics</h2>\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Authors by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart1\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Papers by year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart2\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n\n  <div class=\"flex-container\" >\n\n    <div class=\"flex-item\">\n      <h3>Density evolution over the years</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart3\"></canvas>\n      </div>\n    </div>\n\n    <div class=\"flex-item\">\n      <h3>Percentage of single-author papers per year</h3>\n\n      <div class=\"canvas-container\">\n        <canvas id=\"barChart1\"></canvas>\n      </div>\n    </div>\n   \n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"especial\">Distributions of authors per paper and of papers per author</h3>\n  <div class=\"container-table\">\n    <div class=\"tabla\">\n      <table id=\"autoresTabla\">\n        <thead>\n          <tr>\n            <th>Author</th>\n            <th>Papers (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"tabla\">\n      <table id=\"papersTabla\">\n        <thead>\n          <tr>\n            <th>Papers</th>\n            <th>Author (%)</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"especial\"> Percentage of Publications Men-Women / Year</h3>\n  <div class=\"flex-container2\">\n\n    <div class=\"graph-bars\">\n\n        <div class=\"canvas-container1\">\n          <div class=\"legend\">\n            <div class=\"hombres\"></div> Men\n            <div class=\"mujeres\"></div> Women\n          </div>\n          <canvas class=\"circular\" id=\"lineChart4\"></canvas>\n        </div>\n        \n    </div>\n\n    <div class=\"graph-bars2\">\n      <div class=\"canvas-container2\">\n        <canvas id=\"lineChart8\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3> Percentage of publications by Country / Year</h3>\n  <div class=\"flex-container\">\n    <div class=\"flex-item\"> \n      <div class=\"canvas-container\">\n        <canvas id=\"lineChart5\"></canvas>\n      </div>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"especial\">Most frequent Bigrams and Trigrams</h3>\n  <div class=\"container-table\">\n    <div class=\"tabla\">\n        <table id=\"tablaBigramas\">\n          <thead>\n            <tr>\n              <th>Bigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"tabla\">\n        <table id=\"tablaTrigramas\">\n          <thead>\n            <tr>\n              <th>Trigrams</th>\n              <th>Appearances</th>\n              <th>First <br> año</th>\n              <th>Recent <br> año</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  <hr class=\"line\">\n  <h3 class=\"especial\">Frequent terms from all titles of papers</h3>\n  <div class=\"conceptual\">\n    <angular-tag-cloud [config]=\"options\" [data]=\"cloudData\"></angular-tag-cloud>\n  </div>\n\n  <hr class=\"line\">\n\n  <h3 class=\"especial\">Most prolific authors according to their number of publications accumulated by decade</h3>\n  <div class=\"container-table2\">\n    <div class=\"tabla\">\n        <table id=\"tabla90\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (a) 1989-1999\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"tabla\">\n        <table id=\"tabla00\">\n          <thead>\n            <tr>\n              <th colspan=\"2\">\n                (b) 1999-2009\n              </th>\n            </tr>\n            <hr>\n            <tr>\n              <th>Author</th>\n              <th>#</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n    <div class=\"linev\"></div>\n    <div class=\"tabla\">\n      <table id=\"tabla10\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2009-2019\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n  </div>\n  <div class=\"linev\"></div>\n  <div class=\"tabla\">\n      <table id=\"tabla20\" class=\"centered-table\">\n        <thead>\n          <tr>\n            <th colspan=\"2\">\n              (a) 2019-2024\n            </th>\n          </tr>\n          <hr>\n          <tr>\n            <th>Author</th>\n            <th>#</th>\n          </tr>\n        </thead>\n        <tbody></tbody>\n      </table>\n    </div>\n  </div>\n\n  <hr class=\"line3\">\n\n  <h3>Authors with their first and most recent year of publication</h3>\n  <div class=\"container-table2\">\n    <div class=\"tabla\">\n        <table id=\"nn\">\n          <thead>\n            <tr>\n              <th>Author</th>\n              <th>Degree</th>\n              <th>First <br> year</th>\n              <th>Recent <br> year</th>\n              <th>h-index<br> (All time)</th>\n              <th>h-index<br> (Since 2015)</th>\n            </tr>\n          </thead>\n          <tbody></tbody>\n        </table>\n    </div>\n  </div>\n\n  \n\n  \n  \n</div>\n\n\n\n\n\n \n\n\n"],"mappings":";AAIA;AACA,SAASA,KAAK,EAAEC,aAAa,QAAQ,UAAU;AAK/C,SAASC,QAAQ,QAAQ,WAAW;;;;;;;;AAJpCF,KAAK,CAACG,QAAQ,CAAC,GAAGF,aAAa,CAAC;AA+ChC,OAAM,MAAOG,qBAAqB;EA+BhCC,YACUC,KAAqB,EACrBC,UAAsB,EACtBC,gBAAkC,EAClCC,IAAgB;IAHhB,KAAAH,KAAK,GAALA,KAAK;IACL,KAAAC,UAAU,GAAVA,UAAU;IACV,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAChB,KAAAC,IAAI,GAAJA,IAAI;IAhCd,KAAAC,oBAAoB,GAAU,EAAE;IAChC,KAAAC,kBAAkB,GAAU,EAAE;IAC9B,KAAAC,gBAAgB,GAAW,EAAE;IAC7B,KAAAC,SAAS,GAAW,EAAE;IACtB,KAAAC,MAAM,GAAU,EAAE;IAClB,KAAAC,cAAc,GAAU,EAAE;IAC1B,KAAAC,YAAY,GAAU,EAAE;IACxB,KAAAC,YAAY,GAAU,EAAE;IAGxB,KAAAC,WAAW,GAAU,EAAE;IACvB,KAAAC,iBAAiB,GAAU,EAAE;IAC7B,KAAAC,qBAAqB,GAAU,EAAE;IACjC,KAAAC,qBAAqB,GAAU,EAAE;IACjC,KAAAC,WAAW,GAAU,EAAE;IACvB,KAAAC,WAAW,GAAkF,EAAE;IAC/F,KAAAC,OAAO,GAAiB;MACtB;MACAC,KAAK,EAAE,GAAG;MACV;MACAC,MAAM,EAAE,GAAG;MACXC,QAAQ,EAAE,KAAK;MACfC,eAAe,EAAE,KAAK;MACtBC,MAAM,EAAE,KAAK;MACbC,IAAI,EAAE;KACP;IACD,KAAAC,SAAS,GAAgB,EAAE;EAOxB;EAEHC,eAAeA,CAAA;IACb,IAAI,CAACvB,IAAI,CAACwB,GAAG,CAAC,yBAAyB,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC,CAACC,SAAS,CACzEC,IAAY,IAAI;MACf,IAAI,CAACb,WAAW,GAAG,IAAI,CAACc,gBAAgB,CAACD,IAAI,CAAC;IAChD,CAAC,EACAE,KAAU,IAAI;MACbC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD,CAAC,CACF;EACH;EAEAD,gBAAgBA,CAACD,IAAY;IAC3B,MAAMI,MAAM,GAAGJ,IAAI,CAACK,KAAK,CAAC,IAAI,CAAC;IAC/B,MAAMC,WAAW,GAAkF,EAAE;IACrG,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAIC,aAAa,GAA+D;MAC9EC,WAAW,EAAE,EAAE;MACfC,MAAM,EAAE;KACT;IAED,KAAK,MAAMC,KAAK,IAAIP,MAAM,EAAE;MAC1B,IAAIO,KAAK,CAACC,UAAU,CAAC,SAAS,CAAC,EAAE;QAC/BL,YAAY,GAAGI,KAAK,CAACN,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACQ,IAAI,EAAE;QACzCL,aAAa,GAAG;UAAEC,WAAW,EAAE,EAAE;UAAEC,MAAM,EAAE;QAAE,CAAE;OAChD,MAAM,IAAIC,KAAK,CAACC,UAAU,CAAC,cAAc,CAAC,EAAE;QAC3C,MAAME,cAAc,GAAGH,KAAK,CAACI,SAAS,CAACJ,KAAK,CAACK,OAAO,CAAC,GAAG,CAAC,EAAEL,KAAK,CAACM,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACtF,MAAMR,WAAW,GAAGS,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;QAC9CN,aAAa,CAACC,WAAW,GAAGA,WAAW;OACxC,MAAM,IAAIE,KAAK,CAACC,UAAU,CAAC,SAAS,CAAC,EAAE;QACtCJ,aAAa,CAACE,MAAM,GAAGC,KAAK,CAACN,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACQ,IAAI,EAAE;OAClD,MAAM,IAAIF,KAAK,CAACE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC9BP,WAAW,CAACC,YAAY,CAAC,GAAGC,aAAa;;;IAG7C,OAAOF,WAAW;EACpB;EAEAc,QAAQA,CAAA;IACN,IAAI,CAACxB,eAAe,EAAE;IACtB;IACA,IAAI,CAACyB,IAAI,EAAE;EACb;EAEAC,eAAeA,CAAA;IACb;IACA;IACA;EAAA;EAGIC,wBAAwBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC5B,OAAO,CAACD,KAAI,CAAC1C,WAAW,IAAI0C,KAAI,CAAC1C,WAAW,CAAC4C,MAAM,KAAK,CAAC,EAAE;QACzD,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;;IACvD;EACH;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEAE,oBAAoBA,CAAA;IAClB;EAAA;EAGIC,+BAA+BA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAP,iBAAA;MACnC,OAAO,CAACO,MAAI,CAACjD,iBAAiB,IAAIiD,MAAI,CAACjD,iBAAiB,CAAC2C,MAAM,KAAK,CAAC,EAAE;QACrE,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;;IACvD;EACH;EAEMK,2BAA2BA,CAAA;IAAA,IAAAC,MAAA;IAAA,OAAAT,iBAAA;MAC/B,OAAO,CAACS,MAAI,CAACtD,YAAY,IAAIsD,MAAI,CAACtD,YAAY,CAAC8C,MAAM,KAAK,CAAC,EAAE;QAC3D,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;;IACvD;EACH;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;;EAGAO,qBAAqBA,CAAA;IACnBhC,OAAO,CAACiC,GAAG,CAAC,iCAAiC,CAAC;IAC9C,MAAMC,MAAM,GAAa,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,SAAS,CAAC;IAExD;IACA,MAAMC,eAAe,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,UAAU,IAC9D,IAAI,CAACzD,iBAAiB,CAAC0D,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACF,UAAU,KAAKA,UAAU,CAAC,CAACd,MAAM,CAC/E;IACDY,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,CAACvD,iBAAiB,CAAC0D,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACF,UAAU,IAAI,CAAC,CAAC,CAACd,MAAM;IAC3F,IAAIiB,WAAW,GAAG,IAAI,CAACjE,MAAM,CAACkE,MAAM,CAAC,CAACC,KAAK,EAAEH,KAAK,KAAKG,KAAK,GAAGH,KAAK,CAACI,SAAS,EAAE,CAAC,CAAC;IAElF;IACA,MAAMC,cAAc,GAAa,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACR,GAAG,CAAES,OAAO,IAC1D,IAAI,CAACpE,YAAY,CAAC6D,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACO,eAAe,KAAKD,OAAO,CAAC,CAACtB,MAAM,CAC5E;IACDqB,cAAc,CAAC,CAAC,CAAC,GAAG,IAAI,CAACnE,YAAY,CAAC6D,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACO,eAAe,IAAI,CAAC,CAAC,CAACvB,MAAM;IAC1F,MAAMwB,YAAY,GAAG,IAAI,CAACtE,YAAY,CAAC8C,MAAM;IAE7C;IACA,MAAMyB,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,qBAAqB,CAAC;IAClE,MAAMC,WAAW,GAAGF,QAAQ,CAACC,aAAa,CAAC,oBAAoB,CAAC;IAEhE,IAAIF,YAAY,KAAK,IAAI,EAAE;MACzBb,eAAe,CAACiB,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAI;QAC1C,MAAMC,GAAG,GAAGN,QAAQ,CAACO,aAAa,CAAC,IAAI,CAAC;QACxC,MAAMC,UAAU,GAAG,CAACJ,QAAQ,GAAGb,WAAW,GAAG,GAAG,EAAEkB,OAAO,CAAC,CAAC,CAAC;QAC5D,MAAMC,KAAK,GAAGN,QAAQ,CAACO,QAAQ,EAAE,GAAG,GAAG,GAAGH,UAAU,GAAG,GAAG;QAC1DF,GAAG,CAACM,SAAS,GAAG,OAAO3B,MAAM,CAACoB,KAAK,CAAC,YAAYK,KAAK,OAAO;QAC5DX,YAAY,CAACc,WAAW,CAACP,GAAG,CAAC;MAC/B,CAAC,CAAC;;IAGJ,IAAIJ,WAAW,KAAK,IAAI,EAAE;MACxBP,cAAc,CAACQ,OAAO,CAAC,CAACC,QAAQ,EAAEC,KAAK,KAAI;QACzC,MAAMC,GAAG,GAAGN,QAAQ,CAACO,aAAa,CAAC,IAAI,CAAC;QACxC,MAAMC,UAAU,GAAG,CAACJ,QAAQ,GAAGN,YAAY,GAAG,GAAG,EAAEW,OAAO,CAAC,CAAC,CAAC;QAC7D,MAAMC,KAAK,GAAGN,QAAQ,CAACO,QAAQ,EAAE,GAAG,GAAG,GAAGH,UAAU,GAAG,GAAG;QAC1DF,GAAG,CAACM,SAAS,GAAG,OAAO3B,MAAM,CAACoB,KAAK,CAAC,YAAYK,KAAK,OAAO;QAC5DR,WAAW,CAACW,WAAW,CAACP,GAAG,CAAC;MAC9B,CAAC,CAAC;;EAEN;EAEAQ,wBAAwBA,CAAA;IACtB/D,OAAO,CAACiC,GAAG,CAAC,+BAA+B,CAAC;IAC1C,MAAM+B,QAAQ,GAAG,IAAI,CAACrF,WAAW,CAACyD,GAAG,CAAC6B,UAAU,IAAG;MACjD,IAAIC,MAAM,GAAGD,UAAU,CAACA,UAAU,CAACE,UAAU,CAACC,IAAI,CAAClE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChE,IAAGgE,MAAM,CAACG,QAAQ,CAAC,GAAG,CAAC,EAAC;QACtBH,MAAM,GAAGA,MAAM,CAAChE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAE/B,MAAMoE,KAAK,GAAGC,KAAK,CAACC,OAAO,CAACP,UAAU,CAACQ,KAAK,CAAC,GAAGR,UAAU,CAACQ,KAAK,GAAG,CAACR,UAAU,CAACQ,KAAK,CAAC;MAErF,MAAMC,cAAc,GAAGJ,KAAK,CAAClC,GAAG,CAAEuC,IAAS,IAAI;QAC7C,MAAMC,IAAI,GAAG,IAAI,CAAC5F,WAAW,CAACkF,MAAM,CAAC;QACrC,MAAM3D,MAAM,GAAGqE,IAAI,GAAGA,IAAI,CAACrE,MAAM,GAAG,aAAa;QACjD,MAAMsE,WAAW,GAAGD,IAAI,GAAGA,IAAI,CAACtE,WAAW,GAAG,EAAE;QAEhD,OAAO;UACLqE,IAAI;UACJT,MAAM;UACN3D,MAAM;UACNsE;SACD;MACH,CAAC,CAAC;MACF,OAAOH,cAAc;IACvB,CAAC,CAAC,CAACI,IAAI,EAAE;IAET9E,OAAO,CAACiC,GAAG,CAAC,oBAAoB,CAAC;IACjCjC,OAAO,CAACiC,GAAG,CAAC+B,QAAQ,CAAC;IAErB,IAAI,CAACe,WAAW,CAACf,QAAQ,CAAC;IAC1B,IAAI,CAACgB,cAAc,CAAChB,QAAQ,CAAC;EACjC;EAEAiB,aAAaA,CAACC,MAAgB,EAAEC,CAAS;IACvC,MAAMC,MAAM,GAAa,EAAE;IAC3BF,MAAM,CAAC9B,OAAO,CAAEiC,KAAK,IAAI;MACvB,MAAMC,KAAK,GAAGD,KAAK,CAACE,WAAW,EAAE,CAACrF,KAAK,CAAC,GAAG,CAAC;MAC5C,KAAK,IAAIsF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAAC/D,MAAM,GAAG4D,CAAC,GAAG,CAAC,EAAEK,CAAC,EAAE,EAAE;QAC7CJ,MAAM,CAACK,IAAI,CAACH,KAAK,CAACI,KAAK,CAACF,CAAC,EAAEA,CAAC,GAAGL,CAAC,CAAC,CAACQ,IAAI,CAAC,GAAG,CAAC,CAAC;;IAEhD,CAAC,CAAC;IACF,OAAOP,MAAM;EACf;EAEAQ,gBAAgBA,CAACR,MAAgB;IAC/B,MAAMS,WAAW,GAAG,IAAIC,GAAG,EAAkB;IAC7CV,MAAM,CAAChC,OAAO,CAAE2C,KAAK,IAAI;MACvB,MAAMC,KAAK,GAAGH,WAAW,CAACnG,GAAG,CAACqG,KAAK,CAAC,IAAI,CAAC;MACzCF,WAAW,CAACI,GAAG,CAACF,KAAK,EAAEC,KAAK,GAAG,CAAC,CAAC;IACnC,CAAC,CAAC;IACF,OAAOH,WAAW;EACpB;EAEAK,aAAaA,CAACC,MAAc,EAAEC,SAAmB;IAC/C;IACA,MAAMC,QAAQ,GAAGF,MAAM,CAACZ,WAAW,EAAE,CAACrF,KAAK,CAAC,GAAG,CAAC,CAACkC,GAAG,CAACkE,OAAO,IAAIA,OAAO,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAEhG;IACA,MAAMC,kBAAkB,GAAGH,QAAQ,CAACjE,GAAG,CAACkE,OAAO,IAAIA,OAAO,CAACC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IACpF,MAAME,kBAAkB,GAAGD,kBAAkB,CAACpE,GAAG,CAACkE,OAAO,IAAI3I,QAAQ,CAAC2I,OAAO,CAAC,CAAC;IAE/E;IACA,MAAMI,iBAAiB,GAAGD,kBAAkB,CAACnE,MAAM,CAACgE,OAAO,IAAI,CAACF,SAAS,CAAC/B,QAAQ,CAACiC,OAAO,CAAC,CAAC;IAE5F;IACA,MAAMK,WAAW,GAAGD,iBAAiB,CAACf,IAAI,CAAC,GAAG,CAAC;IAE/C,OAAOgB,WAAW;EACpB;EAEAC,OAAOA,CAACf,WAAgC,EAAEV,CAAS;IACjD,MAAM0B,iBAAiB,GAAG,CAAC,GAAGhB,WAAW,CAACiB,OAAO,EAAE,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,OAAOH,iBAAiB,CAACnB,KAAK,CAAC,CAAC,EAAEP,CAAC,CAAC;EACtC;EAEA+B,oBAAoBA,CAAA;IAEhB;IACA,MAAMd,SAAS,GAAG,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,CAAC;IAEvgC,MAAMe,cAAc,GAAG,IAAI,CAACvI,iBAAiB,CAACwD,GAAG,CAACG,KAAK,IAAG;MACxD,MAAM6E,MAAM,GAAG,IAAI,CAAClB,aAAa,CAAC3D,KAAK,CAAC6E,MAAM,EAAEhB,SAAS,CAAC;MAC1D,MAAMzB,IAAI,GAAG0C,QAAQ,CAAC9E,KAAK,CAACoC,IAAI,CAAC;MACjC,OAAO;QAAEyC,MAAM;QAAEzC;MAAI,CAAE;IACzB,CAAC,CAAC;IAEF,MAAM2C,OAAO,GAAG,IAAI,CAACrC,aAAa,CAACkC,cAAc,CAAC/E,GAAG,CAAEG,KAAK,IAAKA,KAAK,CAAC6E,MAAM,CAAC,EAAE,CAAC,CAAC;IAClF,MAAMG,QAAQ,GAAG,IAAI,CAACtC,aAAa,CAACkC,cAAc,CAAC/E,GAAG,CAAEG,KAAK,IAAKA,KAAK,CAAC6E,MAAM,CAAC,EAAE,CAAC,CAAC;IAEnF,MAAMI,iBAAiB,GAAG,IAAI,CAAC5B,gBAAgB,CAAC0B,OAAO,CAAC;IACxD,MAAMG,kBAAkB,GAAG,IAAI,CAAC7B,gBAAgB,CAAC2B,QAAQ,CAAC;IAE1D,MAAMG,YAAY,GAAG,IAAI,CAACd,OAAO,CAACY,iBAAiB,EAAE,EAAE,CAAC;IACxD,MAAMG,aAAa,GAAG,IAAI,CAACf,OAAO,CAACa,kBAAkB,EAAE,EAAE,CAAC;IAG1D,MAAMG,qBAAqB,GAAGF,YAAY,CAACtF,GAAG,CAAC,CAAC,CAAC2D,KAAK,EAAEC,KAAK,CAAC,MAAM;MAClED,KAAK;MACLC,KAAK;MACLvB,KAAK,EAAE0C,cAAc,CAAC7E,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAAC6E,MAAM,CAAC/C,QAAQ,CAAC0B,KAAK,CAAC,CAAC,CAAC3D,GAAG,CAAEG,KAAK,IAAKA,KAAK,CAACoC,IAAI;KAChG,CAAC,CAAC;IAEH,MAAMkD,sBAAsB,GAAGF,aAAa,CAACvF,GAAG,CAAC,CAAC,CAAC2D,KAAK,EAAEC,KAAK,CAAC,MAAM;MACpED,KAAK;MACLC,KAAK;MACLvB,KAAK,EAAE0C,cAAc,CAAC7E,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAAC6E,MAAM,CAAC/C,QAAQ,CAAC0B,KAAK,CAAC,CAAC,CAAC3D,GAAG,CAAEG,KAAK,IAAKA,KAAK,CAACoC,IAAI;KAChG,CAAC,CAAC;IAEH,MAAMmD,MAAM,GAAG7E,QAAQ,CAACC,aAAa,CAAC,sBAAsB,CAAC;IAC7D,MAAM6E,MAAM,GAAG9E,QAAQ,CAACC,aAAa,CAAC,uBAAuB,CAAC;IAE9D,IAAI4E,MAAM,YAAYE,WAAW,IAAID,MAAM,YAAYC,WAAW,EAAE;MAClEJ,qBAAqB,CAACxE,OAAO,CAAC,CAAC;QAAE2C,KAAK;QAAEC,KAAK;QAAEvB;MAAK,CAAE,KAAI;QACxD,MAAMwD,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG1D,KAAK,CAAC;QAClC,MAAM2D,OAAO,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAG5D,KAAK,CAAC;QAElC,MAAMlB,GAAG,GAAGN,QAAQ,CAACO,aAAa,CAAC,IAAI,CAAC;QACxCD,GAAG,CAACM,SAAS,GAAG,OAAOkC,KAAK,YAAYC,KAAK,YAAYiC,OAAO,YAAYG,OAAO,OAAO;QAE1FN,MAAM,CAAChE,WAAW,CAACP,GAAG,CAAC;MACzB,CAAC,CAAC;MAEFsE,sBAAsB,CAACzE,OAAO,CAAC,CAAC;QAAE2C,KAAK;QAAEC,KAAK;QAAEvB;MAAK,CAAE,KAAI;QACzD,MAAMwD,OAAO,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAG1D,KAAK,CAAC;QAClC,MAAM2D,OAAO,GAAGF,IAAI,CAACG,GAAG,CAAC,GAAG5D,KAAK,CAAC;QAElC,MAAMlB,GAAG,GAAGN,QAAQ,CAACO,aAAa,CAAC,IAAI,CAAC;QACxCD,GAAG,CAACM,SAAS,GAAG,OAAOkC,KAAK,YAAYC,KAAK,YAAYiC,OAAO,YAAYG,OAAO,OAAO;QAE1FL,MAAM,CAACjE,WAAW,CAACP,GAAG,CAAC;MACzB,CAAC,CAAC;;IAGJ,MAAM+E,YAAY,GAAG,CAAC,GAAGV,qBAAqB,EAAE,GAAGC,sBAAsB,CAAC;IAE1ES,YAAY,CAACvB,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACjB,KAAK,GAAGgB,CAAC,CAAChB,KAAK,CAAC;IAE9C,MAAMuC,aAAa,GAAGD,YAAY,CAAC,CAAC,CAAC,CAACtC,KAAK;IAC3C,MAAMwC,SAAS,GAAG,CAAC;IACnB,MAAMC,SAAS,GAAG,EAAE;IAGpB,MAAMC,aAAa,GAAGJ,YAAY,CAAClG,GAAG,CAAC,CAACuG,IAAI,EAAErF,KAAK,MAAM;MACvDsF,IAAI,EAAED,IAAI,CAAC5C,KAAK;MAChB8C,MAAM,EAAE,IAAI,CAACC,cAAc,CAACH,IAAI,CAAC3C,KAAK,EAAEuC,aAAa,EAAEC,SAAS,EAAEC,SAAS,CAAC;MAC5EM,KAAK,EAAE,IAAI,CAACC,WAAW;KACxB,CAAC,CAAC;IAEHhJ,OAAO,CAACiC,GAAG,CAAC,gBAAgB,CAAC;IAC7BjC,OAAO,CAACiC,GAAG,CAACyG,aAAa,CAAC;IAE1B,IAAI,CAAClJ,SAAS,GAAGkJ,aAAa;EAElC;EAEAI,cAAcA,CAACG,UAAkB,EAAEV,aAAqB,EAAEC,SAAiB,EAAEC,SAAiB;IAC5F,MAAMS,IAAI,GAAGD,UAAU,GAAGV,aAAa;IACvC,MAAMY,eAAe,GAAGD,IAAI,IAAIT,SAAS,GAAGD,SAAS,CAAC,GAAGA,SAAS;IAClE,OAAON,IAAI,CAACkB,KAAK,CAACD,eAAe,CAAC;EACpC;EAEA;;;EAIAE,gBAAgBA,CAAA;IACd,MAAMC,cAAc,GAAG,IAAI,CAAC3K,WAAW,CAAC4C,MAAM;IAC9C,MAAM+C,KAAK,GAAG,IAAI,CAACnG,oBAAoB,CAACiE,GAAG,CAAC+D,MAAM,IAAIA,MAAM,CAAChC,UAAU,CAACC,IAAI,CAAC;IAC7E,IAAI,CAAChG,kBAAkB,GAAGkG,KAAK;IAE/B,MAAMiF,qBAAqB,GAAGjF,KAAK,CAAClC,GAAG,CAACoH,IAAI,IAC1C,IAAI,CAAC7K,WAAW,CAAC2D,MAAM,CAAC2B,UAAU,IAAIA,UAAU,CAACQ,KAAK,CAACJ,QAAQ,CAACmF,IAAI,CAAC,CAAC,CAACjI,MAAM,CAC9E;IACDvB,OAAO,CAACiC,GAAG,CAAC,kBAAkB,CAAC;IAC/BjC,OAAO,CAACiC,GAAG,CAAC,IAAI,CAACtD,WAAW,CAAC;IAC7B,IAAI,CAACD,YAAY,CAAC,CAAC,CAAC,GAAG;MACrB4F,KAAK,EAAEA,KAAK;MACZgF,cAAc,EAAEC;KACjB;EACH;EAEAE,WAAWA,CAAA;IACT,MAAMnF,KAAK,GAAG,IAAI,CAAC/F,MAAM,CAAC6D,GAAG,CAACG,KAAK,IAAIA,KAAK,CAACoC,IAAI,CAAC,CAAC,CAAC;IACpD,MAAMhC,SAAS,GAAG,IAAI,CAACpE,MAAM,CAAC6D,GAAG,CAACG,KAAK,IAAIA,KAAK,CAACI,SAAS,CAAC;IAE3D3C,OAAO,CAACiC,GAAG,CAAC,6BAA6B,CAAC;IAC1CjC,OAAO,CAACiC,GAAG,CAAC,IAAI,CAAC1D,MAAM,CAAC;IAExB,IAAI,CAACG,YAAY,CAAC,CAAC,CAAC,GAAG;MACrB4F,KAAK,EAAEA,KAAK;MACZ3B,SAAS,EAAEA;KACZ;EACH;EAEA+G,iBAAiBA,CAAA;IACf,MAAMpF,KAAK,GAAG,IAAI,CAAC/F,MAAM,CAAC6D,GAAG,CAACG,KAAK,IAAIA,KAAK,CAACoC,IAAI,CAAC;IAClD;IACA;IAEA,IAAI,CAACjG,YAAY,CAAC,CAAC,CAAC,GAAG;MACrB4F,KAAK,EAAEA,KAAK;MACZ3B,SAAS,EAAE2B;KACZ;EACH;EAEAqF,mBAAmBA,CAAA;IACjB,MAAMC,YAAY,GAAG,IAAI,CAACrL,MAAM,CAAC6D,GAAG,CAACG,KAAK,IAAG;MAC3C,MAAMsH,KAAK,GAAG,IAAI,CAACrL,cAAc,CAACsL,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACpF,IAAI,KAAKpC,KAAK,CAACoC,IAAI,CAAC;MAClE,OAAO;QACLA,IAAI,EAAEpC,KAAK,CAACoC,IAAI;QAChBqF,SAAS,EAAEH,KAAK,GAAGA,KAAK,CAACG,SAAS,GAAG,CAAC;QACtCrH,SAAS,EAAEJ,KAAK,CAACI;OAClB;IACH,CAAC,CAAC;IAEF,MAAMsH,QAAQ,GAAGL,YAAY,CAACxH,GAAG,CAAC8H,IAAI,IAAG;MACvC,MAAM;QAAEvF,IAAI;QAAEqF,SAAS;QAAErH;MAAS,CAAE,GAAGuH,IAAI;MAC3C,MAAMD,QAAQ,GAAGD,SAAS,GAAGrH,SAAS;MACtC,OAAO;QAAEsH,QAAQ;QAAEtF;MAAI,CAAE;IAC3B,CAAC,CAAC;IAEF,IAAI,CAACjG,YAAY,CAAC,CAAC,CAAC,GAAG;MACrB4F,KAAK,EAAE2F,QAAQ,CAAC7H,GAAG,CAAC8H,IAAI,IAAIA,IAAI,CAACvF,IAAI,CAAC;MACtCwF,UAAU,EAAEF,QAAQ,CAAC7H,GAAG,CAAC8H,IAAI,IAAIA,IAAI,CAACD,QAAQ;KAC/C;EACH;EAEAG,iBAAiBA,CAAA;IAEf,MAAMxL,iBAAiB,GAAkF,EAAE;IAE3G;IACA;IACA,IAAI,CAACH,YAAY,CAAC2E,OAAO,CAAEiH,MAA+D,IAAI;MAC5FA,MAAM,CAACC,OAAO,CAAClH,OAAO,CAACgE,MAAM,IAAG;QAC9B,MAAMmD,UAAU,GAAG3L,iBAAiB,CAAC4L,SAAS,CAACjI,KAAK,IAAIA,KAAK,CAAC6E,MAAM,KAAKA,MAAM,CAAC;QAChF,IAAImD,UAAU,KAAK,CAAC,CAAC,EAAE;UACrB3L,iBAAiB,CAAC2L,UAAU,CAAC,CAAClI,UAAU,EAAE;UAC1CzD,iBAAiB,CAAC2L,UAAU,CAAC,CAACE,WAAW,CAAChF,IAAI,CAAC4E,MAAM,CAACpG,UAAU,CAAC;SAClE,MAAM;UACHrF,iBAAiB,CAAC6G,IAAI,CAAC;YACrB2B,MAAM;YACN/E,UAAU,EAAE,CAAC;YACboI,WAAW,EAAE,CAACJ,MAAM,CAACpG,UAAU,CAAC;YAChCU,IAAI,EAAE0F,MAAM,CAAC1F;WACd,CAAC;;MAEN,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,IAAI,CAAC/F,iBAAiB,GAAGA,iBAAiB;IAE1C;IACA,MAAM8L,mBAAmB,GAAG9L,iBAAiB,CAAC0D,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACF,UAAU,KAAK,CAAC,CAAC;IAErF,MAAMsI,gBAAgB,GAAG,IAAI,CAACpM,MAAM,CAAC6D,GAAG,CAACG,KAAK,IAAG;MAC/C,MAAMoC,IAAI,GAAGpC,KAAK,CAACoC,IAAI;MACvB,MAAMhC,SAAS,GAAGJ,KAAK,CAACI,SAAS;MACjC,MAAMiI,yBAAyB,GAAGF,mBAAmB,CAACpI,MAAM,CAACC,KAAK,IAAIA,KAAK,CAACoC,IAAI,KAAKA,IAAI,CAAC,CAACpD,MAAM;MACjG,MAAMkC,UAAU,GAAImH,yBAAyB,GAAGjI,SAAS,GAAI,GAAG;MAEhE,OAAO;QAAEgC,IAAI;QAAElB;MAAU,CAAE;IAC7B,CAAC,CAAC;IAEF,IAAI,CAAC/E,YAAY,CAAC,CAAC,CAAC,GAAG;MACrB4F,KAAK,EAAEqG,gBAAgB,CAACvI,GAAG,CAAC8H,IAAI,IAAIA,IAAI,CAACvF,IAAI,CAAC;MAC9CkG,WAAW,EAAEF,gBAAgB,CAACvI,GAAG,CAAC8H,IAAI,IAAIA,IAAI,CAACzG,UAAU;KAC1D;EACH;EAKAuB,cAAcA,CAAChB,QAAe;IAC5B,MAAM8G,UAAU,GAAgD,EAAE;IAClE,MAAMC,eAAe,GAAG/G,QAAQ,CAAC1B,MAAM,CAAE0I,MAAW,IAAKC,MAAM,CAACC,IAAI,CAACF,MAAM,CAACnG,WAAW,CAAC,CAACtD,MAAM,GAAG,CAAC,CAAC;IAEpG;IACA,MAAM4J,YAAY,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACL,eAAe,CAAC3I,GAAG,CAAC8H,IAAI,IAAIA,IAAI,CAACvF,IAAI,CAAC,CAAC,CAAC;IAEzE;IACA,KAAK,MAAM0G,KAAK,IAAIF,YAAY,EAAE;MAChC,MAAMG,YAAY,GAAGP,eAAe,CAACzI,MAAM,CAAC4H,IAAI,IAAIA,IAAI,CAACvF,IAAI,KAAK0G,KAAK,CAAC;MAExE;MACAP,UAAU,CAACO,KAAK,CAAC,GAAG,EAAE;MAExB,KAAK,MAAML,MAAM,IAAIM,YAAY,EAAE;QACjC,IAAIC,WAAW,GAAG,EAAE;QACpB,IAAIC,iBAAiB,GAAG,CAAC,CAAC;QAE1B,KAAK,MAAMC,IAAI,IAAIT,MAAM,CAACnG,WAAW,EAAE;UACnC,IAAImG,MAAM,CAACnG,WAAW,CAAC4G,IAAI,CAAC,GAAGD,iBAAiB,EAAE;YAChDD,WAAW,GAAGE,IAAI;YAClBD,iBAAiB,GAAGR,MAAM,CAACnG,WAAW,CAAC4G,IAAI,CAAC;;;QAGhD,IAAG,EAAEF,WAAW,IAAIT,UAAU,CAACO,KAAK,CAAC,CAAC,EAAC;UACrCP,UAAU,CAACO,KAAK,CAAC,CAACE,WAAW,CAAC,GAAG,CAAC;SACnC,MAAI;UACHT,UAAU,CAACO,KAAK,CAAC,CAACE,WAAW,CAAC,GAAGT,UAAU,CAACO,KAAK,CAAC,CAACE,WAAW,CAAC,GAAG,CAAC;;;;IAKzEvL,OAAO,CAACiC,GAAG,CAAC,kBAAkB,CAAC;IAC/BjC,OAAO,CAACiC,GAAG,CAAC6I,UAAU,CAAC;IAEvB;IACA,KAAK,MAAMnG,IAAI,IAAImG,UAAU,EAAE;MAC7B,IAAIpI,KAAK,GAAG,CAAC;MACb,KAAK,MAAMgJ,OAAO,IAAIZ,UAAU,CAACnG,IAAI,CAAC,EAAE;QACtCjC,KAAK,IAAIoI,UAAU,CAACnG,IAAI,CAAC,CAAC+G,OAAO,CAAC;;MAEpC,KAAK,MAAMA,OAAO,IAAIZ,UAAU,CAACnG,IAAI,CAAC,EAAE;QACtCmG,UAAU,CAACnG,IAAI,CAAC,CAAC+G,OAAO,CAAC,GAAGC,MAAM,CAAC,CAACb,UAAU,CAACnG,IAAI,CAAC,CAAC+G,OAAO,CAAC,GAAChJ,KAAK,EAAEgB,OAAO,CAAC,CAAC,CAAC,CAAC;;;IAIpF,MAAMe,KAAK,GAAGwG,MAAM,CAACC,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC;IACvC,MAAMc,SAAS,GAAGX,MAAM,CAACC,IAAI,CAACJ,UAAU,CAACrG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,MAAMoH,cAAc,GAAGD,SAAS,CAAC,CAAC;IAElC;IACA,MAAME,YAAY,GAAGF,SAAS,CAACxJ,GAAG,CAAEsJ,OAAO,IACzCjH,KAAK,CAACrC,GAAG,CAAEuC,IAAI,IAAKmG,UAAU,CAACnG,IAAI,CAAC,CAAC+G,OAAO,CAAC,CAAC,CAC/C;IAED1L,OAAO,CAACiC,GAAG,CAAC,cAAc,CAAC;IAC3BjC,OAAO,CAACiC,GAAG,CAAC6J,YAAY,CAAC;IAEzB,IAAI,CAACC,sBAAsB,CAAC,YAAY,EAAEtH,KAAK,EAAEoH,cAAc,EAAEC,YAAY,CAAC;EAEhF;EAEAE,qBAAqBA,CAACC,OAAiB,EAAEC,SAAiB,EAAEC,OAAe;IACzE,MAAMC,eAAe,GAAa,EAAE;IAEpC;IACAH,OAAO,CAAC7I,OAAO,CAAEiH,MAAM,IAAI;MACzB;MACA,MAAMgC,WAAW,GAAGhC,MAAM,CAAC1F,IAAI,CAACzE,KAAK,CAAC,GAAG,CAAC,CAACkC,GAAG,CAACuJ,MAAM,CAAC,CAACrJ,MAAM,CAAEqC,IAAI,IAAKA,IAAI,IAAIuH,SAAS,IAAIvH,IAAI,IAAIwH,OAAO,CAAC;MAE7G,IAAIE,WAAW,CAAC9K,MAAM,GAAG,CAAC,EAAE;QAC1B;QACA,MAAM+K,cAAc,GAAGF,eAAe,CAACtC,IAAI,CAAEyC,cAAc,IAAKA,cAAc,CAACtI,UAAU,KAAKoG,MAAM,CAACpG,UAAU,CAAC;QAChH,IAAIqI,cAAc,EAAE;UAClB;UACAA,cAAc,CAACxJ,eAAe,IAAIuH,MAAM,CAACvH,eAAe;UACxDwJ,cAAc,CAAC3H,IAAI,IAAI,KAAK0F,MAAM,CAAC1F,IAAI,EAAE;SAC1C,MAAM;UACL;UACAyH,eAAe,CAAC3G,IAAI,CAAC;YACnB6E,OAAO,EAAED,MAAM,CAACC,OAAO;YACvBxH,eAAe,EAAEuH,MAAM,CAACvH,eAAe;YACvCmB,UAAU,EAAEoG,MAAM,CAACpG,UAAU;YAC7BU,IAAI,EAAE0F,MAAM,CAAC1F;WACd,CAAC;;;IAGR,CAAC,CAAC;IAEF,OAAOyH,eAAe;EACxB;EAEAI,oBAAoBA,CAACC,aAAuB;IAC1C;IACA,MAAMP,SAAS,GAAGhE,IAAI,CAACC,GAAG,CAAC,GAAGsE,aAAa,CAAC;IAC5C,MAAMN,OAAO,GAAGjE,IAAI,CAACG,GAAG,CAAC,GAAGoE,aAAa,CAAC;IAE1C;IACA,MAAMC,WAAW,GAAGxE,IAAI,CAACyE,KAAK,CAACT,SAAS,GAAG,EAAE,CAAC,GAAG,EAAE;IACnD,MAAMU,SAAS,GAAG1E,IAAI,CAACyE,KAAK,CAACR,OAAO,GAAG,EAAE,CAAC,GAAG,EAAE;IAE/C;IACA,MAAMU,OAAO,GAAkB,EAAE;IACjC,KAAK,IAAIC,MAAM,GAAGJ,WAAW,EAAEI,MAAM,IAAIF,SAAS,EAAEE,MAAM,IAAI,EAAE,EAAE;MAChE,MAAMC,WAAW,GAAG,GAAGD,MAAM,GAAG;MAChC,MAAME,eAAe,GAAGF,MAAM;MAC9B,MAAMG,aAAa,GAAGH,MAAM,GAAG,CAAC;MAChC,MAAMI,aAAa,GAAG,IAAI,CAAClB,qBAAqB,CAAC,IAAI,CAACvN,YAAY,EAAEuO,eAAe,EAAEC,aAAa,CAAC;MAEnGJ,OAAO,CAACpH,IAAI,CAAC;QACX0H,KAAK,EAAEJ,WAAW;QAClBb,SAAS,EAAEc,eAAe;QAC1Bb,OAAO,EAAEc,aAAa;QACtBhB,OAAO,EAAEiB;OACV,CAAC;;IAEJ;IACAL,OAAO,CAACzJ,OAAO,CAAE0J,MAAM,IAAI;MACzBA,MAAM,CAACb,OAAO,CAAClF,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACnE,eAAe,GAAGkE,CAAC,CAAClE,eAAe,CAAC;MACpE,IAAIgK,MAAM,CAACb,OAAO,CAAC1K,MAAM,GAAG,EAAE,EAAC;QAC7BuL,MAAM,CAACb,OAAO,GAAGa,MAAM,CAACb,OAAO,CAACvG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;;IAEhD,CAAC,CAAC;IAEF;IACA,OAAOmH,OAAO;EAChB;EAEAO,oBAAoBA,CAACrO,WAAkB;IACrC,MAAMsO,MAAM,GAA0C;MACpD,OAAO,EAAEpK,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;MACjD,OAAO,EAAED,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;MACjD,OAAO,EAAED,QAAQ,CAACC,aAAa,CAAC,gBAAgB,CAAC;MACjD,OAAO,EAAED,QAAQ,CAACC,aAAa,CAAC,gBAAgB;KACjD;IAEDlD,OAAO,CAACiC,GAAG,CAAC,aAAa,CAAC;IAC1BjC,OAAO,CAACiC,GAAG,CAAClD,WAAW,CAAC;IACxB,KAAK,MAAMuO,MAAM,IAAIvO,WAAW,EAAE;MAChC,MAAMwO,KAAK,GAAGF,MAAM,CAACC,MAAM,CAACH,KAAK,CAAC;MAElC,IAAII,KAAK,YAAYvF,WAAW,EAAE;QAChCsF,MAAM,CAACrB,OAAO,CAACvG,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAACtC,OAAO,CAAEoK,KAA4D,IAAI;UACnG,MAAMjK,GAAG,GAAGN,QAAQ,CAACO,aAAa,CAAC,IAAI,CAAC;UACxCD,GAAG,CAACM,SAAS,GAAG,OAAO2J,KAAK,CAACvJ,UAAU,YAAYuJ,KAAK,CAAC1K,eAAe,OAAO;UAE/EyK,KAAK,CAACzJ,WAAW,CAACP,GAAG,CAAC;QACxB,CAAC,CAAC;;;EAGR;EAEAkK,eAAeA,CAACC,OAAe,EAAEP,KAAa,EAAEjL,MAAa,EAAErC,IAAW;IACxE,IAAI,CAAC8N,SAAS,GAAG,IAAIlQ,KAAK,CAACiQ,OAAO,EAAE;MAClCE,IAAI,EAAE,MAAM;MACZ/N,IAAI,EAAE;QACJqC,MAAM,EAAEA,MAAM;QACd8B,QAAQ,EAAE,CACR;UACEmJ,KAAK,EAAEA,KAAK;UACZtN,IAAI,EAAEA,IAAI;UACVgO,IAAI,EAAE,KAAK;UACXC,WAAW,EAAE,gBAAgB;UAC7BC,WAAW,EAAE;SACd;OAEJ;MACD9O,OAAO,EAAE;QACP+O,OAAO,EAAE;UACPC,MAAM,EAAE;YACN/L,MAAM,EAAE;cACN6G,KAAK,EAAE,OAAO;cACdmF,IAAI,EAAE;gBACJC,IAAI,EAAE,EAAE;gBACRC,MAAM,EAAE;;;;SAIf;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDV,IAAI,EAAE,QAAQ;YACdW,OAAO,EAAE;;;;KAIhB,CAAC;EACJ;EAEAxJ,WAAWA,CAACf,QAAe;IACzB,MAAMwK,iBAAiB,GAA4D,EAAE;IAEnFxK,QAAQ,CAACZ,OAAO,CAAEvD,IAAiC,IAAI;MACrD,MAAM;QAAE8E,IAAI;QAAEpE;MAAM,CAAE,GAAGV,IAAI;MAE7B,IAAI4O,SAAS,GAAG,EAAE;MAElB,IAAIlO,MAAM,IAAI,GAAG,IAAIA,MAAM,IAAI,IAAI,IAAIA,MAAM,IAAI,IAAI,IAAIA,MAAM,IAAI,GAAG,EAAE;QACtEkO,SAAS,GAAG,SAAS;OACtB,MAAM,IAAIlO,MAAM,IAAI,GAAG,IAAIA,MAAM,IAAI,IAAI,IAAIA,MAAM,IAAI,IAAI,EAAE;QAC5DkO,SAAS,GAAG,SAAS;OACtB,MAAK;QACJA,SAAS,GAAG,aAAa;;MAG3B,IAAI,CAACD,iBAAiB,CAACC,SAAS,CAAC,EAAE;QACjCD,iBAAiB,CAACC,SAAS,CAAC,GAAG,EAAE;;MAGnC,MAAMC,YAAY,GAAGF,iBAAiB,CAACC,SAAS,CAAC,CAAC3E,IAAI,CAAC6E,CAAC,IAAIA,CAAC,CAAChK,IAAI,KAAKA,IAAI,CAAC;MAE5E,IAAI+J,YAAY,EAAE;QAChBA,YAAY,CAAC1I,KAAK,EAAE;OACrB,MAAM;QACLwI,iBAAiB,CAACC,SAAS,CAAC,CAAChJ,IAAI,CAAC;UAChCd,IAAI;UACJqB,KAAK,EAAE;SACR,CAAC;;IAEN,CAAC,CAAC;IAEF;IACA,MAAM4I,cAAc,GAA2E,EAAE;IACjG,MAAMC,OAAO,GAAGL,iBAAiB,CAAC,SAAS,CAAC;IAC5C,MAAMM,OAAO,GAAGN,iBAAiB,CAAC,SAAS,CAAC;IAE5C;IACAK,OAAO,CAACzL,OAAO,CAAC8G,IAAI,IAAG;MACrB,MAAMV,IAAI,GAAGU,IAAI,CAACvF,IAAI;MACtB,MAAMoK,MAAM,GAAG7E,IAAI,CAAClE,KAAK;MAEzB4I,cAAc,CAACpF,IAAI,CAAC,GAAG;QAAEqF,OAAO,EAAEE,MAAM;QAAED,OAAO,EAAE,CAAC;QAAEpM,KAAK,EAAEqM;MAAM,CAAE;IACvE,CAAC,CAAC;IAEF;IACAD,OAAO,CAAC1L,OAAO,CAAC8G,IAAI,IAAG;MACrB,MAAMV,IAAI,GAAGU,IAAI,CAACvF,IAAI;MACtB,MAAMoK,MAAM,GAAG7E,IAAI,CAAClE,KAAK;MAEzB,IAAI4I,cAAc,CAACpF,IAAI,CAAC,EAAE;QACxBoF,cAAc,CAACpF,IAAI,CAAC,CAACsF,OAAO,GAAGC,MAAM;QACrCH,cAAc,CAACpF,IAAI,CAAC,CAAC9G,KAAK,IAAIqM,MAAM;OACrC,MAAM;QACLH,cAAc,CAACpF,IAAI,CAAC,GAAG;UAAEsF,OAAO,EAAEC,MAAM;UAAEF,OAAO,EAAE,CAAC;UAAEnM,KAAK,EAAEqM;QAAM,CAAE;;IAEzE,CAAC,CAAC;IAEF/O,OAAO,CAACiC,GAAG,CAAC,iBAAiB,CAAC;IAC9BjC,OAAO,CAACiC,GAAG,CAAC2M,cAAc,CAAC;IAE3B;IACA,MAAMI,cAAc,GAAG/D,MAAM,CAACC,IAAI,CAAC0D,cAAc,CAAC,CAAC7H,IAAI,EAAE;IAGzD,MAAMkI,cAAc,GAAGD,cAAc,CAAC5M,GAAG,CAACoH,IAAI,IAAImC,MAAM,CAAC,CAACiD,cAAc,CAACpF,IAAI,CAAC,CAACqF,OAAO,GAAED,cAAc,CAACpF,IAAI,CAAC,CAAC9G,KAAM,EAAEgB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACjI,MAAMwL,cAAc,GAAGF,cAAc,CAAC5M,GAAG,CAACoH,IAAI,IAAImC,MAAM,CAAC,CAACiD,cAAc,CAACpF,IAAI,CAAC,CAACsF,OAAO,GAAEF,cAAc,CAACpF,IAAI,CAAC,CAAC9G,KAAM,EAAEgB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IAEjI1D,OAAO,CAACiC,GAAG,CAAC,iBAAiB,CAAC;IAC9BjC,OAAO,CAACiC,GAAG,CAACgN,cAAc,CAAC;IAG3B,IAAI,CAACE,sBAAsB,CAAC,YAAY,EAAEH,cAAc,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,CAACC,cAAc,EAAEC,cAAc,CAAC,CAAC;IACnH,IAAI,CAACnD,sBAAsB,CAAC,YAAY,EAAEiD,cAAc,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,CAACC,cAAc,EAAEC,cAAc,CAAC,CAAC;EACvH;EAEAnD,sBAAsBA,CAACqD,OAAe,EAAElN,MAAgB,EAAE2J,cAAwB,EAAEC,YAAwB;IAC1G,MAAM9H,QAAQ,GAAG6H,cAAc,CAACzJ,GAAG,CAAC,CAAC+K,KAAK,EAAE7J,KAAK,MAAM;MACrD6J,KAAK,EAAEA,KAAK;MACZtN,IAAI,EAAEiM,YAAY,CAACxI,KAAK,CAAC;MACzB+L,eAAe,EAAE,oBAAoB;MACrCvB,WAAW,EAAE,IAAI,CAACwB,cAAc,CAAChM,KAAK;KACvC,CAAC,CAAC;IAEH,MAAMiM,WAAW,GAA+B;MAC9C3B,IAAI,EAAE,MAAM;MACZ/N,IAAI,EAAE;QACJqC,MAAM,EAAEA,MAAM;QACd8B,QAAQ,EAAEA;OACX;MACD/E,OAAO,EAAE;QACP+O,OAAO,EAAE;UACPC,MAAM,EAAE;YACN/L,MAAM,EAAE;cACN6G,KAAK,EAAE,OAAO;cACdmF,IAAI,EAAE;gBACJC,IAAI,EAAE,EAAE;gBACRC,MAAM,EAAE;;;;SAIf;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDV,IAAI,EAAE,QAAQ;YACdW,OAAO,EAAE;;;;KAIhB;IAED;IACA,MAAMiB,GAAG,GAAGvM,QAAQ,CAACwM,cAAc,CAACL,OAAO,CAAsB;IACjE,IAAI3R,KAAK,CAAC+R,GAAG,EAAED,WAAW,CAAC;EAC7B;EAEAJ,sBAAsBA,CAACC,OAAe,EAAElN,MAAgB,EAAE2J,cAAwB,EAAEC,YAAwB;IAC1G,MAAM4D,OAAO,GAAG,CAAC,SAAS,EAAE,SAAS,CAAC;IAEtC,MAAM1L,QAAQ,GAAG6H,cAAc,CAACzJ,GAAG,CAAC,CAAC+K,KAAK,EAAE7J,KAAK,MAAM;MACrD6J,KAAK,EAAEA,KAAK;MACZtN,IAAI,EAAEiM,YAAY,CAACxI,KAAK,CAAC;MACzB+L,eAAe,EAAEK,OAAO,CAACpM,KAAK,CAAC;MAC/BwK,WAAW,EAAE;KACd,CAAC,CAAC;IAEH,MAAMyB,WAAW,GAA8B;MAC7C3B,IAAI,EAAE,KAAK;MACX/N,IAAI,EAAE;QACJqC,MAAM,EAAEA,MAAM;QACd8B,QAAQ,EAAEA;OACX;MACD/E,OAAO,EAAE;QACP+O,OAAO,EAAE;UACPC,MAAM,EAAE;YACNM,OAAO,EAAE,KAAK;YACdrM,MAAM,EAAE;cACN6G,KAAK,EAAE,OAAO;cACdmF,IAAI,EAAE;gBACJC,IAAI,EAAE,EAAE;gBACRC,MAAM,EAAE;;;;;;KAMnB;IACD,MAAMoB,GAAG,GAAGvM,QAAQ,CAACwM,cAAc,CAACL,OAAO,CAAsB;IACjE,IAAI3R,KAAK,CAAC+R,GAAG,EAAED,WAAW,CAAC;EAI/B;EAEEI,oBAAoBA,CAACjC,OAAe,EAAEP,KAAa,EAAEjL,MAAa,EAAErC,IAAW;IAC7E,IAAI,CAAC+P,QAAQ,GAAG,IAAInS,KAAK,CAACiQ,OAAO,EAAE;MACjCE,IAAI,EAAE,KAAK;MACX/N,IAAI,EAAE;QACJqC,MAAM,EAAEA,MAAM;QACd8B,QAAQ,EAAE,CACR;UACEmJ,KAAK,EAAEA,KAAK;UACZtN,IAAI,EAAEA,IAAI;UACVwP,eAAe,EAAE,gBAAgB;UACjCvB,WAAW,EAAE,gBAAgB;UAC7BC,WAAW,EAAE;SACd;OAEJ;MACD9O,OAAO,EAAE;QACP+O,OAAO,EAAE;UACPC,MAAM,EAAE;YACN/L,MAAM,EAAE;cACN6G,KAAK,EAAE,OAAO;cACdmF,IAAI,EAAE;gBACJC,IAAI,EAAE,EAAE;gBACRC,MAAM,EAAE;;;;SAIf;QACDC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDuB,WAAW,EAAE;;;;KAIpB,CAAC;EACJ;EAEA7G,WAAWA,CAAA;IACT,MAAM8G,CAAC,GAAG5H,IAAI,CAACyE,KAAK,CAACzE,IAAI,CAAC6H,MAAM,EAAE,GAAG,GAAG,CAAC;IACzC,MAAMC,CAAC,GAAG9H,IAAI,CAACyE,KAAK,CAACzE,IAAI,CAAC6H,MAAM,EAAE,GAAG,GAAG,CAAC;IACzC,MAAM9I,CAAC,GAAGiB,IAAI,CAACyE,KAAK,CAACzE,IAAI,CAAC6H,MAAM,EAAE,GAAG,GAAG,CAAC;IACzC,OAAO,QAAQD,CAAC,KAAKE,CAAC,KAAK/I,CAAC,MAAM;EACpC;EAEAqI,cAAcA,CAAChM,KAAa;IAC1B,IAAI2M,MAAM,GAA2B;MACnC,CAAC,EAAE,uBAAuB;MAC1B,CAAC,EAAE,sBAAsB;MACzB,CAAC,EAAE,sBAAsB;MACzB,CAAC,EAAE,uBAAuB;MAC1B,CAAC,EAAE,wBAAwB;MAC3B,CAAC,EAAE;KACJ;IAED,OAAOA,MAAM,CAAC3M,KAAK,CAAC;EACtB;EACMpC,IAAIA,CAAA;IAAA,IAAAgP,MAAA;IAAA,OAAA5O,iBAAA;MACR,IAAI;QACF4O,MAAI,CAAC/R,oBAAoB,GAAG+R,MAAI,CAACjS,gBAAgB,CAACkS,2BAA2B,EAAE;QAC/EnQ,OAAO,CAACiC,GAAG,CAAE,eAAgB,CAAC;QAC9BjC,OAAO,CAACiC,GAAG,CAACiO,MAAI,CAAC/R,oBAAoB,CAAC;QACtC+R,MAAI,CAAC7R,gBAAgB,GAAG6R,MAAI,CAACjS,gBAAgB,CAACmS,wBAAwB,EAAE;QACxEF,MAAI,CAAC5R,SAAS,GAAG4R,MAAI,CAACjS,gBAAgB,CAACoS,kBAAkB,EAAE;QAE3DH,MAAI,CAACI,aAAa,EAAE;QACpBJ,MAAI,CAACK,qBAAqB,EAAE;QAC5BL,MAAI,CAACM,yBAAyB,EAAE;QAChCN,MAAI,CAACO,kBAAkB,EAAE;QAEzB,IAAGP,MAAI,CAACvR,WAAW,CAAC4C,MAAM,IAAI,CAAC,EAAC;UAC9B,MAAM2O,MAAI,CAAC9O,wBAAwB,EAAE;UACrC8O,MAAI,CAACnM,wBAAwB,EAAE;SAChC,MAAK;UACJmM,MAAI,CAACnM,wBAAwB,EAAE;;QAGjC,IAAGmM,MAAI,CAACtR,iBAAiB,CAAC2C,MAAM,IAAI,CAAC,EAAC;UACpC,MAAM2O,MAAI,CAACtO,+BAA+B,EAAE;UAC5CsO,MAAI,CAAChJ,oBAAoB,EAAE;UAC3BgJ,MAAI,CAAClO,qBAAqB,EAAE;SAC7B,MAAI;UACHkO,MAAI,CAAChJ,oBAAoB,EAAE;UAC3BgJ,MAAI,CAAClO,qBAAqB,EAAE;;QAG9B,IAAGkO,MAAI,CAACzR,YAAY,CAAC8C,MAAM,IAAI,CAAC,EAAC;UAC/B,MAAM2O,MAAI,CAACpO,2BAA2B,EAAE;UACxCoO,MAAI,CAACnR,WAAW,GAAGmR,MAAI,CAAC1D,oBAAoB,CAAC0D,MAAI,CAAC9R,kBAAkB,CAAC;UACrE8R,MAAI,CAAC9C,oBAAoB,CAAC8C,MAAI,CAACnR,WAAW,CAAC;SAC5C,MAAI;UACHmR,MAAI,CAACnR,WAAW,GAAGmR,MAAI,CAAC1D,oBAAoB,CAAC0D,MAAI,CAAC9R,kBAAkB,CAAC;UACrE8R,MAAI,CAAC9C,oBAAoB,CAAC8C,MAAI,CAACnR,WAAW,CAAC;;OAGhD,CAAC,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;;IACpD;EACD;EAAC,QAAA2Q,CAAA,G;qBAv5BU7S,qBAAqB,EAAA8S,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,gBAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;UAArBxT,qBAAqB;IAAAyT,SAAA;IAAAC,SAAA,WAAAC,4BAAAC,EAAA,EAAAjC,GAAA;MAAA,IAAAiC,EAAA;;;;;;;;;;;;;QCrDlCd,EAAA,CAAAe,cAAA,UAAK;QACCf,EAAA,CAAAgB,MAAA,iBAAU;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEnBjB,EAAA,CAAAe,cAAA,aAA6B;QAGrBf,EAAA,CAAAgB,MAAA,sBAAe;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAExBjB,EAAA,CAAAe,cAAA,aAA8B;QAC5Bf,EAAA,CAAAkB,SAAA,gBAAiC;QACnClB,EAAA,CAAAiB,YAAA,EAAM;QAGRjB,EAAA,CAAAe,cAAA,aAAuB;QACjBf,EAAA,CAAAgB,MAAA,sBAAc;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEvBjB,EAAA,CAAAe,cAAA,cAA8B;QAC5Bf,EAAA,CAAAkB,SAAA,iBAAiC;QACnClB,EAAA,CAAAiB,YAAA,EAAM;QAKVjB,EAAA,CAAAkB,SAAA,aAAiB;QAEjBlB,EAAA,CAAAe,cAAA,cAA6B;QAGrBf,EAAA,CAAAgB,MAAA,wCAAgC;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEzCjB,EAAA,CAAAe,cAAA,cAA8B;QAC5Bf,EAAA,CAAAkB,SAAA,iBAAiC;QACnClB,EAAA,CAAAiB,YAAA,EAAM;QAGRjB,EAAA,CAAAe,cAAA,cAAuB;QACjBf,EAAA,CAAAgB,MAAA,mDAA2C;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEpDjB,EAAA,CAAAe,cAAA,cAA8B;QAC5Bf,EAAA,CAAAkB,SAAA,iBAAgC;QAClClB,EAAA,CAAAiB,YAAA,EAAM;QAKVjB,EAAA,CAAAkB,SAAA,aAAiB;QACjBlB,EAAA,CAAAe,cAAA,aAAqB;QAAAf,EAAA,CAAAgB,MAAA,mEAA2D;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACrFjB,EAAA,CAAAe,cAAA,cAA6B;QAKff,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACfjB,EAAA,CAAAe,cAAA,UAAI;QAAAf,EAAA,CAAAgB,MAAA,kBAAU;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAGvBjB,EAAA,CAAAkB,SAAA,aAAe;QACjBlB,EAAA,CAAAiB,YAAA,EAAQ;QAEVjB,EAAA,CAAAkB,SAAA,eAAyB;QACzBlB,EAAA,CAAAe,cAAA,eAAmB;QAIPf,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACfjB,EAAA,CAAAe,cAAA,UAAI;QAAAf,EAAA,CAAAgB,MAAA,kBAAU;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAGvBjB,EAAA,CAAAkB,SAAA,aAAe;QACjBlB,EAAA,CAAAiB,YAAA,EAAQ;QAIZjB,EAAA,CAAAkB,SAAA,aAAiB;QAEjBlB,EAAA,CAAAe,cAAA,aAAqB;QAACf,EAAA,CAAAgB,MAAA,oDAA2C;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACtEjB,EAAA,CAAAe,cAAA,eAA6B;QAMnBf,EAAA,CAAAkB,SAAA,eAA2B;QAAClB,EAAA,CAAAgB,MAAA,aAC5B;QAAAhB,EAAA,CAAAkB,SAAA,eAA2B;QAAClB,EAAA,CAAAgB,MAAA,eAC9B;QAAAhB,EAAA,CAAAiB,YAAA,EAAM;QACNjB,EAAA,CAAAkB,SAAA,kBAAkD;QACpDlB,EAAA,CAAAiB,YAAA,EAAM;QAIVjB,EAAA,CAAAe,cAAA,eAAyB;QAErBf,EAAA,CAAAkB,SAAA,kBAAiC;QACnClB,EAAA,CAAAiB,YAAA,EAAM;QAIVjB,EAAA,CAAAkB,SAAA,aAAiB;QAEjBlB,EAAA,CAAAe,cAAA,UAAI;QAACf,EAAA,CAAAgB,MAAA,qDAA4C;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACtDjB,EAAA,CAAAe,cAAA,cAA4B;QAGtBf,EAAA,CAAAkB,SAAA,kBAAiC;QACnClB,EAAA,CAAAiB,YAAA,EAAM;QAIVjB,EAAA,CAAAkB,SAAA,aAAiB;QAEjBlB,EAAA,CAAAe,cAAA,aAAqB;QAAAf,EAAA,CAAAgB,MAAA,0CAAkC;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAC5DjB,EAAA,CAAAe,cAAA,cAA6B;QAKbf,EAAA,CAAAgB,MAAA,eAAO;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAChBjB,EAAA,CAAAe,cAAA,UAAI;QAAAf,EAAA,CAAAgB,MAAA,mBAAW;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACpBjB,EAAA,CAAAe,cAAA,UAAI;QAAAf,EAAA,CAAAgB,MAAA,cAAM;QAAAhB,EAAA,CAAAkB,SAAA,UAAI;QAAClB,EAAA,CAAAgB,MAAA,iBAAG;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACvBjB,EAAA,CAAAe,cAAA,UAAI;QAAAf,EAAA,CAAAgB,MAAA,eAAO;QAAAhB,EAAA,CAAAkB,SAAA,UAAI;QAAClB,EAAA,CAAAgB,MAAA,iBAAG;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAG5BjB,EAAA,CAAAkB,SAAA,aAAe;QACjBlB,EAAA,CAAAiB,YAAA,EAAQ;QAEZjB,EAAA,CAAAkB,SAAA,eAAyB;QACzBlB,EAAA,CAAAe,cAAA,eAAmB;QAILf,EAAA,CAAAgB,MAAA,gBAAQ;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACjBjB,EAAA,CAAAe,cAAA,UAAI;QAAAf,EAAA,CAAAgB,MAAA,oBAAW;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACpBjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,eAAM;QAAAhB,EAAA,CAAAkB,SAAA,WAAI;QAAClB,EAAA,CAAAgB,MAAA,kBAAG;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACvBjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,gBAAO;QAAAhB,EAAA,CAAAkB,SAAA,WAAI;QAAClB,EAAA,CAAAgB,MAAA,kBAAG;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAG5BjB,EAAA,CAAAkB,SAAA,cAAe;QACjBlB,EAAA,CAAAiB,YAAA,EAAQ;QAIdjB,EAAA,CAAAkB,SAAA,cAAiB;QACjBlB,EAAA,CAAAe,cAAA,cAAqB;QAAAf,EAAA,CAAAgB,MAAA,iDAAwC;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAClEjB,EAAA,CAAAe,cAAA,gBAAwB;QACtBf,EAAA,CAAAkB,SAAA,8BAA6E;QAC/ElB,EAAA,CAAAiB,YAAA,EAAM;QAENjB,EAAA,CAAAkB,SAAA,cAAiB;QAEjBlB,EAAA,CAAAe,cAAA,cAAqB;QAAAf,EAAA,CAAAgB,MAAA,8FAAqF;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAC/GjB,EAAA,CAAAe,cAAA,gBAA8B;QAMhBf,EAAA,CAAAgB,MAAA,wBACF;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEPjB,EAAA,CAAAkB,SAAA,WAAI;QACJlB,EAAA,CAAAe,cAAA,WAAI;QACEf,EAAA,CAAAgB,MAAA,eAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACfjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,UAAC;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAGdjB,EAAA,CAAAkB,SAAA,cAAe;QACjBlB,EAAA,CAAAiB,YAAA,EAAQ;QAEZjB,EAAA,CAAAkB,SAAA,gBAAyB;QACzBlB,EAAA,CAAAe,cAAA,gBAAmB;QAKPf,EAAA,CAAAgB,MAAA,wBACF;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEPjB,EAAA,CAAAkB,SAAA,WAAI;QACJlB,EAAA,CAAAe,cAAA,WAAI;QACEf,EAAA,CAAAgB,MAAA,eAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACfjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,UAAC;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAGdjB,EAAA,CAAAkB,SAAA,cAAe;QACjBlB,EAAA,CAAAiB,YAAA,EAAQ;QAEZjB,EAAA,CAAAkB,SAAA,gBAAyB;QACzBlB,EAAA,CAAAe,cAAA,gBAAmB;QAKTf,EAAA,CAAAgB,MAAA,wBACF;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEPjB,EAAA,CAAAkB,SAAA,WAAI;QACJlB,EAAA,CAAAe,cAAA,WAAI;QACEf,EAAA,CAAAgB,MAAA,eAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACfjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,UAAC;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAGdjB,EAAA,CAAAkB,SAAA,cAAe;QACjBlB,EAAA,CAAAiB,YAAA,EAAQ;QAEZjB,EAAA,CAAAkB,SAAA,gBAAyB;QACzBlB,EAAA,CAAAe,cAAA,gBAAmB;QAKPf,EAAA,CAAAgB,MAAA,wBACF;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAEPjB,EAAA,CAAAkB,SAAA,WAAI;QACJlB,EAAA,CAAAe,cAAA,WAAI;QACEf,EAAA,CAAAgB,MAAA,eAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACfjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,UAAC;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAGdjB,EAAA,CAAAkB,SAAA,cAAe;QACjBlB,EAAA,CAAAiB,YAAA,EAAQ;QAIZjB,EAAA,CAAAkB,SAAA,eAAkB;QAElBlB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,qEAA4D;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACrEjB,EAAA,CAAAe,cAAA,gBAA8B;QAKdf,EAAA,CAAAgB,MAAA,eAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACfjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,eAAM;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACfjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,eAAM;QAAAhB,EAAA,CAAAkB,SAAA,WAAI;QAAClB,EAAA,CAAAgB,MAAA,cAAI;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACxBjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,gBAAO;QAAAhB,EAAA,CAAAkB,SAAA,WAAI;QAAClB,EAAA,CAAAgB,MAAA,cAAI;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QACzBjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,gBAAO;QAAAhB,EAAA,CAAAkB,SAAA,WAAI;QAAClB,EAAA,CAAAgB,MAAA,oBAAU;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAC/BjB,EAAA,CAAAe,cAAA,WAAI;QAAAf,EAAA,CAAAgB,MAAA,gBAAO;QAAAhB,EAAA,CAAAkB,SAAA,WAAI;QAAClB,EAAA,CAAAgB,MAAA,sBAAY;QAAAhB,EAAA,CAAAiB,YAAA,EAAK;QAGrCjB,EAAA,CAAAkB,SAAA,cAAe;QACjBlB,EAAA,CAAAiB,YAAA,EAAQ;;;QAjGOjB,EAAA,CAAAmB,SAAA,KAAkB;QAAlBnB,EAAA,CAAAoB,UAAA,WAAAvC,GAAA,CAAAvQ,OAAA,CAAkB,SAAAuQ,GAAA,CAAAhQ,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}