{"ast":null,"code":"import _asyncToGenerator from \"/home/miguel/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Chart } from 'chart.js';\nlet InfoComponent = class InfoComponent {\n  constructor(infoService, apiService, spinnerService) {\n    this.infoService = infoService;\n    this.apiService = apiService;\n    this.spinnerService = spinnerService;\n    this.allPublications = 0;\n    this.allAuthors = 0;\n    this.allConferences = 0;\n    this.loadingGraph1 = true;\n    this.loadingGraph2 = true;\n    this.loadingGraph3 = true;\n    this.loadingGraph4 = true;\n  }\n  ngOnInit() {\n    this.main();\n  }\n  // API CALL: Function to get Publications by Year\n  getPublicationsbyYear() {\n    this.apiService.getPublicationsbyYear().subscribe({\n      next: response => {\n        this.infoService.PublicationsByYear = response;\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getPublicationsbyYear:', error);\n      }\n    });\n  }\n  // API CALL: Function to get Authors by Year\n  getAuthorsbyYear() {\n    this.apiService.getAuthorsbyYear().subscribe({\n      next: response => {\n        this.infoService.AuthorsByYear = response;\n        this.infoService.AuthorsByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n      },\n      error: error => {\n        console.error('Error al obtener los autores en getAuthorsbyYear:', error);\n      }\n    });\n  }\n  // API CALL: Function to get Conferences by Year\n  getConferencesbyYear() {\n    this.apiService.getConferencesbyYear().subscribe({\n      next: response => {\n        this.infoService.ConferencesByYear = response;\n        this.infoService.ConferencesByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n      },\n      error: error => {\n        console.error('Error al obtener las conferencias en getConferencesbyYear:', error);\n      }\n    });\n  }\n  // API CALL: Function to get All Publications\n  getPublications() {\n    this.apiService.getPublications().subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.infoService.AllPublications = response[0].all_publications;\n        } else {\n          this.infoService.AllPublications = 0;\n        }\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getPublications:', error);\n      }\n    });\n  }\n  // API CALL: Function to get All Conferences\n  getConferences() {\n    this.apiService.getConferences().subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.infoService.AllConferences = response[0].all_conferences;\n        } else {\n          this.infoService.AllConferences = 0;\n        }\n      },\n      error: error => {\n        console.error('Error al obtener las conferencias en getConferences:', error);\n      }\n    });\n  }\n  // API CALL: Function to get All Authors\n  getAuthors() {\n    this.apiService.getAuthors().subscribe({\n      next: response => {\n        if (response.length > 0) {\n          this.infoService.AllAuthors = response[0].all_authors;\n        } else {\n          this.infoService.AllAuthors = 0;\n        }\n      },\n      error: error => {\n        console.error('Error al obtener las publicaciones en getBooks:', error);\n      }\n    });\n  }\n  // API CALL: Function to get All Schools\n  getSchools() {\n    this.apiService.getSchools().subscribe({\n      next: response => {\n        this.infoService.instituions = response;\n        this.generateTablesSchools(this.infoService.instituions);\n      },\n      error: error => {\n        console.error('Error in getSchools:', error);\n      }\n    });\n  }\n  // Function to generate table School\n  generateTablesSchools(researchers) {\n    const table = document.querySelector('#tableInstitution tbody');\n    if (table instanceof HTMLElement) {\n      researchers.forEach(({\n        School,\n        NumberOfAuthors\n      }) => {\n        const row = document.createElement('tr');\n        row.innerHTML = `<td >${School}</td><td>${NumberOfAuthors}</td>`;\n        // Aplicar alineaci√≥n de celdas\n        const firstCell = row.querySelector('td:first-child');\n        const lastCell = row.querySelector('td:last-child');\n        if (firstCell && lastCell) {\n          firstCell.style.textAlign = 'left';\n          lastCell.style.textAlign = 'center';\n        }\n        table.appendChild(row);\n      });\n    }\n  }\n  // Function to generate BarChart\n  generateBarChart(idChart, label, labels, data) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: label,\n          data: data,\n          backgroundColor: 'rgb(0, 22, 68)',\n          borderColor: 'rgb(0, 22, 68)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n  // Function to generate Triple BarChart\n  generateBarChartTriple(idChart, labels, ConferencesAndPapers, JournalArticles, Thesis) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: 'Conferences and Papers',\n          data: ConferencesAndPapers,\n          backgroundColor: 'rgba(255, 99, 132, 0.5)',\n          borderColor: 'rgba(255, 99, 132, 0.5)',\n          borderWidth: 1\n        }, {\n          label: 'Journal Articles',\n          data: JournalArticles,\n          backgroundColor: 'rgba(54, 162, 235, 1)',\n          borderColor: 'rgba(54, 162, 235, 1)',\n          borderWidth: 1\n        }, {\n          label: 'Thesis',\n          data: Thesis,\n          backgroundColor: 'rgba(255, 206, 86, 2)',\n          borderColor: 'rgba(255, 206, 86, 2)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto'\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          },\n          x: {\n            stacked: true\n          }\n        }\n      }\n    });\n  }\n  // Function to wait Data\n  waitForData() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      while (_this.infoService.PublicationsByYear.length < 1 || _this.infoService.ConferencesByYear.length < 1 || _this.infoService.AuthorsByYear.length < 1) {\n        yield new Promise(resolve => setTimeout(resolve, 10000));\n      }\n    })();\n  }\n  main() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this2.getAuthors();\n        _this2.getConferences();\n        _this2.getPublications();\n        if (_this2.infoService.instituions.length < 1) {\n          _this2.getSchools();\n        } else {\n          _this2.generateTablesSchools(_this2.infoService.instituions);\n        }\n        while (_this2.infoService.AllPublications < 1 || _this2.infoService.AllConferences < 1 || _this2.infoService.AllAuthors < 1) {\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n          _this2.spinnerService.show();\n        }\n        _this2.allAuthors = _this2.infoService.AllAuthors;\n        _this2.allPublications = _this2.infoService.AllPublications;\n        _this2.allConferences = _this2.infoService.AllConferences;\n        if (_this2.infoService.PublicationsByYear.length < 1) {\n          _this2.getPublicationsbyYear();\n        }\n        if (_this2.infoService.ConferencesByYear.length < 1) {\n          _this2.getConferencesbyYear();\n        }\n        if (_this2.infoService.AuthorsByYear.length < 1) {\n          _this2.getAuthorsbyYear();\n        }\n        while (_this2.infoService.ConferencesByYear.length < 1) {\n          _this2.loadingGraph1 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n          _this2.spinnerService.show();\n        }\n        _this2.loadingGraph1 = false;\n        //Conferences by Year\n        const Conferencesyears = _this2.infoService.ConferencesByYear.map(item => item.yearName);\n        _this2.generateBarChart('barChart3', 'Conferences by Year', Conferencesyears, _this2.infoService.ConferencesByYear.map(item => item.allConferences));\n        while (_this2.infoService.AuthorsByYear.length < 1) {\n          _this2.loadingGraph2 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n          _this2.spinnerService.show();\n        }\n        _this2.loadingGraph2 = false;\n        //Authors by Year\n        const Authorsyears = _this2.infoService.AuthorsByYear.map(item => item.yearName);\n        _this2.generateBarChart('barChart2', 'Authors by Year', Authorsyears, _this2.infoService.AuthorsByYear.map(item => item.allAuthors));\n        while (_this2.infoService.PublicationsByYear.length < 1) {\n          _this2.loadingGraph3 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n          _this2.spinnerService.show();\n        }\n        _this2.loadingGraph3 = false;\n        while (_this2.infoService.instituions.length < 1) {\n          _this2.loadingGraph4 = true;\n          yield new Promise(resolve => setTimeout(resolve, 1000));\n          _this2.spinnerService.show();\n        }\n        _this2.loadingGraph4 = false;\n        //Publications by Year\n        _this2.generateBarChartTriple('tripleBarChart', _this2.infoService.PublicationsByYear.map(item => item.yearName), _this2.infoService.PublicationsByYear.map(item => item.ConferencesAndPapers), _this2.infoService.PublicationsByYear.map(item => item.JournalArticles), _this2.infoService.PublicationsByYear.map(item => item.Thesis));\n        _this2.spinnerService.hide();\n      } catch (error) {\n        console.error('Error in getData:', error);\n      }\n    })();\n  }\n};\nInfoComponent = __decorate([Component({\n  selector: 'info-config',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss']\n})], InfoComponent);\nexport { InfoComponent };","map":{"version":3,"names":["Component","Chart","InfoComponent","constructor","infoService","apiService","spinnerService","allPublications","allAuthors","allConferences","loadingGraph1","loadingGraph2","loadingGraph3","loadingGraph4","ngOnInit","main","getPublicationsbyYear","subscribe","next","response","PublicationsByYear","error","console","getAuthorsbyYear","AuthorsByYear","sort","a","b","parseInt","yearName","getConferencesbyYear","ConferencesByYear","getPublications","length","AllPublications","all_publications","getConferences","AllConferences","all_conferences","getAuthors","AllAuthors","all_authors","getSchools","instituions","generateTablesSchools","researchers","table","document","querySelector","HTMLElement","forEach","School","NumberOfAuthors","row","createElement","innerHTML","firstCell","lastCell","style","textAlign","appendChild","generateBarChart","idChart","label","labels","data","barChart","type","datasets","backgroundColor","borderColor","borderWidth","options","plugins","legend","color","font","size","family","scales","y","beginAtZero","generateBarChartTriple","ConferencesAndPapers","JournalArticles","Thesis","x","stacked","waitForData","_this","_asyncToGenerator","Promise","resolve","setTimeout","_this2","show","Conferencesyears","map","item","Authorsyears","hide","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/miguel/Collaboration_Networks/interfaz/src/app/info/info.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { Chart } from 'chart.js';\nimport { InfoService } from '../services/info.service';\nimport { SpinnerService } from '../services/spinner.service';\n\n@Component({\n  selector: 'info-config',\n  templateUrl: './info.component.html',\n  styleUrls: ['./info.component.scss']\n})\nexport class InfoComponent implements OnInit{\n  \n  allPublications = 0;\n  allAuthors = 0;\n  allConferences = 0;\n  loadingGraph1 = true;\n  loadingGraph2 = true;\n  loadingGraph3 = true;\n  loadingGraph4 = true;\n\n  barChart!: Chart;\n  \n  constructor(\n    private infoService: InfoService,\n    private apiService: ApiService,\n    private spinnerService: SpinnerService\n  ) {}\n\n\n  ngOnInit() {\n\n    this.main();\n  }\n\n  // API CALL: Function to get Publications by Year\n  getPublicationsbyYear() {\n    this.apiService.getPublicationsbyYear().subscribe({\n      next: (response: any[]) => {\n        this.infoService.PublicationsByYear = response; \n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getPublicationsbyYear:', error);\n      }\n    });\n  }\n\n  // API CALL: Function to get Authors by Year\n  getAuthorsbyYear() {\n    this.apiService.getAuthorsbyYear().subscribe({\n      next: (response: any[]) => {\n        this.infoService.AuthorsByYear = response; \n        this.infoService.AuthorsByYear.sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n  \n      },\n      error: (error: any) => {\n        console.error('Error al obtener los autores en getAuthorsbyYear:', error);\n      }\n    });\n  }\n\n  // API CALL: Function to get Conferences by Year\n  getConferencesbyYear() {\n    this.apiService.getConferencesbyYear().subscribe({\n      next: (response: any[]) => {\n        this.infoService.ConferencesByYear = response; \n        this.infoService.ConferencesByYear .sort((a, b) => {\n          return parseInt(a.yearName) - parseInt(b.yearName);\n        });\n \n      },\n      error: (error: any) => {\n        console.error('Error al obtener las conferencias en getConferencesbyYear:', error);\n      }\n    });\n  }\n\n  // API CALL: Function to get All Publications\n  getPublications() {\n    this.apiService.getPublications().subscribe({\n      next: (response: any[]) => {\n  \n        if (response.length > 0) {\n          this.infoService.AllPublications = response[0].all_publications;\n        } else {\n          this.infoService.AllPublications = 0;\n        }\n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getPublications:', error);\n      }\n    });\n  }\n\n  // API CALL: Function to get All Conferences\n  getConferences() {\n    this.apiService.getConferences().subscribe({\n      next: (response: any[]) => {\n  \n        if (response.length > 0) {\n          this.infoService.AllConferences = response[0].all_conferences;\n        } else {\n          this.infoService.AllConferences = 0;\n        }\n      },\n      error: (error: any) => {\n        console.error('Error al obtener las conferencias en getConferences:', error);\n      }\n    });\n  }\n\n  // API CALL: Function to get All Authors\n  getAuthors() {\n    this.apiService.getAuthors().subscribe({\n      next: (response: any[]) => {\n  \n        if (response.length > 0) {\n          this.infoService.AllAuthors = response[0].all_authors;\n        } else {\n          this.infoService.AllAuthors = 0;\n        }\n      },\n      error: (error: any) => {\n        console.error('Error al obtener las publicaciones en getBooks:', error);\n      }\n    });\n  }\n\n  // API CALL: Function to get All Schools\n  getSchools() {\n    this.apiService.getSchools().subscribe({\n      next: (response: any[]) => {\n        this.infoService.instituions = response;\n        this.generateTablesSchools(this.infoService.instituions);\n      },\n      error: (error: any) => {\n        console.error('Error in getSchools:', error);\n      }\n    });\n  }\n\n  // Function to generate table School\n  generateTablesSchools(researchers: any[]) {\n    const table = document.querySelector('#tableInstitution tbody');\n    if (table instanceof HTMLElement) {\n      researchers.forEach(({ School, NumberOfAuthors}) => {\n        const row = document.createElement('tr');\n        row.innerHTML = `<td >${School}</td><td>${NumberOfAuthors}</td>`;\n        // Aplicar alineaci√≥n de celdas\n        const firstCell = row.querySelector('td:first-child') as HTMLElement;\n            const lastCell = row.querySelector('td:last-child') as HTMLElement;\n            if (firstCell && lastCell) {\n                firstCell.style.textAlign = 'left';\n                lastCell.style.textAlign = 'center';\n            }\n        table.appendChild(row);\n      });\n    }\n  }\n\n  // Function to generate BarChart\n  generateBarChart(idChart: string, label: string, labels: any[], data: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: label,\n            data: data,\n            backgroundColor: 'rgb(0, 22, 68)',\n            borderColor: 'rgb(0, 22, 68)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }\n\n  // Function to generate Triple BarChart\n  generateBarChartTriple(idChart: string, labels: any[], ConferencesAndPapers: any[], JournalArticles: any[], Thesis: any[]) {\n    this.barChart = new Chart(idChart, {\n      type: 'bar',\n      data: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Conferences and Papers',\n            data: ConferencesAndPapers,\n            backgroundColor: 'rgba(255, 99, 132, 0.5)', \n            borderColor: 'rgba(255, 99, 132, 0.5)',\n            borderWidth: 1\n          },\n          {\n            label: 'Journal Articles',\n            data: JournalArticles,\n            backgroundColor: 'rgba(54, 162, 235, 1)', \n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n          },\n          {\n            label: 'Thesis',\n            data: Thesis,\n            backgroundColor: 'rgba(255, 206, 86, 2)',\n            borderColor: 'rgba(255, 206, 86, 2)',\n            borderWidth: 1\n          }\n        ]\n      },\n      options: {\n        plugins: {\n          legend: {\n            labels: {\n              color: 'black',\n              font: {\n                size: 18,\n                family: 'Roboto',\n              }\n            }\n          }\n        },\n        scales: {\n          y: {\n            beginAtZero: true\n          },\n          x:{\n            stacked: true\n          }\n        }\n      }\n    });\n  }\n\n   // Function to wait Data\n  async waitForData() {\n    while (this.infoService.PublicationsByYear.length < 1 || this.infoService.ConferencesByYear.length < 1 || this.infoService.AuthorsByYear.length < 1) {\n        await new Promise(resolve => setTimeout(resolve, 10000));\n    }\n  } \n\n  async main(){\n    try {\n\n      this.getAuthors();\n      this.getConferences();\n      this.getPublications();\n      \n      if(this.infoService.instituions.length < 1){\n        this.getSchools();\n      }else{\n        this.generateTablesSchools(this.infoService.instituions);\n      }\n    \n      while(this.infoService.AllPublications < 1 || this.infoService.AllConferences < 1\n        || this.infoService.AllAuthors < 1){\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.spinnerService.show()\n      }\n\n      this.allAuthors = this.infoService.AllAuthors\n      this.allPublications = this.infoService.AllPublications\n      this.allConferences = this.infoService.AllConferences\n\n\n      if(this.infoService.PublicationsByYear.length < 1){\n        this.getPublicationsbyYear();\n      }\n    \n      if(this.infoService.ConferencesByYear.length < 1){\n        this.getConferencesbyYear();\n      }\n    \n      if(this.infoService.AuthorsByYear.length < 1){\n        this.getAuthorsbyYear();\n      }\n      while(this.infoService.ConferencesByYear.length < 1){\n        this.loadingGraph1 = true;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.spinnerService.show()\n      }\n      this.loadingGraph1 = false;\n\n      //Conferences by Year\n      const Conferencesyears = this.infoService.ConferencesByYear.map(item => item.yearName);\n      this.generateBarChart('barChart3', 'Conferences by Year', Conferencesyears, this.infoService.ConferencesByYear.map(item => item.allConferences));\n\n      while(this.infoService.AuthorsByYear.length < 1){\n        this.loadingGraph2 = true;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.spinnerService.show()\n      }\n      this.loadingGraph2 = false;\n      //Authors by Year\n      const Authorsyears = this.infoService.AuthorsByYear.map(item => item.yearName);\n      this.generateBarChart('barChart2', 'Authors by Year', Authorsyears, this.infoService.AuthorsByYear.map(item => item.allAuthors));\n\n      while(this.infoService.PublicationsByYear.length < 1){\n        this.loadingGraph3 = true;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.spinnerService.show()\n      }\n      this.loadingGraph3 = false;\n\n      while(this.infoService.instituions.length < 1){\n        this.loadingGraph4 = true;\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        this.spinnerService.show()\n      }\n      this.loadingGraph4 = false;\n      //Publications by Year\n      this.generateBarChartTriple(\n        'tripleBarChart',\n        this.infoService.PublicationsByYear.map(item => item.yearName),\n        this.infoService.PublicationsByYear.map(item => item.ConferencesAndPapers),\n        this.infoService.PublicationsByYear.map(item => item.JournalArticles),\n        this.infoService.PublicationsByYear.map(item => item.Thesis)\n      );\n\n      this.spinnerService.hide()\n\n  } catch (error) {\n    console.error('Error in getData:', error);\n  }\n\n  }\n \n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}