{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class InfoService {\n  constructor() {\n    this.publicationsByYear = [];\n    this.authorsByYear = [];\n    this.conferencesByYear = [];\n    this.allPublications = 0;\n    this.allAuthors = 0;\n    this.allConferences = 0;\n    this.instituions = [];\n  }\n  get PublicationsByYear() {\n    return this.publicationsByYear;\n  }\n  set PublicationsByYear(publicationsByYear) {\n    this.publicationsByYear = publicationsByYear;\n  }\n  get AuthorsByYear() {\n    return this.authorsByYear;\n  }\n  set AuthorsByYear(authorsByYear) {\n    this.authorsByYear = authorsByYear;\n  }\n  get ConferencesByYear() {\n    return this.conferencesByYear;\n  }\n  set ConferencesByYear(conferencesByYear) {\n    this.conferencesByYear = conferencesByYear;\n  }\n  get AllPublications() {\n    return this.allPublications;\n  }\n  set AllPublications(allPublications) {\n    this.allPublications = allPublications;\n  }\n  get AllAuthors() {\n    return this.allAuthors;\n  }\n  set AllAuthors(allAuthors) {\n    this.allAuthors = allAuthors;\n  }\n  get AllConferences() {\n    return this.allConferences;\n  }\n  set AllConferences(allConferences) {\n    this.allConferences = allConferences;\n  }\n  static #_ = this.ɵfac = function InfoService_Factory(t) {\n    return new (t || InfoService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InfoService,\n    factory: InfoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["InfoService","constructor","publicationsByYear","authorsByYear","conferencesByYear","allPublications","allAuthors","allConferences","instituions","PublicationsByYear","AuthorsByYear","ConferencesByYear","AllPublications","AllAuthors","AllConferences","_","_2","factory","ɵfac","providedIn"],"sources":["/home/miguel/Collaboration_Networks/front-end/src/app/services/info.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoService {\n\n  private publicationsByYear:{ yearName: string, ConferencesAndPapers:number, JournalArticles:number, Thesis:number}[] = [];\n  private authorsByYear: { yearName: string, allAuthors: number }[] = [];\n  private conferencesByYear: { yearName: string, allConferences: number }[] = [];\n  private allPublications = 0;\n  private allAuthors = 0;\n  private allConferences = 0;\n  public instituions: { institution: String, researchers:number }[] = [];\n\n  get PublicationsByYear() {\n    return this.publicationsByYear;\n  }\n\n  set PublicationsByYear(publicationsByYear: { yearName: string, ConferencesAndPapers:number, JournalArticles:number, Thesis:number}[] ) {\n     this.publicationsByYear = publicationsByYear;\n  }\n  \n  get AuthorsByYear() {\n    return this.authorsByYear;\n  }\n\n  set AuthorsByYear(authorsByYear: { yearName: string, allAuthors: number }[]) {\n     this.authorsByYear = authorsByYear;\n  }\n  \n  get ConferencesByYear() {\n    return this.conferencesByYear;\n  }\n\n  set ConferencesByYear(conferencesByYear: { yearName: string, allConferences: number }[]) {\n    this.conferencesByYear = conferencesByYear;\n  }\n\n\n  get AllPublications() {\n    return this.allPublications;\n  }\n\n  set AllPublications(allPublications: number) {\n    this.allPublications = allPublications;\n  }\n  \n  \n  get AllAuthors() {\n    return this.allAuthors;\n  }\n\n  set AllAuthors(allAuthors: number) {\n    this.allAuthors = allAuthors;\n  }\n  \n  get AllConferences() {\n    return this.allConferences;\n  }\n\n  set AllConferences(allConferences: number) {\n     this.allConferences = allConferences;\n  }\n\n}\n"],"mappings":";AAKA,OAAM,MAAOA,WAAW;EAHxBC,YAAA;IAKU,KAAAC,kBAAkB,GAA6F,EAAE;IACjH,KAAAC,aAAa,GAA+C,EAAE;IAC9D,KAAAC,iBAAiB,GAAmD,EAAE;IACtE,KAAAC,eAAe,GAAG,CAAC;IACnB,KAAAC,UAAU,GAAG,CAAC;IACd,KAAAC,cAAc,GAAG,CAAC;IACnB,KAAAC,WAAW,GAAkD,EAAE;;EAEtE,IAAIC,kBAAkBA,CAAA;IACpB,OAAO,IAAI,CAACP,kBAAkB;EAChC;EAEA,IAAIO,kBAAkBA,CAACP,kBAA6G;IACjI,IAAI,CAACA,kBAAkB,GAAGA,kBAAkB;EAC/C;EAEA,IAAIQ,aAAaA,CAAA;IACf,OAAO,IAAI,CAACP,aAAa;EAC3B;EAEA,IAAIO,aAAaA,CAACP,aAAyD;IACxE,IAAI,CAACA,aAAa,GAAGA,aAAa;EACrC;EAEA,IAAIQ,iBAAiBA,CAAA;IACnB,OAAO,IAAI,CAACP,iBAAiB;EAC/B;EAEA,IAAIO,iBAAiBA,CAACP,iBAAiE;IACrF,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;EAC5C;EAGA,IAAIQ,eAAeA,CAAA;IACjB,OAAO,IAAI,CAACP,eAAe;EAC7B;EAEA,IAAIO,eAAeA,CAACP,eAAuB;IACzC,IAAI,CAACA,eAAe,GAAGA,eAAe;EACxC;EAGA,IAAIQ,UAAUA,CAAA;IACZ,OAAO,IAAI,CAACP,UAAU;EACxB;EAEA,IAAIO,UAAUA,CAACP,UAAkB;IAC/B,IAAI,CAACA,UAAU,GAAGA,UAAU;EAC9B;EAEA,IAAIQ,cAAcA,CAAA;IAChB,OAAO,IAAI,CAACP,cAAc;EAC5B;EAEA,IAAIO,cAAcA,CAACP,cAAsB;IACtC,IAAI,CAACA,cAAc,GAAGA,cAAc;EACvC;EAAC,QAAAQ,CAAA,G;qBA1DUf,WAAW;EAAA;EAAA,QAAAgB,EAAA,G;WAAXhB,WAAW;IAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}