{"ast":null,"code":"import { Network, DataSet } from 'vis';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/network.service\";\nimport * as i2 from \"../services/network.init.service\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = [\"menuDiv\"];\nconst _c1 = [\"treeContainer\"];\nfunction NetworksComponent_h1_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Selected node \", ctx_r1.selectNode.nodes, \"\");\n  }\n}\nfunction NetworksComponent_div_7_div_1_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const publication_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(publication_r8);\n  }\n}\nfunction NetworksComponent_div_7_div_1_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const publication_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(publication_r9);\n  }\n}\nfunction NetworksComponent_div_7_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 7)(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ul\");\n    i0.ɵɵtemplate(5, NetworksComponent_div_7_div_1_li_5_Template, 2, 1, \"li\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ul\");\n    i0.ɵɵtemplate(7, NetworksComponent_div_7_div_1_li_7_Template, 2, 1, \"li\", 6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const edge_r5 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"Common publications of \", ctx_r4.selectNode.nodes, \" and \", edge_r5, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.publicationsNode[edge_r5]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.publicationsNode[ctx_r4.selectNode.nodes]);\n  }\n}\nfunction NetworksComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, NetworksComponent_div_7_div_1_Template, 8, 4, \"div\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.selectNode.edges);\n  }\n}\nfunction NetworksComponent_div_8_li_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const publication_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(publication_r12);\n  }\n}\nfunction NetworksComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8, 9)(2, \"h1\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ul\");\n    i0.ɵɵtemplate(7, NetworksComponent_div_8_li_7_Template, 2, 1, \"li\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" Selected edge \", ctx_r3.selectEdge.edge.from, \" from \", ctx_r3.selectEdge.edge.to, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" Common publications of \", ctx_r3.selectEdge.edge.from, \" and \", ctx_r3.selectEdge.edge.to, \":\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.publications);\n  }\n}\nexport class NetworksComponent {\n  constructor(appNetworkService, appNetworkInitService) {\n    this.appNetworkService = appNetworkService;\n    this.appNetworkInitService = appNetworkInitService;\n    this.menuStatus = true;\n    this.publications = [];\n    this.publicationsNode = {};\n    this.objectKeys = Object.keys;\n    this.data = {};\n    this.nodes = new DataSet();\n    this.edges = new DataSet();\n    this.selectedData = new Subject();\n  }\n  ngOnInit() {\n    this.nameAuthor = this.appNetworkInitService.selectedAuthors;\n    const networkOptions = this.appNetworkService.getNetworkOptions();\n    networkOptions.height = '800px';\n    this.nodes = this.appNetworkInitService.getNodes();\n    this.edges = this.appNetworkInitService.getEdges();\n    this.data = {\n      nodes: this.nodes,\n      edges: this.edges\n    };\n    this.network = new Network(this.treeContainer.nativeElement, this.data, networkOptions);\n    this.network.on('select', params => this.onSelect(params));\n    this.network.on('click', params => this.onClick(params));\n  }\n  ngOnDestroy() {\n    if (this.network != null) this.network.destroy();\n  }\n  onClick(params) {\n    if (params.nodes.length < 1) {\n      if (params.edges.length > 0) {\n        this.onClickEdge(params);\n      }\n    }\n  }\n  onClickEdge(params) {\n    const edgeId = params.edges[0];\n    const edge = this.edges.get(edgeId);\n    this.publications = [];\n    this.selectEdge = {\n      edge: edge,\n      type: 'edge'\n    };\n    const researcherName = this.selectEdge.edge.to;\n    this.appNetworkInitService.nameAuthors = this.appNetworkInitService.nameAuthors.map(author => {\n      if (author.researcher === researcherName) {\n        this.publications = this.publications.concat(author.publications);\n      }\n      return author;\n    });\n    this.selectNode = null;\n  }\n  onSelect(params) {\n    if (params.nodes.length == 1) {\n      const selectedNodeId = params.nodes[0];\n      const connectedEdges = this.network.getConnectedEdges(selectedNodeId);\n      const connectedNodes = [];\n      this.publicationsNode = {};\n      connectedEdges.forEach(edgeId => {\n        const edge = this.edges.get(edgeId);\n        if (edge) {\n          if (edge.to == params.nodes) {\n            connectedNodes.push(edge.from);\n          } else {\n            connectedNodes.push(edge.to);\n          }\n          this.appNetworkInitService.nameAuthors = this.appNetworkInitService.nameAuthors.map(author => {\n            var uniquePublicationsSet = new Set();\n            if (author.researcher === edge.to) {\n              var uniquePublications = [];\n              author.publications.forEach(publication => {\n                uniquePublicationsSet.add(publication);\n              });\n              var uniquePublications = Array.from(uniquePublicationsSet);\n              this.publicationsNode[author.researcher] = uniquePublications;\n            }\n            return author;\n          });\n        }\n      });\n      const result = {\n        edges: connectedNodes,\n        nodes: params.nodes,\n        pointer: params.pointer\n      };\n      if (this.selectNode) {\n        this.prevSelectNode = this.selectNode;\n      }\n      this.selectNode = result;\n      this.selectEdge = null;\n    }\n  }\n  static #_ = this.ɵfac = function NetworksComponent_Factory(t) {\n    return new (t || NetworksComponent)(i0.ɵɵdirectiveInject(i1.AppNetworkService), i0.ɵɵdirectiveInject(i2.AppNetworkInitService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NetworksComponent,\n    selectors: [[\"app-networks\"]],\n    viewQuery: function NetworksComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menuDiv = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.treeContainer = _t.first);\n      }\n    },\n    decls: 9,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"tree\", 2, \"height\", \"800px\"], [\"treeContainer\", \"\"], [2, \"display\", \"flex\", \"flex\", \"1\"], [4, \"ngIf\"], [\"style\", \"display: flex; flex: 4;\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [2, \"margin-right\", \"20px\"], [2, \"display\", \"flex\", \"flex\", \"4\"], [\"menuDiv\", \"\"]],\n    template: function NetworksComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"div\", 1, 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtemplate(6, NetworksComponent_h1_6_Template, 2, 1, \"h1\", 4)(7, NetworksComponent_div_7_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, NetworksComponent_div_8_Template, 8, 5, \"div\", 5);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.nameAuthor, \" Collaboration Network\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectNode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectNode);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.selectEdge && ctx.selectEdge.type === \"edge\");\n      }\n    },\n    dependencies: [i3.NgForOf, i3.NgIf],\n    styles: [\"@charset \\\"UTF-8\\\";\\n.conteiner[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  min-height: 100vh;\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-size: 40px;\\n}\\n\\n#treeContainer[_ngcontent-%COMP%] {\\n  height: 800px; \\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbmV0d29ya3MvbmV0d29ya3MuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQWhCO0VBQ0ksYUFBQTtFQUNBLHVCQUFBO0VBQ0EsaUJBQUE7QUFFSjs7QUFFQTtFQUNJLGtCQUFBO0VBQ0EsZUFBQTtBQUNKOztBQUVBO0VBQ0ksYUFBQSxFQUFBLHlDQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVpbmVye1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgXG59XG5cbmgye1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBmb250LXNpemU6IDQwcHg7XG59XG5cbiN0cmVlQ29udGFpbmVyIHtcbiAgICBoZWlnaHQ6IDgwMHB4OyAvKiBBanVzdGEgbGEgYWx0dXJhIHNlZ8ODwrpuIHNlYSBuZWNlc2FyaW8gKi9cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["Network","DataSet","Subject","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","selectNode","nodes","ɵɵtextInterpolate","publication_r8","publication_r9","ɵɵtemplate","NetworksComponent_div_7_div_1_li_5_Template","NetworksComponent_div_7_div_1_li_7_Template","ɵɵtextInterpolate2","ctx_r4","edge_r5","ɵɵproperty","publicationsNode","NetworksComponent_div_7_div_1_Template","ctx_r2","edges","publication_r12","NetworksComponent_div_8_li_7_Template","ctx_r3","selectEdge","edge","from","to","publications","NetworksComponent","constructor","appNetworkService","appNetworkInitService","menuStatus","objectKeys","Object","keys","data","selectedData","ngOnInit","nameAuthor","selectedAuthors","networkOptions","getNetworkOptions","height","getNodes","getEdges","network","treeContainer","nativeElement","on","params","onSelect","onClick","ngOnDestroy","destroy","length","onClickEdge","edgeId","get","type","researcherName","nameAuthors","map","author","researcher","concat","selectedNodeId","connectedEdges","getConnectedEdges","connectedNodes","forEach","push","uniquePublicationsSet","Set","uniquePublications","publication","add","Array","result","pointer","prevSelectNode","_","ɵɵdirectiveInject","i1","AppNetworkService","i2","AppNetworkInitService","_2","selectors","viewQuery","NetworksComponent_Query","rf","ctx","ɵɵelement","NetworksComponent_h1_6_Template","NetworksComponent_div_7_Template","NetworksComponent_div_8_Template"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/networks/networks.component.ts","/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/networks/networks.component.html"],"sourcesContent":["import {\n  Component,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { Network, DataSet, Data, Edge } from 'vis';\nimport { AppNetworkService } from '../services/network.service';\nimport { Subject } from 'rxjs';\nimport { AppNetworkInitService } from '../services/network.init.service';\nimport { Node } from '../models/network.model'\nimport { ApiService } from '../services/api.service';\n\n\n@Component({\n  selector: 'app-networks',\n  templateUrl: './networks.component.html',\n  styleUrl: './networks.component.scss'\n})\nexport class NetworksComponent implements OnInit, OnDestroy {\n\n  @ViewChild('menuDiv', { static: true })\n  menuDiv!: ElementRef;\n\n  @ViewChild('treeContainer', { static: true })\n  treeContainer!: ElementRef;\n  nameAuthor: any;\n\n  menuStatus: boolean = true;\n  selectNode: any;\n  selectEdge: any;\n  prevSelectNode: any;\n  publications: any[] = [];\n  publicationsNode: { [key: string]: string[] } = {};\n  objectKeys = Object.keys;\n\n  private data: any = {};\n  private nodes: DataSet<Node> = new DataSet<Node>();\n  private edges: DataSet<Edge> = new DataSet<Edge>();\n  public selectedData: Subject<Data>;\n  private network!: Network;\n\n  constructor(\n    private appNetworkService: AppNetworkService,\n    private appNetworkInitService: AppNetworkInitService,\n  ) {\n    this.selectedData = new Subject<Data>();\n  }\n\n  public ngOnInit(): void {\n\n\n    this.nameAuthor = this.appNetworkInitService.selectedAuthors;\n\n    const networkOptions = this.appNetworkService.getNetworkOptions();\n    networkOptions.height = '800px'; \n\n\n    this.nodes = this.appNetworkInitService.getNodes();\n    this.edges = this.appNetworkInitService.getEdges();\n    this.data = {\n      nodes: this.nodes,\n      edges: this.edges,\n    };\n\n    this.network = new Network(\n      this.treeContainer.nativeElement,\n      this.data,\n      networkOptions\n    );\n\n    this.network.on('select', (params) => this.onSelect(params));\n    this.network.on('click', (params) => this.onClick(params));\n  }\n\n  public ngOnDestroy(): void {\n    if (this.network != null) this.network.destroy();\n  }\n\n  private onClick(params: any): void {\n   \n    if (params.nodes.length < 1) {\n      if (params.edges.length > 0) {\n        this.onClickEdge(params);\n      }\n    }\n\n}\n\n  private onClickEdge(params: any): void {\n\n    const edgeId = params.edges[0];\n\n    const edge = this.edges.get(edgeId);\n\n    this.publications = [];\n\n    this.selectEdge = {\n      edge: edge,\n      type: 'edge'\n    };\n\n    const researcherName = this.selectEdge.edge.to;\n\n    this.appNetworkInitService.nameAuthors = this.appNetworkInitService.nameAuthors.map((author: any) => {\n      if (author.researcher === researcherName) {\n        this.publications = this.publications.concat(author.publications);\n      }\n      return author;\n    });\n\n    this.selectNode = null;\n\n  }\n\n  private onSelect(params: any): void {\n\n\n    if (params.nodes.length == 1) {\n      const selectedNodeId = params.nodes[0];\n      const connectedEdges = this.network.getConnectedEdges(selectedNodeId);\n      const connectedNodes: any[] = [];\n      this.publicationsNode = {};\n\n      connectedEdges.forEach(edgeId => {\n        const edge = this.edges.get(edgeId);\n        if (edge) {\n          if (edge.to == params.nodes) {\n            connectedNodes.push(edge.from);\n          } else {\n            connectedNodes.push(edge.to);\n          }\n\n          this.appNetworkInitService.nameAuthors = this.appNetworkInitService.nameAuthors.map((author: any) => {\n            var uniquePublicationsSet = new Set();\n\n            if (author.researcher === edge.to) {\n              var uniquePublications: any = []\n              author.publications.forEach((publication: any) => {\n                 uniquePublicationsSet.add(publication);\n              });\n\n              var uniquePublications: any = Array.from(uniquePublicationsSet);\n\n              this.publicationsNode[author.researcher] = uniquePublications;\n            }\n            return author;\n\n          });\n\n        }\n\n      });\n\n      const result = {\n        edges: connectedNodes,\n        nodes: params.nodes,\n        pointer: params.pointer,\n      };\n\n      if (this.selectNode) {\n        this.prevSelectNode = this.selectNode;\n      }\n      this.selectNode = result;\n      this.selectEdge = null;\n    }\n  }\n}\n\n","<div class=\"container\">\n\n   <!-- Title -->\n   <h2>{{nameAuthor}} Collaboration Network</h2>\n\n   <div class=\"tree\" #treeContainer style=\"height: 800px;\"></div>\n   \n   <div style=\"display: flex; flex: 1;\">\n    <h1 *ngIf=\"selectNode\">Selected node {{ selectNode.nodes }}</h1> \n    <div *ngIf=\"selectNode\">\n      <div *ngFor=\"let edge of selectNode.edges\">\n        <div style=\"margin-right: 20px;\"> <!-- Ajusta el margen entre los elementos -->\n          <div>Common publications of {{ selectNode.nodes }} and {{ edge }}:</div>\n          <ul>\n            <li *ngFor=\"let publication of publicationsNode[edge]\">{{ publication }}</li>\n          </ul>\n          <ul>\n            <li *ngFor=\"let publication of publicationsNode[selectNode.nodes]\">{{ publication }}</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div #menuDiv style=\"display: flex; flex: 4;\" *ngIf=\"selectEdge && selectEdge.type === 'edge'\">\n    <h1> Selected edge {{ selectEdge.edge.from }} from {{ selectEdge.edge.to }}</h1> \n    <div> Common publications of  {{ selectEdge.edge.from }} and {{ selectEdge.edge.to }}:</div>\n    <ul>\n      <li *ngFor=\"let publication of publications\">{{ publication }}</li>\n    </ul>\n  </div>\n  \n</div>  \n \n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}