{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class AppNetworkService {\n  getNetworkOptions() {\n    return {\n      autoResize: true,\n      height: \"500px\",\n      width: \"100%\",\n      physics: {\n        enabled: true\n      },\n      layout: {\n        randomSeed: undefined,\n        improvedLayout: true\n      },\n      nodes: {\n        scaling: {\n          min: 150,\n          max: 160,\n          label: {\n            enabled: false,\n            min: 14,\n            max: 30,\n            maxVisible: 40,\n            drawThreshold: 5\n          },\n          customScalingFunction: (min, max, total, value) => {\n            if (max === min) {\n              return 0.5;\n            } else {\n              let scale = 1 / (max - min);\n              return Math.max(0, (value - min) * scale);\n            }\n          }\n        },\n        size: 20,\n        font: {\n          size: 20,\n          color: \"#ffffff\"\n        },\n        color: {\n          background: \"#ff0000\",\n          border: \"#000000\",\n          highlight: {\n            background: \"#00ff00\",\n            border: \"#000000\" // Cambia el color del borde de los nodos cuando se resaltan\n          },\n\n          hover: {\n            background: \"#0000ff\",\n            border: \"#000000\" // Cambia el color del borde de los nodos cuando se pasa el cursor sobre ellos\n          }\n        }\n      }\n    };\n  }\n  static #_ = this.ɵfac = function AppNetworkService_Factory(t) {\n    return new (t || AppNetworkService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AppNetworkService,\n    factory: AppNetworkService.ɵfac\n  });\n}","map":{"version":3,"names":["AppNetworkService","getNetworkOptions","autoResize","height","width","physics","enabled","layout","randomSeed","undefined","improvedLayout","nodes","scaling","min","max","label","maxVisible","drawThreshold","customScalingFunction","total","value","scale","Math","size","font","color","background","border","highlight","hover","_","_2","factory","ɵfac"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/services/network.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Options, DataSet } from \"vis\";\n\n@Injectable()\nexport class AppNetworkService {\n  public getNetworkOptions(): Options {\n    return {\n      autoResize: true,\n      height: \"500px\",\n      width: \"100%\",\n      physics: { enabled: true },\n      layout: {\n        randomSeed: undefined,\n        improvedLayout: true,\n      },\n      nodes: {\n        scaling: {\n          min: 150,\n          max: 160,\n          label: {\n            enabled: false,\n            min: 14,\n            max: 30,\n            maxVisible: 40,\n            drawThreshold: 5\n          },\n          customScalingFunction: (\n            min: number,\n            max: number,\n            total: number,\n            value: number\n          ) => {\n            if (max === min) {\n              return 0.5;\n            } else {\n              let scale = 1 / (max - min);\n              return Math.max(0, (value - min) * scale);\n            }\n          }\n        },\n        size: 20,\n        font: {\n          size: 20,\n          color: \"#ffffff\"\n        },\n        color: {\n          background: \"#ff0000\", // Cambia el color de fondo de los nodos\n          border: \"#000000\", // Cambia el color del borde de los nodos\n          highlight: {\n            background: \"#00ff00\", // Cambia el color de fondo de los nodos cuando se resaltan\n            border: \"#000000\" // Cambia el color del borde de los nodos cuando se resaltan\n          },\n          hover: {\n            background: \"#0000ff\", // Cambia el color de fondo de los nodos cuando se pasa el cursor sobre ellos\n            border: \"#000000\" // Cambia el color del borde de los nodos cuando se pasa el cursor sobre ellos\n          }\n        }\n      \n      }\n    };\n  }\n}"],"mappings":";AAIA,OAAM,MAAOA,iBAAiB;EACrBC,iBAAiBA,CAAA;IACtB,OAAO;MACLC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,OAAO;MACfC,KAAK,EAAE,MAAM;MACbC,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAI,CAAE;MAC1BC,MAAM,EAAE;QACNC,UAAU,EAAEC,SAAS;QACrBC,cAAc,EAAE;OACjB;MACDC,KAAK,EAAE;QACLC,OAAO,EAAE;UACPC,GAAG,EAAE,GAAG;UACRC,GAAG,EAAE,GAAG;UACRC,KAAK,EAAE;YACLT,OAAO,EAAE,KAAK;YACdO,GAAG,EAAE,EAAE;YACPC,GAAG,EAAE,EAAE;YACPE,UAAU,EAAE,EAAE;YACdC,aAAa,EAAE;WAChB;UACDC,qBAAqB,EAAEA,CACrBL,GAAW,EACXC,GAAW,EACXK,KAAa,EACbC,KAAa,KACX;YACF,IAAIN,GAAG,KAAKD,GAAG,EAAE;cACf,OAAO,GAAG;aACX,MAAM;cACL,IAAIQ,KAAK,GAAG,CAAC,IAAIP,GAAG,GAAGD,GAAG,CAAC;cAC3B,OAAOS,IAAI,CAACR,GAAG,CAAC,CAAC,EAAE,CAACM,KAAK,GAAGP,GAAG,IAAIQ,KAAK,CAAC;;UAE7C;SACD;QACDE,IAAI,EAAE,EAAE;QACRC,IAAI,EAAE;UACJD,IAAI,EAAE,EAAE;UACRE,KAAK,EAAE;SACR;QACDA,KAAK,EAAE;UACLC,UAAU,EAAE,SAAS;UACrBC,MAAM,EAAE,SAAS;UACjBC,SAAS,EAAE;YACTF,UAAU,EAAE,SAAS;YACrBC,MAAM,EAAE,SAAS,CAAC;WACnB;;UACDE,KAAK,EAAE;YACLH,UAAU,EAAE,SAAS;YACrBC,MAAM,EAAE,SAAS,CAAC;;;;KAKzB;EACH;EAAC,QAAAG,CAAA,G;qBAxDU9B,iBAAiB;EAAA;EAAA,QAAA+B,EAAA,G;WAAjB/B,iBAAiB;IAAAgC,OAAA,EAAjBhC,iBAAiB,CAAAiC;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}