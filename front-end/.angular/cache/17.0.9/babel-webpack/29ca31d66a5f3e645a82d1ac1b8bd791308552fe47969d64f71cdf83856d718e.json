{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class SpinnerService {\n  constructor() {\n    this.isLoading$ = new Subject();\n  }\n  show() {\n    this.isLoading$.next(true);\n  }\n  hide() {\n    this.isLoading$.next(false);\n  }\n  static #_ = this.ɵfac = function SpinnerService_Factory(t) {\n    return new (t || SpinnerService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SpinnerService,\n    factory: SpinnerService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["Subject","SpinnerService","constructor","isLoading$","show","next","hide","_","_2","factory","ɵfac","providedIn"],"sources":["/home/miguel/Collaboration_Networks/front-end/src/app/services/spinner.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpinnerService {\n  isLoading$ = new Subject<boolean>();\n\n\n  show(): void {\n    this.isLoading$.next(true)\n  }\n\n  hide(): void {\n    this.isLoading$.next(false)\n  }\n\n\n}"],"mappings":"AACA,SAASA,OAAO,QAAQ,MAAM;;AAK9B,OAAM,MAAOC,cAAc;EAH3BC,YAAA;IAIE,KAAAC,UAAU,GAAG,IAAIH,OAAO,EAAW;;EAGnCI,IAAIA,CAAA;IACF,IAAI,CAACD,UAAU,CAACE,IAAI,CAAC,IAAI,CAAC;EAC5B;EAEAC,IAAIA,CAAA;IACF,IAAI,CAACH,UAAU,CAACE,IAAI,CAAC,KAAK,CAAC;EAC7B;EAAC,QAAAE,CAAA,G;qBAVUN,cAAc;EAAA;EAAA,QAAAO,EAAA,G;WAAdP,cAAc;IAAAQ,OAAA,EAAdR,cAAc,CAAAS,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}