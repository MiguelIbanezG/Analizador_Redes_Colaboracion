{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/network.service\";\nexport class SelectedNodesDirective {\n  constructor(el, renderer, appNetworkService) {\n    this.el = el;\n    this.renderer = renderer;\n    this.appNetworkService = appNetworkService;\n    this.subscriptions = new Subscription();\n  }\n  ngOnInit() {\n    // this.subscriptions.add(\n    //   this.selected.subscribe((value: Data) => {\n    //     const network = new Network(\n    //       this.el.nativeElement,\n    //       value,\n    //       this.appNetworkService.getNetworkOptions()\n    //     );\n    //   })\n    // );\n  }\n  ngOnDestroy() {\n    if (this.subscriptions) this.subscriptions.unsubscribe();\n  }\n  static #_ = this.ɵfac = function SelectedNodesDirective_Factory(t) {\n    return new (t || SelectedNodesDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.AppNetworkService));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: SelectedNodesDirective,\n    selectors: [[\"\", \"selected-nodes\", \"\"]],\n    inputs: {\n      selected: \"selected\"\n    }\n  });\n}","map":{"version":3,"names":["Subscription","SelectedNodesDirective","constructor","el","renderer","appNetworkService","subscriptions","ngOnInit","ngOnDestroy","unsubscribe","_","i0","ɵɵdirectiveInject","ElementRef","Renderer2","i1","AppNetworkService","_2","selectors","inputs","selected"],"sources":["/home/miguel/Analizador_Redes_Colaboracion/interfaz/src/app/services/selected-nodes.directive.ts"],"sourcesContent":["import {\n    Directive,\n    ElementRef,\n    Renderer2,\n    Input,\n    OnInit,\n    AfterViewInit,\n    OnDestroy,\n    Injectable,\n  } from '@angular/core';\n  import { Network, Data } from 'vis';\n  import { AppNetworkService } from '../services/network.service';\n  import { Observable, Subscription } from 'rxjs';\n  import { NgModule } from '@angular/core';\n  \n  @Directive({\n    selector: '[selected-nodes]',\n  })\n\n  export class SelectedNodesDirective implements OnInit, OnDestroy {\n    @Input('selected')\n      selected!: Observable<Data>;\n    subscriptions: Subscription;\n    constructor(\n      private el: ElementRef,\n      private renderer: Renderer2,\n      private appNetworkService: AppNetworkService\n    ) {\n      this.subscriptions = new Subscription();\n    }\n  \n    ngOnInit(): void {\n      // this.subscriptions.add(\n      //   this.selected.subscribe((value: Data) => {\n      //     const network = new Network(\n      //       this.el.nativeElement,\n      //       value,\n      //       this.appNetworkService.getNetworkOptions()\n      //     );\n      //   })\n      // );\n    }\n    ngOnDestroy(): void {\n      if (this.subscriptions) this.subscriptions.unsubscribe();\n    }\n  }\n  "],"mappings":"AAYE,SAAqBA,YAAY,QAAQ,MAAM;;;AAO/C,OAAM,MAAOC,sBAAsB;EAIjCC,YACUC,EAAc,EACdC,QAAmB,EACnBC,iBAAoC;IAFpC,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,QAAQ,GAARA,QAAQ;IACR,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAEzB,IAAI,CAACC,aAAa,GAAG,IAAIN,YAAY,EAAE;EACzC;EAEAO,QAAQA,CAAA;IACN;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;EAEFC,WAAWA,CAAA;IACT,IAAI,IAAI,CAACF,aAAa,EAAE,IAAI,CAACA,aAAa,CAACG,WAAW,EAAE;EAC1D;EAAC,QAAAC,CAAA,G;qBAzBUT,sBAAsB,EAAAU,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAE,UAAA,GAAAF,EAAA,CAAAC,iBAAA,CAAAD,EAAA,CAAAG,SAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,iBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtBhB,sBAAsB;IAAAiB,SAAA;IAAAC,MAAA;MAAAC,QAAA;IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}